var Qe=Object.defineProperty;var Ke=(r,t,n)=>t in r?Qe(r,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):r[t]=n;var N=(r,t,n)=>(Ke(r,typeof t!="symbol"?t+"":t,n),n);import{u as oe,b as Re,j as e,Z as Ze,$ as et,B as j,n as tt,d as S,av as O,a0 as st,m as R,W as H,aw as Ee,ax as me,ay as nt,a3 as Q,I as se,aa as ye,a9 as be,az as rt,ai as ot,U as z,aA as it,V as je,aB as ze,Y as G,aC as ie,H as lt,S as at,aD as De,an as He,aE as We,L as ct,e as dt,f as ht,a1 as ut,g as pt,D as le,a4 as K,aF as Me,aG as gt,aH as ft,x as xt,aI as mt,ak as yt,aJ as bt,aK as Ae,aL as Fe,aM as Pe,ac as ae,ad as ve,ae as V,af as k,ag as ce,aN as Ne,aO as Le,aP as vt,aQ as pe,ab as we,aR as ge,aS as Oe,aT as jt,aU as St,aV as Tt,aW as Lt,aX as wt,E as fe,aY as Ct,aZ as qt,a_ as Bt,a$ as kt,R as Ce,b0 as $t,G as qe,b1 as Be,b2 as ke,p as _,b3 as It}from"./vendor-mui-LwTDUuqz.js";import{r as L}from"./vendor-react-5UJDq-bj.js";import{a as ne}from"./AudioService-CX4mQyd0.js";import{v as Rt,h as Et,E as zt}from"./vendor-utils-CywV0fR4.js";import{S as Dt,C as Ht,a as Wt,L as Mt,b as At,P as Ft,c as Pt,p as Nt,d as Ot,e as Yt}from"./vendor-charts-Cpg01M45.js";class Vt{constructor(){N(this,"patients",[]);this.initializePatients()}initializePatients(){this.patients=[{id:"patient1",name:"Alex Johnson",description:"Young adult with normal hearing",difficulty:"beginner",hearingLossType:"normal",thresholds:this.generateNormalHearingThresholds()},{id:"patient2",name:"Sarah Miller",description:"Middle-aged with mild high-frequency sensorineural hearing loss",difficulty:"beginner",hearingLossType:"sensorineural",thresholds:this.generateMildHighFrequencyLoss()},{id:"patient3",name:"Robert Chen",description:"Adult with moderate flat conductive hearing loss",difficulty:"intermediate",hearingLossType:"conductive",thresholds:this.generateConductiveLoss()},{id:"patient4",name:"Maria Garcia",description:"Elderly with asymmetrical sensorineural hearing loss",difficulty:"intermediate",hearingLossType:"asymmetrical",thresholds:this.generateAsymmetricalLoss()},{id:"patient5",name:"James Wilson",description:"Adult with mixed hearing loss",difficulty:"advanced",hearingLossType:"mixed",thresholds:this.generateMixedLoss()},{id:"patient6",name:"Eliza Thompson",description:"Child with severe-profound sensorineural hearing loss",difficulty:"advanced",hearingLossType:"sensorineural",thresholds:this.generateSevereProfoundLoss()}]}generateNormalHearingThresholds(){const t=[];return[250,500,750,1e3,1500,2e3,3e3,4e3,6e3,8e3].forEach(s=>{t.push({frequency:s,hearingLevel:this.getRandomLevel(-10,15),ear:"right",testType:"air",responseStatus:"threshold"}),t.push({frequency:s,hearingLevel:this.getRandomLevel(-10,15),ear:"left",testType:"air",responseStatus:"threshold"})}),[250,500,1e3,2e3,3e3,4e3].forEach(s=>{t.push({frequency:s,hearingLevel:this.getRandomLevel(-10,15),ear:"right",testType:"bone",responseStatus:"threshold"}),t.push({frequency:s,hearingLevel:this.getRandomLevel(-10,15),ear:"left",testType:"bone",responseStatus:"threshold"})}),t}generateMildHighFrequencyLoss(){const t=[];return[250,500,750,1e3,1500,2e3,3e3,4e3,6e3,8e3].forEach(s=>{let l=10,h=10;s>=2e3&&(l=Math.min(85,10+Math.round((s-1500)/100)),h=Math.min(85,10+Math.round((s-1500)/100))),l=l+this.getRandomLevel(-5,5),h=h+this.getRandomLevel(-5,5),t.push({frequency:s,hearingLevel:l,ear:"right",testType:"air",responseStatus:"threshold"}),t.push({frequency:s,hearingLevel:h,ear:"left",testType:"air",responseStatus:"threshold"})}),[250,500,1e3,2e3,3e3,4e3].forEach(s=>{let l=10,h=10;s>=2e3&&(l=Math.min(85,10+Math.round((s-1500)/100)),h=Math.min(85,10+Math.round((s-1500)/100))),l=l+this.getRandomLevel(-5,5),h=h+this.getRandomLevel(-5,5),t.push({frequency:s,hearingLevel:l,ear:"right",testType:"bone",responseStatus:"threshold"}),t.push({frequency:s,hearingLevel:h,ear:"left",testType:"bone",responseStatus:"threshold"})}),t}generateConductiveLoss(){const t=[];return[250,500,750,1e3,1500,2e3,3e3,4e3,6e3,8e3].forEach(s=>{const l=40+this.getRandomLevel(0,15),h=40+this.getRandomLevel(0,15);t.push({frequency:s,hearingLevel:l,ear:"right",testType:"air",responseStatus:"threshold"}),t.push({frequency:s,hearingLevel:h,ear:"left",testType:"air",responseStatus:"threshold"})}),[250,500,1e3,2e3,3e3,4e3].forEach(s=>{const l=this.getRandomLevel(-10,15),h=this.getRandomLevel(-10,15);t.push({frequency:s,hearingLevel:l,ear:"right",testType:"bone",responseStatus:"threshold"}),t.push({frequency:s,hearingLevel:h,ear:"left",testType:"bone",responseStatus:"threshold"})}),t}generateAsymmetricalLoss(){const t=[250,500,750,1e3,1500,2e3,3e3,4e3,6e3,8e3],n=[];return t.forEach(o=>{let s;o<=1e3?s=this.getRandomLevel(15,25):s=this.getRandomLevel(30,45);let l;o<=1e3?l=this.getRandomLevel(40,55):l=this.getRandomLevel(60,75),n.push({frequency:o,hearingLevel:s,ear:"right",testType:"air",responseStatus:"threshold"}),n.push({frequency:o,hearingLevel:l,ear:"left",testType:"air",responseStatus:"threshold"}),o<=4e3&&(n.push({frequency:o,hearingLevel:s,ear:"right",testType:"bone",responseStatus:"threshold"}),n.push({frequency:o,hearingLevel:l,ear:"left",testType:"bone",responseStatus:"threshold"}))}),n}generateMixedLoss(){const t=[250,500,750,1e3,1500,2e3,3e3,4e3,6e3,8e3],n=[],o=25;return t.forEach(s=>{let l,h;s<=1e3?(l=this.getRandomLevel(20,30),h=this.getRandomLevel(20,30)):(l=this.getRandomLevel(40,55),h=this.getRandomLevel(40,55));const a=l+o,p=h+o;n.push({frequency:s,hearingLevel:a,ear:"right",testType:"air",responseStatus:"threshold"}),n.push({frequency:s,hearingLevel:p,ear:"left",testType:"air",responseStatus:"threshold"}),s<=4e3&&(n.push({frequency:s,hearingLevel:l,ear:"right",testType:"bone",responseStatus:"threshold"}),n.push({frequency:s,hearingLevel:h,ear:"left",testType:"bone",responseStatus:"threshold"}))}),n}generateSevereProfoundLoss(){const t=[250,500,750,1e3,1500,2e3,3e3,4e3,6e3,8e3],n=[];return t.forEach(o=>{const s=this.getRandomLevel(80,110),l=this.getRandomLevel(80,110);n.push({frequency:o,hearingLevel:s,ear:"right",testType:"air",responseStatus:"threshold"}),n.push({frequency:o,hearingLevel:l,ear:"left",testType:"air",responseStatus:"threshold"}),o<=4e3&&(n.push({frequency:o,hearingLevel:s,ear:"right",testType:"bone",responseStatus:o<=1e3?"threshold":"no_response"}),n.push({frequency:o,hearingLevel:l,ear:"left",testType:"bone",responseStatus:o<=1e3?"threshold":"no_response"}))}),n}getRandomLevel(t,n){t=Math.max(5,t);const o=Math.round((Math.random()*(n-t)+t)/5)*5;return Math.min(120,Math.max(5,o))}getAllPatients(){return[...this.patients]}getPatientById(t){return this.patients.find(n=>n.id===t)}getPatientsByDifficulty(t){return this.patients.filter(n=>n.difficulty===t)}getPatientsByType(t){return this.patients.filter(n=>n.hearingLossType===t)}}const Se=new Vt,Ut={beginner:"success",intermediate:"warning",advanced:"error"},_t={normal:"success",conductive:"info",sensorineural:"warning",mixed:"error",asymmetrical:"secondary"},Jt=r=>r.split(" ").map(t=>t.charAt(0)).join("").toUpperCase(),Xt=({patient:r,onSelect:t,selected:n=!1})=>{const o=oe(),s=Re(o.breakpoints.down("sm"));return e.jsxs(Ze,{elevation:n?8:3,sx:{maxWidth:"100%",transition:"all 0.3s ease",transform:n?"scale(1.02)":"scale(1)",border:n?"2px solid #3f51b5":"none",height:"100%",display:"flex",flexDirection:"column"},children:[e.jsxs(et,{sx:{flexGrow:1,p:{xs:1.5,sm:2}},children:[e.jsxs(j,{sx:{display:"flex",flexDirection:{xs:"column",sm:"row"},alignItems:{xs:"center",sm:"flex-start"},mb:2},children:[e.jsx(tt,{sx:{bgcolor:n?"#3f51b5":"#9c27b0",width:{xs:48,sm:56},height:{xs:48,sm:56},mr:{xs:0,sm:2},mb:{xs:1,sm:0}},children:Jt(r.name)}),e.jsxs(j,{sx:{width:"100%",textAlign:{xs:"center",sm:"left"}},children:[e.jsx(S,{variant:"h6",component:"div",gutterBottom:!0,children:r.name}),e.jsxs(j,{sx:{display:"flex",gap:1,flexWrap:"wrap",justifyContent:{xs:"center",sm:"flex-start"}},children:[e.jsx(O,{label:r.difficulty,size:"small",color:Ut[r.difficulty]}),e.jsx(O,{label:r.hearingLossType.replace("_"," "),size:"small",color:_t[r.hearingLossType]})]})]})]}),e.jsx(S,{variant:"body2",color:"text.secondary",paragraph:!0,sx:{textAlign:{xs:"center",sm:"left"}},children:r.description}),e.jsxs(j,{sx:{display:"flex",flexDirection:{xs:"column",sm:"row"},justifyContent:"space-between",gap:1},children:[e.jsxs(S,{variant:"body2",color:"text.secondary",children:[e.jsx("strong",{children:"Profile ID:"})," ",r.id]}),e.jsxs(S,{variant:"body2",color:"text.secondary",children:[e.jsx("strong",{children:"Thresholds:"})," ",r.thresholds.length," data points"]})]})]}),e.jsx(st,{sx:{p:{xs:1,sm:1.5}},children:e.jsx(R,{size:s?"medium":"small",variant:n?"contained":"outlined",color:"primary",onClick:()=>t(r),fullWidth:!0,children:n?"Selected":"Select Patient"})})]})};class Gt{constructor(){N(this,"currentSession",null);N(this,"activeSessions",[]);N(this,"completedSessions",[]);N(this,"falsePositiveCount",0);N(this,"testFrequencies",[250,500,750,1e3,1500,2e3,3e3,4e3,6e3,8e3]);N(this,"boneTestFrequencies",[500,1e3,2e3,4e3]);N(this,"testTypes",["air","bone"]);N(this,"defaultStartLevel",40);N(this,"initialStepSize",10);N(this,"finalStepSize",5);N(this,"includeBoneConduction",!0);N(this,"includeAirConduction",!0)}startSession(t,n){n&&(n.includeAirConduction!==void 0&&(this.includeAirConduction=n.includeAirConduction),n.includeBoneConduction!==void 0&&(this.includeBoneConduction=n.includeBoneConduction));const o=this.generateTestSequence(),s={id:Rt(),startTime:new Date().toISOString(),patientId:t.id,completed:!1,testSequence:o,currentStep:0};return this.currentSession=s,this.activeSessions.push(s),s}generateTestSequence(){const t=[];let n=1;return[{ear:"right",testType:"air"},{ear:"left",testType:"air"},{ear:"right",testType:"bone"},{ear:"left",testType:"bone"}].forEach(({ear:s,testType:l})=>{if(l==="bone"&&!this.includeBoneConduction||l==="air"&&!this.includeAirConduction)return;const h=l==="bone"?this.boneTestFrequencies:this.testFrequencies,a=[],p=h.indexOf(1e3);if(p!==-1){a.push(1e3);for(let b=p+1;b<h.length;b++)a.push(h[b]);a.push(1e3);for(let b=p-1;b>=0;b--)a.push(h[b])}else a.push(...h);a.forEach(b=>{t.push({id:n++,frequency:b,ear:s,testType:l,currentLevel:this.defaultStartLevel,completed:!1,responses:[]})})}),t}getCurrentStep(){if(!this.currentSession)return null;const{currentStep:t,testSequence:n}=this.currentSession;return t>=n.length?null:n[t]}playCurrentTone(t,n=!0){const o=this.getCurrentStep();if(!o)return;const{frequency:s,ear:l,currentLevel:h,testType:a}=o;ne.playTone(s,h,l,t,a,n)}recordResponse(t){if(!this.currentSession)return null;const n=this.getCurrentStep();return n?(n.responses.push({level:n.currentLevel,response:t}),this.adjustLevelPerProtocol(n,t),n):null}recordResponseWithoutAdjustment(t){if(!this.currentSession)return null;const n=this.getCurrentStep();return n?(n.responses.push({level:n.currentLevel,response:t}),n):null}setCurrentLevel(t){if(!this.currentSession)return null;const n=this.getCurrentStep();if(!n)return null;const o=n.frequency,s=n.ear;return console.log(`TestingService: Setting level for frequency ${o}Hz, ${s} ear to ${t}dB`),n.currentLevel=t,n}adjustLevelPerProtocol(t,n){const{responses:o}=t;if(n)t.currentLevel=Math.max(-10,t.currentLevel-10),console.log(`Patient responded: Decreasing by 10 dB to ${t.currentLevel} dB (Hughson-Westlake protocol)`);else{const s=o.length<2,l=s?this.initialStepSize:this.finalStepSize;t.currentLevel=Math.min(120,t.currentLevel+l),console.log(`No response: Increasing by ${l} dB to ${t.currentLevel} dB (${s?"Initial phase":"Bracketing phase"})`)}this.isThresholdEstablished(t)&&(t.completed=!0,this.moveToNextStep())}determineStepSize(t){const{responses:n}=t;return n.length<2?this.initialStepSize:this.finalStepSize}isThresholdEstablished(t){const{responses:n}=t;if(n.length<3)return!1;const o=new Map;n.forEach(h=>{const a=h.level,p=o.get(a)||{total:0,heard:0};p.total+=1,h.response&&(p.heard+=1),o.set(a,p)});let s=!1,l=null;return o.forEach((h,a)=>{h.total>=3&&h.heard>=2&&(!s||l!==null&&a<l)&&(s=!0,l=a,console.log(`Threshold identified at ${a} dB with ${h.heard}/${h.total} responses`))}),s&&console.log(`Final threshold established at ${l} dB`),s}moveToNextStep(){if(!this.currentSession)return;const t=this.getCurrentStep();t&&(console.log(`Completing step at level: ${t.currentLevel}dB before moving to next step`),console.log(`Step completed status: ${t.completed}, responseStatus: ${t.responseStatus||"not set"}`)),this.currentSession.currentStep+=1,this.currentSession.currentStep>=this.currentSession.testSequence.length&&this.completeSession()}skipCurrentStep(t=!1){if(console.log("=== Debug: skipCurrentStep called with markCompleted =",t),!this.currentSession)return console.log("=== Debug: skipCurrentStep - no current session"),null;const n=this.getCurrentStep();if(n){t?(console.log(`Marking step as completed with threshold at: ${n.currentLevel}dB`),n.completed=!0,n.responseStatus||(n.responseStatus="threshold")):console.log("Skipping to next step without marking current step as completed");const o=this.currentSession.currentStep;this.moveToNextStep();const s=this.currentSession.currentStep;console.log(`=== Debug: skipCurrentStep - moved from step ${o} to ${s}`),console.log(`=== Debug: session has ${this.currentSession.testSequence.length} total steps`),console.log(`=== Debug: returning new step with frequency ${this.getCurrentStep()?.frequency||"null"}`)}else console.log("=== Debug: skipCurrentStep - no current step found");return this.getCurrentStep()}completeSession(){if(!this.currentSession)return null;const t=this.currentSession;t.completed=!0;const n=t.patientId,o=Se.getPatientById(n),s=this.calculateResults(t,o?.thresholds||[]);return t.results=s,console.log("Completing test session with results:",{sessionId:t.id,userThresholds:s.userThresholds?.length||0,actualThresholds:s.actualThresholds?.length||0}),this.completedSessions.push(t),this.activeSessions=this.activeSessions.filter(l=>l.id!==t.id),this.currentSession=null,t}calculateResults(t,n=[]){const o=this.extractThresholds(t);let s=0,l=0;o.forEach(p=>{const b=n.find(g=>g.frequency===p.frequency&&g.ear===p.ear&&g.testType===p.testType&&g.responseStatus==="threshold"&&p.responseStatus==="threshold");if(b){const g=Math.abs(p.hearingLevel-b.hearingLevel);g<=5?s+=100-g*5:g<=10?s+=50:s+=25,l++}});const h=l>0?Math.round(s/l):0,a={patientId:t.patientId,timestamp:new Date().toISOString(),userThresholds:o,actualThresholds:n,accuracy:h,testDuration:this.calculateTestDuration(t),technicalErrors:this.identifyTechnicalErrors(t),falsePositives:this.falsePositiveCount};return this.falsePositiveCount=0,a}extractThresholds(t){const n=[];return t.testSequence.forEach(o=>{if(o.completed&&o.responses.length>0){const s=new Map;o.responses.forEach(p=>{const b=p.level,g=s.get(b)||{total:0,heard:0};g.total+=1,p.response&&(g.heard+=1),s.set(b,g)});let l=null,h=1/0;s.forEach((p,b)=>{p.total>=3&&p.heard>=2&&b<h&&(h=b,l=b)});const a=l!==null?l:o.currentLevel;console.log(`Extracting threshold for completed step: ${a}dB (was ${o.currentLevel}dB)`),n.push({frequency:o.frequency,hearingLevel:a,ear:o.ear,testType:o.testType,responseStatus:"threshold"})}else if(o.responses.length>0){console.log(`Extracting threshold data for incomplete step with ${o.responses.length} responses`);const s=new Map;o.responses.forEach(a=>{if(a.response){const p=s.get(a.level)||0;s.set(a.level,p+1)}});let l=null,h=1/0;if(s.forEach((a,p)=>{a>=2&&p<h&&(h=p,l=p)}),l!==null)console.log(`Found valid threshold in incomplete step at: ${l}dB`),n.push({frequency:o.frequency,hearingLevel:l,ear:o.ear,testType:o.testType,responseStatus:"threshold"});else if(o.responses.length>0){const a=Math.max(...o.responses.map(p=>p.level));console.log(`No valid threshold found, using highest level: ${a}dB`),n.push({frequency:o.frequency,hearingLevel:a,ear:o.ear,testType:o.testType,responseStatus:"no_response"})}}else n.push({frequency:o.frequency,hearingLevel:0,ear:o.ear,testType:o.testType,responseStatus:"not_tested"})}),n}calculateTestDuration(t){const n=new Date(t.startTime).getTime(),o=new Date().getTime();return Math.round((o-n)/1e3)}identifyTechnicalErrors(t){const n=[],o=t.testSequence.filter(s=>!s.completed);return o.length>0&&n.push(`Skipped ${o.length} test frequencies`),t.testSequence.forEach(s=>{s.completed&&s.responses.length<3&&n.push(`Insufficient responses for ${s.frequency} Hz in ${s.ear} ear`)}),t.testSequence.forEach(s=>{s.responses.length>0&&s.responses[0].level>60&&n.push(`Starting level too high for ${s.frequency} Hz in ${s.ear} ear`)}),n}getCurrentSession(){return this.currentSession}getActiveSessions(){return[...this.activeSessions]}getCompletedSessions(){return[...this.completedSessions]}getSessionById(t){return this.activeSessions.find(n=>n.id===t)||this.completedSessions.find(n=>n.id===t)||null}clearAllSessions(){this.activeSessions=[],this.completedSessions=[],this.currentSession=null}calculateProgress(){if(!this.currentSession)return 0;const t=this.currentSession.testSequence.length;if(t===0)return 0;const n=this.currentSession.testSequence.filter(s=>s.completed&&s.responseStatus==="threshold").length;console.log("Progress calculation:",{totalSteps:t,completedSteps:n,completedThresholdSteps:this.currentSession.testSequence.filter(s=>s.completed&&s.responseStatus==="threshold").map(s=>({id:s.id,frequency:s.frequency,ear:s.ear,level:s.currentLevel,responseStatus:s.responseStatus})),allCompletedSteps:this.currentSession.testSequence.filter(s=>s.completed).map(s=>({id:s.id,frequency:s.frequency,ear:s.ear,level:s.currentLevel,responseStatus:s.responseStatus||"none"}))});const o=Math.round(n/t*100);return console.log(`Progress: ${n}/${t} steps completed (${o}%)`),o}completeCurrentStep(t){if(!this.currentSession||this.currentSession.currentStep===void 0)return console.error("Cannot complete step: No current session or step"),!1;const n=this.currentSession.currentStep;return n<0||n>=this.currentSession.testSequence.length?(console.error(`Invalid step index: ${n}`),!1):(this.currentSession.testSequence[n].completed=!0,this.currentSession.testSequence[n].responseStatus=t,console.log(`Marked step ${n} as completed with responseStatus='${t}'`),!0)}recordFalsePositive(){this.falsePositiveCount++,console.log(`False positive recorded. Total: ${this.falsePositiveCount}`)}}const E=new Gt,Qt=(r,t)=>{if(!t)return r;const n=JSON.parse(JSON.stringify(r)),o=t.testSequence.filter(s=>s.completed&&s.responseStatus==="threshold");return console.log(`Preserving ${o.length} thresholds from current session:`,o.map(s=>`${s.frequency}Hz ${s.ear} ear at ${s.currentLevel}dB`).join(", ")),o.length>0&&o.forEach(s=>{const l=n.testSequence.findIndex(h=>h.frequency===s.frequency&&h.ear===s.ear&&h.testType===s.testType);l!==-1&&(n.testSequence[l]={...n.testSequence[l],completed:!0,responseStatus:"threshold",currentLevel:s.currentLevel})}),n},$e=(r,t)=>{if(!r)return!1;const n=t.find(h=>h.frequency===r.frequency&&h.ear===r.ear&&h.testType===r.testType);if(!n)return!1;const o=Math.floor(Math.random()*10)-5,s=n.hearingLevel+o,l=Math.max(5,s);return r.currentLevel>=l},Kt=r=>{if(!r)return[];const t=r.testSequence.filter(s=>s.completed&&s.responseStatus==="threshold");console.log(`Extracting thresholds from session - found ${t.length} completed steps with thresholds`),console.log("Completed steps with responseStatus=threshold:",t);const n=new Map;t.forEach(s=>{const l=`${s.frequency}-${s.ear}-${s.testType||"air"}`,h={frequency:s.frequency,hearingLevel:s.currentLevel,ear:s.ear,testType:s.testType||"air",responseStatus:"threshold"};console.log(`Adding threshold: ${s.frequency}Hz, ${s.ear} ear, ${s.currentLevel}dB HL, key=${l}`),n.set(l,h)});const o=Array.from(n.values());return console.log(`Extracted ${o.length} unique thresholds:`,o),o},Zt=(r,t,n,o,s,l,h)=>{if(!t)return console.log("Cannot update trainer state: currentStep is falsy"),{procedurePhase:n,suggestedAction:"present",guidance:"No current step available",lastResponseLevel:null,responseCounts:o};console.log("🔍 Processing response:",r,"in phase:",n);let a={...o},p=n,b="present",g="",C=null;if(r){if(console.log("Patient responded - updating state"),n==="initial")p="descending",b="decrease",g="The patient responded at this level. According to Hughson-Westlake, the next step would be to decrease by 10 dB and present the tone again.",console.log("Initial phase - patient responded, changing to descending phase");else if(n==="descending")p="descending",b="decrease",g="The patient can still hear at this level. In the descending phase, you should continue to decrease by 10 dB intervals.",console.log("Descending phase - patient responded, suggesting continue decreasing");else if(n==="ascending"){p="threshold";const f=t.currentLevel,v=t.frequency,x=t.ear;a[v]||(a[v]={}),a[v][x]||(a[v][x]={}),a[v][x][f]||(a[v][x][f]={total:0,heard:0}),C=f,b="decrease",g=`You've found the potential threshold! The patient responded at ${f} dB. According to Hughson-Westlake protocol, you must immediately decrease by 10 dB and begin the bracketing pattern (10 dB down after response, 5 dB up after no response).`,console.log(`Ascending phase - patient responded at ${f}dB, changed to threshold phase, starting bracketing pattern`)}else if(n==="threshold"){const f=t.currentLevel,v=t.frequency,x=t.ear;a[v]||(a[v]={}),a[v][x]||(a[v][x]={}),a[v][x][f]||(a[v][x][f]={total:0,heard:0}),a[v][x][f].total+=1,a[v][x][f].heard+=1,console.log(`Threshold phase - adding response at ${f}dB for ${v}Hz, ${x} ear: ${a[v][x][f].heard}/${a[v][x][f].total} responses`),C=f;const u=a[v][x][f].heard,i=a[v][x][f].total;s&&l>s?(console.log(`🔢 Current responses at ${f}dB: ${u}/${i}`),console.log(`⏰ Presentation time: ${l}, Threshold phase start: ${s}`),l>h?(b="decrease",i>=2?u>=2?(console.log(`✅ Threshold CONFIRMED at ${f}dB with ${u}/${i} responses.`),p="complete",b="store_threshold",g=`Excellent! You have established a threshold at ${f} dB. The patient has responded ${u} times out of ${i} at this level, which meets the criteria of "2 out of 3" responses needed to establish a threshold. You can now store this value and move to the next frequency.`):(console.log(`❌ Threshold NOT confirmed at ${f}dB with only ${u}/${i} responses.`),b="decrease",g=`The patient responded, but has only ${u} total responses out of ${i} at ${f} dB. Following Hughson-Westlake protocol, decrease by 10 dB after ANY response, then continue testing.`):u>=2?(console.log(`👍 Already have ${u} positive responses at ${f}dB, need more presentations for confirmation.`),b="decrease",g=`Good! The patient has responded ${u} times at ${f} dB. Following Hughson-Westlake protocol, decrease by 10 dB after EACH response, then continue the bracketing pattern.`):i===2&&u===1?(console.log(`⏳ Have 1 out of 2 responses at ${f}dB, continuing bracketing.`),b="decrease",g=`The patient has responded once out of ${i} presentations at ${f} dB. Following Hughson-Westlake protocol, decrease by 10 dB after EACH response, then continue the bracketing pattern.`):(console.log(`⏳ Starting bracketing at ${f}dB (have ${u}/${i}, need at least 2/3)`),b="decrease",g=`The patient has responded ${u} time(s) out of ${i} at ${f} dB. Following Hughson-Westlake protocol, decrease by 10 dB after EACH response, then continue the bracketing pattern.`)):console.log(`⚠️ Double counting prevented! This presentation (${l}) was already processed.`)):(console.log("⚠️ Ignoring response from before threshold phase started in updateTrainerState"),console.log(`⏰ Presentation time: ${l}, Threshold phase start: ${s}`))}}else if(console.log("Patient did NOT respond - updating state"),n==="initial")b="increase",g="The patient did not respond to the initial presentation. This suggests the starting level was too low. Increase the level by 10-15 dB and try again.",console.log("Initial phase - no response, suggest increasing");else if(n==="descending")p="ascending",b="increase",g="The patient no longer responds at this level. This means we've gone below their threshold. Now switch to the ascending phase: increase by 5 dB steps until the patient responds again. Note that we use smaller steps (5 dB) when ascending to more precisely determine the threshold.",console.log("Descending phase - no response, changing to ascending phase");else if(n==="threshold"){const f=t.currentLevel,v=t.frequency,x=t.ear;a[v]||(a[v]={}),a[v][x]||(a[v][x]={}),a[v][x][f]||(a[v][x][f]={total:0,heard:0}),a[v][x][f].total+=1;const u=a[t.frequency][t.ear][f].heard,i=a[t.frequency][t.ear][f].total;console.log(`🔢 Current responses at ${f}dB: ${u}/${i}`),i>=2&&u>=2?(console.log(`✅ Threshold CONFIRMED at ${f}dB with ${u}/${i} responses, despite this no-response.`),p="complete",b="store_threshold",g=`You have established a threshold at ${f} dB. The patient has responded ${u} times out of ${i} at this level, which meets the criteria of "2 out of 3" responses needed to establish a threshold. You can now store this value and move to the next frequency.`):i>=2&&u<2?(console.log(`❌ Level ${f}dB is below threshold with only ${u}/${i} positive responses.`),b="increase",g=`The patient did not respond at ${f} dB (${u}/${i} responses). Following Hughson-Westlake protocol, increase by 5 dB and continue the bracketing pattern.`):i-u>=2?(console.log(`👎 Already have ${i-u} negative responses at ${f}dB, suggesting to increase.`),b="increase",g=`The patient has failed to respond ${i-u} times out of ${i} at ${f} dB. Following Hughson-Westlake protocol, increase by 5 dB and continue the bracketing pattern.`):(b="increase",g=`Patient did not respond at ${f} dB (${u}/${i} responses so far). Following Hughson-Westlake protocol, increase by 5 dB and continue the bracketing pattern.`)}else n==="ascending"&&(p="ascending",b="increase",g="Patient still doesn't respond at this level. Continue to increase by 5 dB steps until you get a response. Remember, we use smaller 5 dB steps during the ascending phase for more precise threshold determination.",console.log("Ascending phase - no response, continue ascending"));return{procedurePhase:p,suggestedAction:b,guidance:g,lastResponseLevel:C,responseCounts:a}};function es({currentStep:r,toneActive:t,setToneActive:n,patientResponse:o,setPatientResponse:s,setShowResponseIndicator:l,setPatientJustResponded:h,lastPresentationTimeRef:a,lastProcessedPresentationRef:p,thresholdPhaseStartTime:b,updateTrainerState:g,patientThresholds:C}){const f=L.useCallback(()=>{if(r)try{if(console.log("🎵 Starting tone..."),ne.stopTone(),r){const i=r.frequency;console.log(`🔊 Explicit frequency check: Using ${i}Hz for tone`),E.setCurrentLevel(r.currentLevel),console.log(`🔊 Starting tone at user-set level: ${r.currentLevel}dB`)}s(null),h(!1),l(!1),console.log("🔄 Response states reset"),n(!0),console.log("🔊 Tone active set to true"),E.playCurrentTone(),console.log("🎵 Pulsed tone started");const u=$e(r,C);console.log("👂 Immediate patient response check:",u),u&&(s(u),l(!0),h(!0),console.log("👂 Patient IMMEDIATELY responded to the tone!"),console.log("💾 Recording immediate response for later processing"),E.recordResponseWithoutAdjustment(u)),console.log("🎯 Recording tone presentation time"),a.current=Date.now()}catch(u){console.error("❌ Error playing tone:",u),n(!1),ne.stopTone()}},[r,n,s,l,h,a,C]),v=L.useCallback(()=>{console.log("🛑 Stopping tone..."),ne.stopTone();const u=t,i=o;console.log("🛑 Stopping tone with current state:",{toneActive:u,patientResponse:i}),n(!1);const d=Date.now();a.current=d,console.log("⏱️ Presentation stopped at:",d);let c=i;if(c===null){const y=$e(r,C);console.log("🔊 Simulating patient response at tone stop for internal processing only:",y),c=y}else console.log("🔊 Using existing patient response from during tone playback:",c);r&&(d>p.current?(console.log(`✅ Processing new presentation. Current: ${d}, Last processed: ${p.current}`),c!==null?(E.recordResponseWithoutAdjustment(!!c),console.log("🔄 Immediately updating trainer state with response:",c),g(!!c),p.current=d):(console.log("⚠️ Checking for unprocessed patient response from during tone playback"),i!==null&&(console.log("✅ Found unprocessed patient response:",i),E.recordResponseWithoutAdjustment(!!i),g(!!i),p.current=d))):console.log(`⚠️ Presentation already processed in stopTone! Current: ${d}, Last processed: ${p.current}`)),s(null),l(!1),h(!1),console.log("🔄 Patient response visuals reset AFTER updating trainer state")},[t,o,r,n,s,l,h,a,p,g,C]),x=L.useCallback(()=>{if(console.log("👂 Patient response handler called."),!r){console.log("⚠️ No current step available, cannot process patient response");return}if(!t){console.log("⚠️ False positive detected: Patient responded when no tone was presented"),E.recordFalsePositive(),h(!0),l(!0),setTimeout(()=>{l(!1),h(!1)},500);return}s(!0),l(!0),h(!0),E.recordResponse(!0),console.log("🎯 User indicated POSITIVE response"),g(!0),p.current=a.current,ne.stopTone(),n(!1)},[r,t,s,l,h,g,p,a]);return{startTone:f,stopTone:v,handlePatientResponse:x}}function ts({currentStep:r,session:t,setCurrentStep:n,setSession:o,procedurePhase:s,setProcedurePhase:l,setSuggestedAction:h,setCurrentGuidance:a,setLastResponseLevel:p,preserveThresholds:b}){const g=L.useCallback(v=>{if(r)try{const x=Math.max(-10,Math.min(120,r.currentLevel+v));console.log(`Adjusting level for frequency ${r.frequency}Hz, ${r.ear} ear: ${r.currentLevel}dB -> ${x}dB`),s==="initial"||s==="descending"?v===-10?(l("descending"),h("present"),a(`You've decreased by 10 dB. Now present the tone to see if the patient can still hear it at ${x} dB.`)):v===5||v===10?(h("present"),a(`You've increased by ${v} dB. Present the tone to check for a response at ${x} dB.`)):v===-5&&(h("present"),a(`You've decreased by 5 dB. While Hughson-Westlake protocol uses 10 dB decrements in the descending phase, you can still present the tone at ${x} dB to check for a response.`)):s==="ascending"?v===5?(h("present"),a(`You've increased by 5 dB. Now present the tone to see if the patient can hear it at ${x} dB.`)):v===10?(h("present"),a(`You've increased by 10 dB. While Hughson-Westlake protocol uses 5 dB increments in the ascending phase, you can still present the tone at ${x} dB to check for a response.`)):v<0&&(l("descending"),h("present"),a(`You've decreased by ${Math.abs(v)} dB, changing to the descending phase. Present the tone to check for a response at ${x} dB.`)):s==="threshold"?(v===-10?(h("present"),a(`You've decreased by 10 dB to ${x} dB. This follows the Hughson-Westlake protocol. Present the tone to check for a response at this new level.`),console.log(`Threshold phase - decreased by 10dB to ${x}dB`)):v===5?(h("present"),a(`You've increased by 5 dB to ${x} dB. This follows the Hughson-Westlake protocol. Present the tone to check for a response at this new level.`),console.log(`Threshold phase - increased by 5dB to ${x}dB`)):(h("present"),a(`You've changed the level to ${x} dB. Present the tone to check for a response at this level.`),console.log(`Threshold phase - adjusted by ${v}dB to ${x}dB (non-standard adjustment)`)),p(x)):s==="complete"&&(l("threshold"),h("present"),a(`You're adjusting the level after completing threshold determination. You're now at ${x} dB. Present the tone to check for a response.`));const u={...r,currentLevel:x};if(n(u),E.setCurrentLevel(x),t){const i={...t};i.testSequence=[...i.testSequence];const d=i.currentStep;i.testSequence[d]&&i.testSequence[d].frequency===r.frequency&&i.testSequence[d].ear===r.ear&&(i.testSequence[d]={...i.testSequence[d],currentLevel:x},o(i))}}catch(x){console.error("Error adjusting level:",x)}},[r,t,s,n,o,l,h,a,p]),C=L.useCallback(v=>{if(!r)return;const x=[250,500,750,1e3,1500,2e3,3e3,4e3,6e3,8e3],u=r.frequency,i=x.indexOf(u);if(i===-1)return;let d=i+v;if(d<0&&(d=0),d>=x.length&&(d=x.length-1),d!==i){const c=x[d];if(console.log(`Changing frequency from ${u}Hz to ${c}Hz`),t){const y=t.testSequence.findIndex(m=>m.frequency===c&&m.ear===r.ear&&m.testType===r.testType);if(y!==-1){console.log(`Found matching step for ${c}Hz at index ${y}`);const m=JSON.parse(JSON.stringify(t));m.currentStep=y;const T=m.testSequence[y];console.log(`Navigating to step with ID ${T.id}, frequency ${T.frequency}Hz`),o(m);const $=JSON.parse(JSON.stringify(T));n($);const q=E.getCurrentSession();q&&(q.currentStep=m.currentStep,console.log(`Explicitly updated TestingService step to ${m.currentStep} with frequency ${T.frequency}Hz`)),T.completed&&T.responseStatus==="threshold"?(l("complete"),h("next"),a(`This frequency already has a threshold stored at ${T.currentLevel} dB. You can proceed to the next frequency or adjust the level to retest.`)):(l("initial"),h("present"),a(`Now testing at ${c} Hz. Begin at a comfortable level (30-40 dB).`))}}}},[r,t,n,o,l,h,a]),f=L.useCallback((v,x)=>{if(!r||!t)return;const i=[250,500,750,1e3,1500,2e3,3e3,4e3,6e3,8e3].reduce((d,c)=>Math.abs(c-v)<Math.abs(d-v)?c:d);console.log(`Audiogram click - requested: ${v}Hz at ${x}dB, closest available: ${i}Hz`);try{const d=Math.max(-10,Math.min(120,x));if(i!==r.frequency||d!==r.currentLevel){const c=t.testSequence.findIndex(y=>y.frequency===i&&y.ear===r.ear&&y.testType===r.testType);if(c!==-1){const y={...t.testSequence[c]};y.currentLevel=d;const m=E.getCurrentSession();m&&(m.currentStep=c),E.setCurrentLevel(d),n(y);const T={...t};T.currentStep=c,T.testSequence=[...T.testSequence],T.testSequence[c]=y;const $=b(T);o($),y.completed&&y.responseStatus==="threshold"?(l("complete"),h("next"),a(`This frequency already has a threshold stored at ${y.currentLevel} dB. You can proceed to the next frequency or adjust the level to retest.`)):(l("initial"),h("present"),a(`Now testing at ${i} Hz and ${d} dB. Present the tone to check for response.`)),console.log(`Audiogram click - changed to ${i}Hz at ${d}dB`)}else console.error(`Could not find matching step for frequency ${i}Hz in test sequence`)}}catch(d){console.error("Error handling audiogram click:",d)}},[r,t,n,o,l,h,a,b]);return{handleAdjustLevel:g,handleAdjustFrequency:C,handleAudiogramClick:f}}function ss({currentStep:r,session:t,responseCounts:n,setSession:o,setCurrentStep:s,setProcedurePhase:l,setSuggestedAction:h,setCurrentGuidance:a,setResponseCounts:p,setErrorMessage:b}){const g=L.useCallback(()=>{if(!r)return{isValid:!1,message:"No current test step available."};const v=r.frequency,x=r.ear,u=r.currentLevel;if(n&&n[v]&&n[v][x]&&n[v][x][u]){const i=n[v][x][u].heard,d=n[v][x][u].total;return d>=2&&i>=2?{isValid:!0,message:"Valid threshold established."}:d<2?{isValid:!1,message:`Need more responses at this level (${i}/${d} so far).`}:{isValid:!1,message:"Invalid threshold. Hughson-Westlake requires at least 2 out of 3 responses at the same level."}}else return{isValid:!1,message:"No response data available for this level."}},[r,n]),C=L.useCallback(()=>g().isValid,[g]),f=L.useCallback(()=>{if(!r){console.error("Cannot store threshold: no current step");return}const v=g();if(!v.isValid){b(v.message);return}let x=null,u=1/0;const d=n[r.frequency]?.[r.ear]||{};if(Object.entries(d).forEach(([y,m])=>{const T=parseInt(y);m.total>=2&&m.heard>=2&&T<u&&(x=T,u=T)}),x===null){b("Could not determine a valid threshold level.");return}if(console.log(`Storing threshold at validated level: ${x}dB (current level is ${r.currentLevel}dB)`),E.setCurrentLevel(x),E.completeCurrentStep("threshold"),t){const y={...t},m=y.testSequence.findIndex($=>$.frequency===r.frequency&&$.ear===r.ear&&$.testType===r.testType);if(m===-1){console.error("Could not find matching test step in session for frequency:",r.frequency,"ear:",r.ear),b("Failed to store threshold: test step not found.");return}const T=y.testSequence[m];if(T.completed=!0,T.responseStatus="threshold",T.currentLevel=x,console.log(`DEBUG: Storing threshold for step ${m}:`,{id:T.id,frequency:T.frequency,ear:T.ear,currentLevel:T.currentLevel,responseStatus:T.responseStatus}),o(y),r){const $={...r,completed:!0,responseStatus:"threshold",currentLevel:x};s($)}console.log(`Threshold stored at ${x}dB, marked as completed but staying on current frequency`)}const c=E.calculateProgress();console.log(`Updated progress after storing threshold: ${c}%`),a(`Threshold successfully stored at ${x} dB! You can now use the up arrow (or press Up) to move to the next frequency, or the down arrow to go to a previous frequency.`),l("complete"),h("next"),p(y=>{const m={...y},T=x,$=r.frequency,q=r.ear;return console.log(`Updating response counts for threshold: ${$}Hz, ${q} ear at ${T}dB`),m[$]||(m[$]={}),m[$][q]||(m[$][q]={}),m[$][q][T]={total:3,heard:2},m})},[r,t,n,g,b,o,s,a,l,h,p]);return{validateThreshold:g,canStoreThreshold:C,handleStoreThreshold:f}}function ns({session:r,setSession:t,setCurrentStep:n,setProcedurePhase:o,setSuggestedAction:s,setCurrentGuidance:l,setLastResponseLevel:h,setErrorMessage:a,setTestProgress:p,preserveThresholds:b,onComplete:g,procedurePhase:C}){const f=L.useCallback(()=>{try{console.log("⏭️ handleSkipStep called - skipping to next frequency"),o("initial"),h(null),s("present"),l("Start testing at a comfortable level (30-40 dB)."),console.log("Reset phase to: initial for next frequency");const u=E.skipCurrentStep();if(console.log("Next step from TestingService:",u),u){const i=E.getCurrentSession();if(i){const d=b(i);t(d);const c=d.currentStep,y=d.testSequence[c];if(y){const m=JSON.parse(JSON.stringify(y));n(m),console.log("Moving to next frequency:",m.frequency)}else console.error("Current step data not found in updated session"),a("Error navigating to next frequency.")}else console.error("Failed to get updated session from TestingService"),a("Failed to update session data.")}else{const i=E.completeSession();if(i){p(100),console.log("Test completed, progress set to 100%");const d=b(i);g(d)}}}catch(u){console.error("Error skipping to next step:",u),a("Failed to go to next step. Please try again.")}},[b,t,n,o,s,l,h,a,p,g]),v=L.useCallback(()=>{try{if(console.log("⏮️ handlePreviousStep called - going to previous frequency"),o("initial"),h(null),s("present"),l("Returning to the previous frequency. Begin at a comfortable level."),console.log("Reset phase to: initial for previous frequency"),r){console.log("📊 Before navigating back - Current step:",r.currentStep);const u=JSON.parse(JSON.stringify(r));if(u.currentStep>0){u.currentStep-=1;const i=u.testSequence[u.currentStep];if(!i){console.error("Previous step not found in test sequence"),a("Error navigating to previous frequency.");return}console.log("📊 Going back to step:",u.currentStep,"with frequency:",i.frequency);const d=b(u);t(d);const c=d.currentStep,y=d.testSequence[c];if(y){const T=JSON.parse(JSON.stringify(y));n(T)}else{console.error("Current step data not found in preserved session"),a("Error navigating to previous frequency.");return}const m=E.getCurrentSession();m&&(m.currentStep=d.currentStep,console.log(`🔄 Explicitly updated TestingService step to ${d.currentStep} with frequency ${y.frequency}Hz`)),console.log("Moving to previous frequency:",y.frequency)}else console.log("Already at the first frequency, cannot go back further"),a("Already at the first frequency.")}else console.error("No active session found"),a("No active session. Please restart the test.")}catch(u){console.error("Error going to previous step:",u),a("Failed to go to previous step. Please try again.")}},[r,b,t,n,o,s,l,h,a]),x=L.useCallback((u,i,d,c)=>{console.log("Implementing suggested action:",u);const y=r?JSON.parse(JSON.stringify(r)):null;switch(u){case"increase":C==="initial"?(c(10),console.log("Remained in initial phase after increasing by 10dB")):(c(5),console.log("Adjusted by 5dB in ascending/threshold phase"));break;case"decrease":c(-10),console.log("Decreased by 10dB as per suggestion");break;case"store_threshold":const{isValid:m,message:T}=i();m?(d(),console.log("Stored threshold using suggested action")):(a(T),l(T+" Continue testing to establish a valid threshold."));break;case"next":if(C==="complete"&&r){const{isValid:$}=i(),q=r.currentStep;$&&q!==void 0&&!r.testSequence[q]?.completed&&(console.log("Current step has valid threshold but is not marked completed - calling handleStoreThreshold"),d())}f(),console.log("Moved to next frequency");break;case"present":if(r?.currentStep!==void 0&&r?.testSequence[r.currentStep]){const $=r.testSequence[r.currentStep].currentLevel;l(`Present the tone at ${$} dB to check for a response.`)}break;default:console.log("Unknown suggested action:",u)}if(y&&r&&JSON.stringify(y)!==JSON.stringify(r)){console.log("Session changed after action, ensuring thresholds are preserved...");const m=b(r);JSON.stringify(m)!==JSON.stringify(r)&&(console.log("Updating session with preserved thresholds"),t(m))}},[r,C,f,b,t,l,a]);return{handleSkipStep:f,handlePreviousStep:v,handleSuggestedAction:x}}const rs=(r,t,n)=>{const[o,s]=L.useState(null),[l,h]=L.useState(null),[a,p]=L.useState(0),[b,g]=L.useState(!1),[C,f]=L.useState(null),[v,x]=L.useState(!1),[u,i]=L.useState(!1),[d,c]=L.useState(""),[y,m]=L.useState("initial"),[T,$]=L.useState("Start testing at a comfortable level (30-40 dB)."),[q,D]=L.useState("present"),[W,A]=L.useState(null),[Y,Z]=L.useState({}),F=L.useRef(null),J=L.useRef(0),U=L.useRef(0),X=L.useRef(null),re=L.useMemo(()=>Kt(o),[o]),ee=L.useCallback(P=>Qt(P,o),[o]),w=L.useCallback(P=>{if(!l)return;const M=Zt(P,l,y,Y,X.current,J.current,U.current);m(M.procedurePhase),D(M.suggestedAction),$(M.guidance),M.lastResponseLevel!==null&&A(M.lastResponseLevel),Z(M.responseCounts),y!=="threshold"&&M.procedurePhase==="threshold"&&(X.current=Date.now(),console.log(`⏰ Setting threshold phase start time to ${X.current}`))},[l,y,Y]),{startTone:B,stopTone:I,handlePatientResponse:te}=es({currentStep:l,toneActive:b,setToneActive:g,patientResponse:C,setPatientResponse:f,setShowResponseIndicator:x,setPatientJustResponded:i,lastPresentationTimeRef:J,lastProcessedPresentationRef:U,thresholdPhaseStartTime:X,updateTrainerState:w,patientThresholds:r.thresholds}),{handleAdjustLevel:de,handleAdjustFrequency:Ye,handleAudiogramClick:Ve}=ts({currentStep:l,session:o,setCurrentStep:h,setSession:s,procedurePhase:y,setProcedurePhase:m,setSuggestedAction:D,setCurrentGuidance:$,setLastResponseLevel:A,preserveThresholds:ee}),{validateThreshold:he,canStoreThreshold:Ue,handleStoreThreshold:ue}=ss({currentStep:l,session:o,responseCounts:Y,setSession:s,setCurrentStep:h,setProcedurePhase:m,setSuggestedAction:D,setCurrentGuidance:$,setResponseCounts:Z,setErrorMessage:c}),_e=Ue(),{handleSkipStep:Je,handlePreviousStep:Xe,handleSuggestedAction:Te}=ns({session:o,setSession:s,setCurrentStep:h,setProcedurePhase:m,setSuggestedAction:D,setCurrentGuidance:$,setLastResponseLevel:A,setErrorMessage:c,setTestProgress:p,preserveThresholds:ee,onComplete:t,procedurePhase:y}),Ge=L.useCallback(()=>{Te(q,he,ue,de)},[q,he,ue,de,Te]);return L.useEffect(()=>{try{m("initial"),A(null),D("present"),$("Start testing at a comfortable level (30-40 dB)."),ne.resumeAudioContext().then(()=>{const P=E.startSession(r);s(P),h(E.getCurrentStep()),p(0),console.log("New test session started, progress initialized to 0%")})}catch(P){console.error("Error initializing test session:",P),c("Failed to initialize test session. Please try again.")}},[r]),L.useEffect(()=>{const P=()=>{b&&I()};return document.addEventListener("mouseup",P),()=>{document.removeEventListener("mouseup",P)}},[b,I]),L.useEffect(()=>()=>{F.current&&clearInterval(F.current),ne.stopTone()},[]),L.useEffect(()=>{if(o){const P=E.calculateProgress();p(P),console.log(`Test progress updated: ${P}%`),P===0&&o.testSequence.some(M=>M.completed)&&console.log("WARNING: Progress is 0% but there are completed steps:",o.testSequence.filter(M=>M.completed).map(M=>({id:M.id,freq:M.frequency,ear:M.ear,completed:M.completed,status:M.responseStatus})))}},[o,l]),{session:o,currentStep:l,testProgress:a,toneActive:b,patientResponse:C,showResponseIndicator:v,patientJustResponded:u,errorMessage:d,procedurePhase:y,currentGuidance:T,suggestedAction:q,lastResponseLevel:W,canStoreThreshold:_e,thresholds:re,startTone:B,stopTone:I,handlePatientResponse:te,handleAdjustLevel:de,handleAdjustFrequency:Ye,handleStoreThreshold:ue,handleSkipStep:Je,handlePreviousStep:Xe,handleSuggestedAction:Ge,handleAudiogramClick:Ve,validateThreshold:he}},os=({currentStep:r,testProgress:t,thresholdCount:n})=>e.jsx(H,{elevation:2,sx:{p:2,mb:2},children:e.jsxs(j,{sx:{display:"flex",flexDirection:"column"},children:[e.jsxs(j,{sx:{display:"flex",justifyContent:"space-between",alignItems:"center",mb:1},children:[e.jsx(S,{variant:"subtitle1",fontWeight:"medium",children:"Test Progress"}),e.jsxs(j,{sx:{display:"flex",alignItems:"center",gap:1},children:[n!==void 0&&e.jsx(O,{label:`${n} thresholds stored`,size:"small",color:"primary",variant:"outlined"}),e.jsxs(S,{variant:"body2",color:"text.secondary",children:[t,"%"]})]})]}),e.jsx(Ee,{variant:"determinate",value:t,sx:{mb:1.5,height:8,borderRadius:1}}),e.jsxs(j,{sx:{display:"flex",justifyContent:"space-between"},children:[e.jsxs(S,{variant:"body2",color:"text.secondary",children:["Frequency: ",r.frequency," Hz"]}),e.jsxs(S,{variant:"body2",color:"text.secondary",children:["Ear: ",r.ear==="left"?"Left":"Right"]}),e.jsxs(S,{variant:"body2",color:"text.secondary",children:["Current Level: ",r.currentLevel," dB HL"]})]})]})}),is=({currentGuidance:r,suggestedAction:t,showResponseIndicator:n,patientResponse:o,canStoreThreshold:s,onStoreThreshold:l,onSuggestedAction:h,startTone:a,stopTone:p})=>{const b=f=>{f!=="present"&&h()},g=()=>{t==="present"&&a&&a()},C=()=>{t==="present"&&p&&(p(),h())};return e.jsxs(H,{elevation:2,sx:{p:2,mb:2,position:"relative",overflow:"hidden",minHeight:"6rem",display:"flex",flexDirection:"column",justifyContent:"space-between"},children:[n&&o!==null&&e.jsx(j,{sx:{position:"absolute",top:0,right:0,p:1.5,zIndex:100,display:"flex",alignItems:"center",gap:1},children:e.jsx(O,{icon:o?e.jsx(me,{}):e.jsx(nt,{}),label:o?"Heard":"Not Heard",color:o?"success":"warning",variant:"filled",size:"small"})}),e.jsx(j,{sx:{mb:2},children:e.jsx(S,{variant:"body1",sx:{mb:1,fontWeight:"500"},children:r})}),e.jsxs(j,{sx:{display:"flex",gap:2,justifyContent:"flex-end"},children:[s&&e.jsx(R,{variant:"outlined",color:"primary",onClick:l,size:"small",children:"Store Threshold"}),t&&e.jsx(R,{variant:"contained",color:"primary",onClick:()=>b(t),onMouseDown:t==="present"?g:void 0,onMouseUp:t==="present"?C:void 0,onMouseLeave:t==="present"?C:void 0,onTouchStart:t==="present"?g:void 0,onTouchEnd:t==="present"?C:void 0,size:"small",children:ls(t)})]})]})};function ls(r){switch(r){case"present":return"Present Tone";case"increase":return"Increase Level";case"decrease":return"Decrease Level";case"store_threshold":return"Store Threshold";case"next":return"Next Frequency";default:return"Continue"}}const as=({currentStep:r,toneActive:t,onAdjustLevel:n})=>{const o=t;return e.jsxs(j,{sx:{display:"flex",flexDirection:"column",alignItems:"center",gap:2},children:[e.jsx(S,{variant:"body2",color:"text.secondary",sx:{alignSelf:"center"},children:"Current Level"}),e.jsx(O,{label:`${r.currentLevel} dB HL`,color:"primary",variant:"outlined",size:"medium",sx:{fontWeight:"bold",fontSize:"1.1rem",width:"100px",height:"36px"}}),e.jsxs(j,{sx:{display:"flex",alignItems:"center",gap:1},children:[e.jsx(Q,{title:"Decrease Level (5dB)",children:e.jsx("span",{children:e.jsx(se,{color:"primary",disabled:o,onClick:()=>n(-5),sx:{border:"1px solid",borderColor:"divider"},size:"large",children:e.jsx(ye,{})})})}),e.jsx(Q,{title:"Increase Level (5dB)",children:e.jsx("span",{children:e.jsx(se,{color:"primary",disabled:o,onClick:()=>n(5),sx:{border:"1px solid",borderColor:"divider"},size:"large",children:e.jsx(be,{})})})})]}),e.jsxs(j,{sx:{display:"flex",alignItems:"center",gap:1,mt:1},children:[e.jsx(Q,{title:"Decrease Level (10dB)",children:e.jsx("span",{children:e.jsx(se,{color:"primary",disabled:o,onClick:()=>n(-10),sx:{border:"1px solid",borderColor:"divider"},size:"small",children:e.jsx(ye,{fontSize:"small"})})})}),e.jsx(Q,{title:"Increase Level (10dB)",children:e.jsx("span",{children:e.jsx(se,{color:"primary",disabled:o,onClick:()=>n(10),sx:{border:"1px solid",borderColor:"divider"},size:"small",children:e.jsx(be,{fontSize:"small"})})})})]})]})},cs=({currentStep:r,toneActive:t,onAdjustFrequency:n})=>{const o=t;return e.jsxs(j,{sx:{display:"flex",flexDirection:"column",alignItems:"center",gap:2},children:[e.jsx(S,{variant:"body2",color:"text.secondary",sx:{alignSelf:"center"},children:"Current Frequency"}),e.jsx(O,{label:`${r.frequency} Hz`,color:"primary",variant:"outlined",size:"medium",sx:{fontWeight:"bold",fontSize:"1.1rem",width:"120px",height:"36px"}}),e.jsxs(j,{sx:{display:"flex",alignItems:"center",gap:1},children:[e.jsx(Q,{title:"Previous Frequency",children:e.jsx("span",{children:e.jsx(se,{color:"primary",disabled:o,onClick:()=>n(-1),sx:{border:"1px solid",borderColor:"divider"},size:"large",children:e.jsx(rt,{})})})}),e.jsx(Q,{title:"Next Frequency",children:e.jsx("span",{children:e.jsx(se,{color:"primary",disabled:o,onClick:()=>n(1),sx:{border:"1px solid",borderColor:"divider"},size:"large",children:e.jsx(ot,{})})})})]}),e.jsx(S,{variant:"body2",color:"text.secondary",sx:{mt:1},children:r.ear==="left"?"Left Ear":"Right Ear"})]})},ds=({currentStep:r,toneActive:t,onAdjustLevel:n,onAdjustFrequency:o,startTone:s,stopTone:l,canStoreThreshold:h,onStoreThreshold:a})=>{L.useEffect(()=>{const g=()=>{t&&l()};return document.addEventListener("mouseup",g),document.addEventListener("touchend",g),()=>{document.removeEventListener("mouseup",g),document.removeEventListener("touchend",g),t&&l()}},[t,l]);const p=g=>{g.preventDefault(),s()},b=g=>{g.preventDefault(),s()};return e.jsx(j,{sx:{width:"100%"},children:e.jsxs(z,{container:!0,spacing:2,children:[e.jsx(z,{item:!0,xs:12,children:e.jsx(H,{elevation:2,sx:{p:2,mb:2},children:e.jsxs(j,{sx:{display:"flex",flexDirection:{xs:"column",sm:"row"},justifyContent:"space-between",alignItems:"center",gap:2},children:[e.jsx(j,{sx:{display:"flex",justifyContent:"center",flex:1},children:e.jsx(Q,{title:t?"Release to stop tone":"Press and hold to present tone",children:e.jsx(R,{variant:t?"outlined":"contained",color:"primary",startIcon:t?e.jsx(it,{}):e.jsx(je,{}),onMouseDown:p,onTouchStart:b,size:"large",sx:{px:3,py:1.5,width:"100%",maxWidth:"200px",borderRadius:"28px"},children:t?"Stop Tone":"Present Tone"})})}),e.jsx(j,{sx:{display:"flex",justifyContent:"center",flex:1},children:e.jsx(Q,{title:h?"Store the current level as the threshold for this frequency":"More responses needed to determine threshold",children:e.jsxs("span",{children:[" ",e.jsx(R,{variant:"contained",color:"success",startIcon:e.jsx(ze,{}),onClick:a,disabled:!h||t,sx:{py:1.5,width:"100%",maxWidth:"200px",fontWeight:"medium"},children:"Store Threshold"})]})})})]})})}),e.jsx(z,{item:!0,xs:12,sm:6,children:e.jsxs(H,{elevation:2,sx:{p:2,height:"100%"},children:[e.jsx(S,{variant:"subtitle1",gutterBottom:!0,fontWeight:"medium",children:"Level Control"}),e.jsx(as,{currentStep:r,toneActive:t,onAdjustLevel:n})]})}),e.jsx(z,{item:!0,xs:12,sm:6,children:e.jsxs(H,{elevation:2,sx:{p:2,height:"100%"},children:[e.jsx(S,{variant:"subtitle1",gutterBottom:!0,fontWeight:"medium",children:"Frequency Control"}),e.jsx(cs,{currentStep:r,toneActive:t,onAdjustFrequency:o})]})})]})})},hs=({thresholds:r,currentStep:t,toneActive:n,onAudiogramClick:o})=>{console.log("AudiogramContainer received thresholds:",r);const s=[125,250,500,750,1e3,1500,2e3,3e3,4e3,6e3,8e3],l=[-10,-5,0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,105,110],h=[-10,0,10,20,30,40,50,60,70,80,90,100,110],a=[-10,0,10,20,30,40,50,60,70,80,90,100,110],p=i=>a.includes(i),b=[125,250,500,1e3,2e3,4e3,8e3],g=i=>b.includes(i),C=(i,d)=>{const c=s.indexOf(i),y=l.indexOf(d);if(c===-1||y===-1)return null;const m=c/(s.length-1)*100,T=y/(l.length-1)*100;return{x:m,y:T}},f=r.filter(i=>i.ear==="left"),v=r.filter(i=>i.ear==="right");console.log("Left ear thresholds to display:",f),console.log("Right ear thresholds to display:",v);const x=i=>{if(!o)return;const d=i.currentTarget.getBoundingClientRect(),c=i.clientX-d.left,y=i.clientY-d.top,m=Math.round(c/d.width*(s.length-1)),T=Math.round(y/d.height*(l.length-1)),$=s[Math.max(0,Math.min(m,s.length-1))],q=l[Math.max(0,Math.min(T,l.length-1))];o($,t.ear,q)},u=i=>i>=1e3?`${i/1e3}k`:i.toString();return e.jsxs(H,{elevation:3,sx:{p:2,mb:3,position:"relative",overflow:"hidden",maxWidth:"85%",margin:"0 auto",paddingLeft:"60px"},children:[e.jsxs(S,{variant:"h6",sx:{mb:2,display:"flex",justifyContent:"space-between"},children:[e.jsx("span",{children:"Audiogram"}),e.jsxs(S,{variant:"body2",color:"text.secondary",children:["Testing: ",t.frequency," Hz, ",t.ear==="left"?"Left":"Right"," ear",t.testType==="air"?" (Air Conduction)":" (Bone Conduction)"]})]}),e.jsxs(j,{sx:{position:"relative",height:"260px",border:"1px solid",borderColor:"divider",cursor:o?"pointer":"default",backgroundColor:"rgba(250, 250, 250, 0.5)"},onClick:x,children:[s.map((i,d)=>{const c=d/(s.length-1)*100;return e.jsx(j,{sx:{position:"absolute",left:`${c}%`,top:0,height:"100%",width:"1px",...g(i)?{borderLeft:"1px solid rgba(0, 0, 0, 0.3)",backgroundColor:"rgba(0, 0, 0, 0.08)"}:{borderLeft:"1px dashed rgba(0, 0, 0, 0.2)",backgroundColor:"transparent"},...t.frequency===i?{backgroundColor:"rgba(25, 118, 210, 0.1)",borderLeft:"1px solid rgba(25, 118, 210, 0.5)"}:{},zIndex:1}},`line-${i}`)}),h.map((i,d)=>{const c=l.indexOf(i)/(l.length-1)*100;return e.jsx(j,{sx:{position:"absolute",left:0,top:`${c}%`,width:"100%",height:"1px",backgroundColor:"rgba(0, 0, 0, 0.05)",borderTop:i%20===0?"1px solid rgba(0, 0, 0, 0.2)":"1px solid rgba(0, 0, 0, 0.1)",...t.currentLevel===i?{backgroundColor:"rgba(25, 118, 210, 0.1)",borderTop:"1px solid rgba(25, 118, 210, 0.5)"}:{},zIndex:1}},`hline-${i}`)}),e.jsxs(j,{sx:{position:"absolute",bottom:"-30px",left:0,right:0,display:"flex",flexDirection:"column"},children:[e.jsx(j,{sx:{display:"flex",justifyContent:"space-between",px:"5px",pt:"5px"},children:s.map(i=>e.jsx(S,{variant:"caption",sx:{transform:"translateX(-50%)",fontWeight:t.frequency===i?"bold":"normal",color:t.frequency===i?"primary.main":"text.secondary",fontSize:"0.7rem"},children:u(i)},i))}),e.jsx(S,{variant:"caption",sx:{textAlign:"center",mt:1,fontWeight:"medium",fontSize:"0.75rem"},children:"Frequency (Hz)"})]}),e.jsxs(j,{sx:{position:"absolute",top:0,left:"-50px",bottom:0,height:"100%",width:"50px",display:"flex",flexDirection:"column",justifyContent:"space-between",py:"5px"},children:[e.jsx(S,{variant:"caption",sx:{position:"absolute",left:"-30px",top:"50%",transform:"rotate(-90deg) translateX(50%)",transformOrigin:"left center",fontWeight:"bold",whiteSpace:"nowrap"},children:"Hearing Level (dB HL)"}),l.map(i=>{const d=l.indexOf(i)/(l.length-1)*100;return p(i)?e.jsx(S,{variant:"caption",sx:{position:"absolute",left:0,top:`${d}%`,transform:"translateY(-50%)",fontWeight:t.currentLevel===i?"bold":"normal",color:t.currentLevel===i?"primary.main":"text.secondary",width:"45px",textAlign:"right",fontSize:"0.75rem",paddingRight:"5px"},children:i},i):null})]}),(()=>{const i=C(t.frequency,t.currentLevel);return i?e.jsx(j,{sx:{position:"absolute",left:`${i.x}%`,top:`${i.y}%`,width:"12px",height:"12px",borderRadius:"50%",backgroundColor:n?"primary.main":"rgba(25, 118, 210, 0.5)",transform:"translate(-50%, -50%)",boxShadow:"0 0 0 2px white",transition:"background-color 0.3s",animation:n?"pulse 1.5s infinite":"none","@keyframes pulse":{"0%":{boxShadow:"0 0 0 0 rgba(25, 118, 210, 0.7)"},"70%":{boxShadow:"0 0 0 10px rgba(25, 118, 210, 0)"},"100%":{boxShadow:"0 0 0 0 rgba(25, 118, 210, 0)"}}}}):null})(),f.map(i=>{const d=C(i.frequency,i.level);if(!d)return null;const c=v.some(T=>T.frequency===i.frequency&&T.level===i.level),y=c?-1.5:0,m=c?-1.5:0;return i.testType==="air"?e.jsx(j,{sx:{position:"absolute",left:`calc(${d.x}% + ${y}px)`,top:`calc(${d.y}% + ${m}px)`,width:"16px",height:"16px",transform:"translate(-50%, -50%)",zIndex:4,"&:before":{content:'""',position:"absolute",width:"10px",height:"10px",backgroundColor:"rgba(255, 255, 255, 0.75)",borderRadius:"2px",left:"3px",top:"3px",zIndex:-1},"&:after":{content:'""',position:"absolute",backgroundColor:"#2196f3",display:"block",width:"16px",height:"3px",top:"6.5px",left:"0px",borderRadius:"1px",transform:"rotate(45deg)",boxShadow:"0 0 1px rgba(0,0,0,0.5)"}},children:e.jsx(j,{sx:{position:"absolute",backgroundColor:"#2196f3",width:"16px",height:"3px",top:"6.5px",left:"0px",borderRadius:"1px",transform:"rotate(-45deg)",boxShadow:"0 0 1px rgba(0,0,0,0.5)"}})},`left-air-${i.frequency}`):e.jsx(j,{sx:{position:"absolute",left:`calc(${d.x}% + ${y}px)`,top:`calc(${d.y}% + ${m}px)`,width:"14px",height:"14px",transform:"translate(-50%, -50%)",zIndex:4,"&:before":{content:'">"',position:"absolute",color:"#2196f3",fontSize:"16px",fontWeight:"bold",lineHeight:"14px",top:"0px",left:"0px",textShadow:"0 0 3px rgba(255,255,255,0.9)"}}},`left-bone-${i.frequency}`)}),v.map(i=>{const d=C(i.frequency,i.level);if(!d)return null;const c=f.some(T=>T.frequency===i.frequency&&T.level===i.level),y=c?1.5:0,m=c?1.5:0;return i.testType==="air"?e.jsx(j,{sx:{position:"absolute",left:`calc(${d.x}% + ${y}px)`,top:`calc(${d.y}% + ${m}px)`,width:"14px",height:"14px",borderRadius:"50%",border:"3px solid #f44336",backgroundColor:"rgba(255, 255, 255, 0.85)",transform:"translate(-50%, -50%)",zIndex:3,boxShadow:"0 0 2px rgba(0,0,0,0.3)"}},`right-air-${i.frequency}`):e.jsx(j,{sx:{position:"absolute",left:`calc(${d.x}% + ${y}px)`,top:`calc(${d.y}% + ${m}px)`,width:"14px",height:"14px",transform:"translate(-50%, -50%)",zIndex:3,"&:before":{content:'"<"',position:"absolute",color:"#f44336",fontSize:"16px",fontWeight:"bold",lineHeight:"14px",top:"0px",left:"0px",textShadow:"0 0 3px rgba(255,255,255,0.9)"}}},`right-bone-${i.frequency}`)})]}),e.jsxs(j,{sx:{display:"flex",flexWrap:"wrap",justifyContent:"center",gap:3,mt:3},children:[e.jsxs(j,{sx:{display:"flex",alignItems:"center",gap:1},children:[e.jsx(j,{sx:{width:"10px",height:"10px",position:"relative","&:before, &:after":{content:'""',position:"absolute",backgroundColor:"#2196f3",width:"10px",height:"2px"},"&:before":{transform:"rotate(45deg)"},"&:after":{transform:"rotate(-45deg)"}}}),e.jsx(S,{variant:"caption",children:"Left Ear (Air)"})]}),e.jsxs(j,{sx:{display:"flex",alignItems:"center",gap:1},children:[e.jsx(j,{sx:{width:"10px",height:"10px",borderRadius:"50%",border:"2px solid #f44336",backgroundColor:"white"}}),e.jsx(S,{variant:"caption",children:"Right Ear (Air)"})]}),e.jsxs(j,{sx:{display:"flex",alignItems:"center",gap:1},children:[e.jsx(S,{variant:"h6",sx:{color:"#2196f3",fontWeight:"bold",lineHeight:1,fontSize:"18px"},children:">"}),e.jsx(S,{variant:"caption",children:"Left Ear (Bone)"})]}),e.jsxs(j,{sx:{display:"flex",alignItems:"center",gap:1},children:[e.jsx(S,{variant:"h6",sx:{color:"#f44336",fontWeight:"bold",lineHeight:1,fontSize:"18px"},children:"<"}),e.jsx(S,{variant:"caption",children:"Right Ear (Bone)"})]}),e.jsxs(j,{sx:{display:"flex",alignItems:"center",gap:1},children:[e.jsx(j,{sx:{width:"14px",height:"2px",backgroundColor:"rgba(0, 0, 0, 0.3)"}}),e.jsx(S,{variant:"caption",children:"Octave"})]}),e.jsxs(j,{sx:{display:"flex",alignItems:"center",gap:1},children:[e.jsx(j,{sx:{width:"14px",height:"0px",borderTop:"2px dashed rgba(0, 0, 0, 0.2)"}}),e.jsx(S,{variant:"caption",children:"Inter-octave"})]})]})]})},us=Me`
  0% { opacity: 1; transform: scale(1); }
  50% { opacity: 0.8; transform: scale(1.05); }
  100% { opacity: 1; transform: scale(1); }
`,ps=Me`
  0% { box-shadow: 0 0 0 0 rgba(25, 118, 210, 0.4); }
  70% { box-shadow: 0 0 0 10px rgba(25, 118, 210, 0); }
  100% { box-shadow: 0 0 0 0 rgba(25, 118, 210, 0); }
`;ie(O)(({theme:r})=>({margin:r.spacing(1),fontWeight:"bold",padding:r.spacing(2,1),height:"auto","& .MuiChip-label":{padding:r.spacing(.5,1)},"& .MuiChip-icon":{fontSize:"1.2rem"}}));ie(j)(({theme:r})=>({padding:r.spacing(1),borderRadius:r.shape.borderRadius,backgroundColor:r.palette.grey[100],display:"flex",alignItems:"center"}));const gs=ie(K)(({theme:r})=>({marginBottom:r.spacing(2),fontWeight:"bold",animation:`${us} 1.5s infinite ease-in-out`,boxShadow:"0 4px 10px rgba(76, 175, 80, 0.3)",border:"1px solid #4caf50"})),fs=ie(O)(({theme:r})=>({fontWeight:"bold",fontSize:"0.85rem",padding:r.spacing(.5,1),marginBottom:r.spacing(1)})),xs=ie(R)(({theme:r})=>({marginTop:r.spacing(1),textTransform:"none",fontWeight:"500"})),ms=({guidance:r,action:t,phase:n,onStoreThreshold:o,canStoreThreshold:s,patientResponded:l=!1,onImplementSuggestion:h,showResponseAlert:a=!1})=>{const[p,b]=L.useState(!1),[g,C]=L.useState(!1),f=oe();L.useEffect(()=>{if(console.log("GuidancePanel received patientResponded:",l),l){console.log("Setting responseDetected to true"),b(!0);const m=setTimeout(()=>{b(!1)},8e3);return()=>{console.log("Cleaning up timer"),clearTimeout(m)}}},[l]);const x={increase:{label:"Increase Level (+5 dB)",icon:e.jsx(be,{}),color:"primary",description:"Increase the hearing level by 5 dB. This smaller step size is used during the ascending phase and after no-response during bracketing to precisely identify the threshold."},decrease:{label:"Decrease Level (-10 dB)",icon:e.jsx(ye,{}),color:"secondary",description:"Decrease the hearing level by 10 dB. After ANY positive response, the Hughson-Westlake protocol requires an immediate 10 dB decrease to prevent adaptation and maintain stimulus uncertainty."},present:{label:"Present Tone",icon:e.jsx(je,{}),color:"info",description:"Present a 1-2 second tone burst to check if the patient can hear it at the current level. Short tone bursts enhance detectability compared to continuous tones."},store_threshold:{label:"Store Threshold",icon:e.jsx(me,{}),color:"success",description:"The threshold has been determined (≥2 responses out of 3 presentations at the same level). This is the lowest intensity that achieves a 50% or greater response rate during ascending trials."},next:{label:"Next Frequency",icon:e.jsx(ft,{}),color:"warning",description:"Move to the next test frequency. The standard sequence (1→2→4→8 kHz then 0.25→0.5 kHz) minimizes cross-frequency masking effects."}}[t]||{label:"Continue Testing",icon:e.jsx(gt,{}),description:"Continue with the testing procedure following the Hughson-Westlake protocol."},u={initial:{name:"Initial Presentation",description:"Start with a comfortable level that the patient is likely to hear (30-40 dB HL).",tips:["Begin at a level 30-40 dB above estimated threshold (typically 1 kHz initially)","Present a clearly audible tone for 1-2 seconds to establish baseline","Short tone bursts are more detectable than continuous tones","If no response, increase in 10-15 dB steps until response is obtained"]},descending:{name:"Descending Phase",description:"Decrease intensity in 10 dB steps until the patient no longer responds.",tips:["After each response, immediately decrease by 10 dB steps","Continue the descent until the patient fails to respond","The descending phase identifies the sub-threshold boundary","This large step size (10 dB) efficiently approaches the threshold region"]},ascending:{name:"Ascending Phase",description:"From the last non-responsive level, increase intensity in 5 dB steps until the patient responds again.",tips:["After no response, increase by 5 dB steps","Smaller step size (5 dB) provides more precise threshold determination","Continue until the patient responds again","This first response marks the beginning of threshold determination"]},threshold:{name:"Threshold Determination (Bracketing)",description:"Use the 10 dB down / 5 dB up bracketing technique to determine threshold.",tips:["After each response: immediately reduce level by 10 dB","After no response: increase by 5 dB steps","Threshold is defined as the lowest level with ≥50% response rate","Required: 2/3 responses at the same level for automated testing","Must not stagnate at a single level; each response triggers a mandatory 10 dB descent","Continue the oscillatory pattern until meeting threshold criteria"]},complete:{name:"Threshold Complete",description:"The threshold has been established. Record this value and proceed to the next frequency.",tips:["Store the current level as the threshold for this frequency","The threshold is defined as the lowest level at which at least 2 out of 3 responses are obtained","Verify the threshold with a non-response at 5 dB below the threshold level","Move to the next test frequency and repeat the procedure","Standard sequence is 1→2→4→8 kHz then 0.25→0.5 kHz to minimize cross-frequency masking"]}},i=u[n]||u.initial,d=a||l,c=d||p,y=()=>{h&&h()};return e.jsxs(H,{elevation:3,sx:{p:3,mb:2,backgroundColor:c?f.palette.mode==="dark"?G(f.palette.success.dark,.1):"#f5fff5":f.palette.mode==="dark"?f.palette.background.paper:"#f8f9fa",borderLeft:c?"4px solid #4caf50":"4px solid #3f51b5",position:"relative",transition:"all 0.3s ease"},children:[d&&e.jsx(gs,{icon:e.jsx(lt,{sx:{fontSize:24}}),severity:"success",children:"Patient has responded to the tone! Follow the suggested action below."}),e.jsxs(j,{sx:{display:"flex",alignItems:"center",mb:2},children:[e.jsx(at,{color:"primary",sx:{mr:2,fontSize:28}}),e.jsx(S,{variant:"h6",fontWeight:"bold",children:"Hughson-Westlake Training Guide"})]}),e.jsxs(j,{sx:{mb:3},children:[e.jsx(fs,{label:i.name,size:"medium",color:n==="complete"?"success":"primary",sx:{fontWeight:"bold",px:1}}),e.jsx(S,{variant:"body1",sx:{fontWeight:500,mb:1},children:i.description}),e.jsx(xs,{startIcon:g?e.jsx(De,{}):e.jsx(He,{}),onClick:()=>C(!g),color:"primary",variant:"text",size:"small",children:g?"Hide Details":"Show Procedure Details"}),e.jsx(We,{in:g,children:e.jsxs(j,{sx:{mt:1,p:2,backgroundColor:f.palette.mode==="dark"?G(f.palette.background.paper,.6):"#f5f5f5",borderRadius:1,border:`1px solid ${f.palette.divider}`},children:[e.jsxs(S,{variant:"subtitle2",fontWeight:"bold",gutterBottom:!0,children:[i.name," - Procedure Tips:"]}),e.jsx(ct,{dense:!0,children:i.tips.map((m,T)=>e.jsxs(dt,{sx:{py:.5},children:[e.jsx(ht,{sx:{minWidth:28},children:e.jsx(ut,{color:"primary",fontSize:"small"})}),e.jsx(pt,{primary:m})]},T))})]})})]}),e.jsx(le,{sx:{my:2}}),e.jsxs(j,{sx:{mb:3},children:[e.jsx(S,{variant:"subtitle1",fontWeight:"bold",gutterBottom:!0,children:"Current Guidance:"}),e.jsx(S,{variant:"body1",sx:{p:2,backgroundColor:c?f.palette.mode==="dark"?G(f.palette.success.dark,.2):"#e8f5e9":f.palette.mode==="dark"?G(f.palette.primary.dark,.1):"#e3f2fd",borderRadius:2,fontWeight:500,border:c?`1px solid ${f.palette.success.main}`:`1px solid ${f.palette.mode==="dark"?f.palette.primary.dark:"#bbdefb"}`,transition:"all 0.3s ease",boxShadow:"0 1px 3px rgba(0,0,0,0.12)"},children:r})]}),e.jsxs(j,{sx:{mt:3},children:[e.jsx(S,{variant:"subtitle1",fontWeight:"bold",gutterBottom:!0,children:"Suggested Action:"}),e.jsxs(j,{sx:{display:"flex",flexDirection:"column",alignItems:"flex-start",mt:1,p:2,borderRadius:2,backgroundColor:f.palette.mode==="dark"?G(f.palette.background.paper,.6):"#f8f9fa",border:`1px solid ${f.palette.divider}`,boxShadow:"0 1px 3px rgba(0,0,0,0.08)",animation:t==="store_threshold"||t==="present"?`${ps} 2s infinite`:"none"},children:[e.jsxs(j,{sx:{display:"flex",flexDirection:"column",width:"100%",mb:2},children:[e.jsx(S,{variant:"body1",fontWeight:"medium",gutterBottom:!0,children:x.label}),e.jsx(S,{variant:"body2",color:"text.secondary",children:x.description})]}),t!=="present"&&h&&e.jsx(R,{variant:"contained",color:"primary",onClick:y,startIcon:x.icon,sx:{mt:1,alignSelf:"flex-end"},children:"Implement This Suggestion"})]}),t==="store_threshold"&&s&&o&&e.jsx(R,{variant:"contained",color:"success",startIcon:e.jsx(me,{}),onClick:o,sx:{mt:2,px:3,py:1.5,boxShadow:"0 4px 10px rgba(76, 175, 80, 0.3)",fontWeight:"bold"},fullWidth:!0,children:"Store This Threshold & Continue"})]})]})},ys=({patient:r,onComplete:t,onCancel:n})=>{const{session:o,currentStep:s,testProgress:l,toneActive:h,patientResponse:a,showResponseIndicator:p,patientJustResponded:b,errorMessage:g,procedurePhase:C,currentGuidance:f,suggestedAction:v,canStoreThreshold:x,thresholds:u,startTone:i,stopTone:d,handleAdjustLevel:c,handleAdjustFrequency:y,handleStoreThreshold:m,handleSuggestedAction:T,handleAudiogramClick:$}=rs(r,t),[q,D]=L.useState(!1),[W,A]=L.useState(!1),[Y,Z]=L.useState(null),F=oe(),J=(w,B,I)=>{$(w,I)},U=()=>{D(!q)};console.log("Original thresholds from useAudioTest:",u);const X=u.map(w=>(console.log("Converting threshold point:",w),{frequency:w.frequency,ear:w.ear,level:w.hearingLevel,testType:w.testType}));console.log("Converted thresholds for AudiogramContainer:",X);const re=()=>{if(o){l<100&&x&&m();const w=E.completeSession();if(w&&(console.log("Session completed manually with results:",w.results),w.results)){const B={...o,completed:!0,results:w.results};Object.assign(o,B)}A(!0)}else Z("Cannot complete the test: No active session found.")};if(!o||!s)return e.jsxs(j,{sx:{p:3,textAlign:"center"},children:[e.jsx(S,{variant:"h6",children:"Initializing test session..."}),e.jsx(Ee,{sx:{mt:2}}),g&&e.jsx(K,{severity:"error",sx:{mt:2},children:g})]});const ee=l===100;return e.jsxs(j,{sx:{padding:{xs:.5,sm:1,md:2},maxWidth:"100%",overflowX:"hidden"},children:[e.jsxs(z,{container:!0,spacing:{xs:1,sm:1.5,md:2},children:[e.jsx(z,{item:!0,xs:12,children:e.jsx(os,{currentStep:s,testProgress:l,thresholdCount:u.length})}),e.jsx(z,{item:!0,xs:12,children:e.jsx(j,{sx:{height:"calc(100% + 4%)",width:"100%"},children:e.jsx(hs,{thresholds:X,currentStep:s,toneActive:h,onAudiogramClick:J})})}),!ee&&e.jsx(z,{item:!0,xs:12,children:e.jsxs(H,{elevation:3,sx:{p:{xs:1,sm:2},mb:1.5},children:[e.jsxs(j,{sx:{mb:1.5},children:[e.jsxs(j,{sx:{display:"flex",justifyContent:"space-between",alignItems:"center",mb:.5},children:[e.jsxs(S,{variant:"h6",component:"div",sx:{display:"flex",alignItems:"center",fontSize:{xs:"1rem",sm:"1.25rem"}},children:[e.jsx(xt,{sx:{mr:1,fontSize:{xs:"1.1rem",sm:"1.3rem"}}})," Current Guidance"]}),e.jsx(R,{size:"small",endIcon:q?e.jsx(De,{}):e.jsx(He,{}),onClick:U,children:q?"Hide Details":"Show Details"})]}),e.jsx(is,{currentGuidance:f,suggestedAction:v,showResponseIndicator:p,patientResponse:a,canStoreThreshold:x,onStoreThreshold:m,onSuggestedAction:T,startTone:i,stopTone:d}),e.jsx(We,{in:q,children:e.jsx(j,{sx:{mt:1.5,p:1.5,bgcolor:G(F.palette.primary.light,.1),borderRadius:1},children:e.jsx(ms,{guidance:f,action:v,phase:C,onStoreThreshold:m,canStoreThreshold:x,patientResponded:b,onImplementSuggestion:T,showResponseAlert:p&&!!a})})})]}),e.jsxs(j,{sx:{p:{xs:.5,sm:1}},children:[e.jsxs(S,{variant:"subtitle1",sx:{mb:1,display:"flex",alignItems:"center",fontSize:{xs:"0.9rem",sm:"1rem"}},children:[e.jsx(je,{sx:{mr:1,fontSize:"1.2rem"}})," Test Controls"]}),e.jsx(ds,{currentStep:s,toneActive:h,onAdjustLevel:c,onAdjustFrequency:y,startTone:i,stopTone:d,canStoreThreshold:x,onStoreThreshold:m})]})]})}),ee&&e.jsx(z,{item:!0,xs:12,children:e.jsxs(H,{elevation:3,sx:{p:{xs:2,sm:3},mb:2,display:"flex",flexDirection:"column",alignItems:"center",backgroundColor:F.palette.success.light,color:F.palette.success.contrastText},children:[e.jsx(S,{variant:"h5",gutterBottom:!0,children:"Audiogram Test Complete!"}),e.jsx(S,{variant:"body1",sx:{mb:3,textAlign:"center"},children:"You have successfully completed the hearing test. Review the audiogram to see the patient's thresholds."}),e.jsx(R,{variant:"contained",color:"primary",startIcon:e.jsx(mt,{}),onClick:()=>{if(o&&!o.completed){const w=E.completeSession();w&&w.results&&Object.assign(o,{completed:!0,results:w.results})}A(!0)},sx:{mb:1},children:"View Detailed Results"}),e.jsx(R,{variant:"outlined",onClick:()=>t(o),children:"Return to Dashboard"})]})}),e.jsx(z,{item:!0,xs:12,sx:{display:"flex",justifyContent:"center",mt:{xs:1.5,sm:2},mb:{xs:1,sm:1.5}},children:e.jsx(R,{variant:"contained",color:"primary",size:"large",startIcon:e.jsx(yt,{}),onClick:re,sx:{mx:"auto",minWidth:{xs:"180px",sm:"200px"},backgroundColor:F.palette.success.main,"&:hover":{backgroundColor:F.palette.success.dark}},children:"Complete Audiogram Test"})}),e.jsx(z,{item:!0,xs:12,sx:{display:"flex",justifyContent:"center",mt:.5},children:e.jsx(Q,{title:"Go back",children:e.jsx(se,{onClick:n,color:"primary",sx:{backgroundColor:F.palette.mode==="dark"?G(F.palette.action.active,.1):"rgba(0, 0, 0, 0.05)","&:hover":{backgroundColor:F.palette.mode==="dark"?G(F.palette.action.active,.2):"rgba(0, 0, 0, 0.1)"}},children:e.jsx(bt,{sx:{transform:"rotate(180deg)"}})})})})]}),e.jsxs(Ae,{open:W,onClose:()=>A(!1),maxWidth:"md",fullWidth:!0,children:[e.jsx(Fe,{children:"Patient Audiogram Results"}),e.jsx(Pe,{children:e.jsxs(j,{sx:{p:2},children:[e.jsx(S,{variant:"h6",gutterBottom:!0,children:"Patient Information"}),e.jsxs(z,{container:!0,spacing:2,sx:{mb:3},children:[e.jsxs(z,{item:!0,xs:12,sm:6,children:[e.jsxs(S,{variant:"body2",children:[e.jsx("strong",{children:"Patient ID:"})," ",r.id]}),e.jsxs(S,{variant:"body2",children:[e.jsx("strong",{children:"Name:"})," ",r.name]})]}),e.jsxs(z,{item:!0,xs:12,sm:6,children:[e.jsxs(S,{variant:"body2",children:[e.jsx("strong",{children:"Hearing Loss Type:"})," ",r.hearingLossType.replace("_"," ")]}),e.jsxs(S,{variant:"body2",children:[e.jsx("strong",{children:"Test Date:"})," ",new Date().toLocaleDateString()]})]})]}),e.jsx(S,{variant:"h6",gutterBottom:!0,children:"Your Test Results vs. Actual Thresholds"}),e.jsxs(H,{elevation:1,sx:{p:2,mb:3,bgcolor:"background.paper"},children:[e.jsx(S,{variant:"body2",paragraph:!0,children:"Below is a comparison between the thresholds you measured and the patient's actual thresholds. This feedback helps you improve your audiometric testing skills."}),o?.completed&&o?.results&&e.jsxs(K,{severity:o.results.falsePositives>5?"warning":"info",sx:{mb:2},children:[e.jsxs(S,{variant:"subtitle2",children:["False Positives: ",o.results.falsePositives||0]}),e.jsxs(S,{variant:"body2",children:["False positives occur when a patient indicates hearing a tone when none was presented. A high number of false positives (",">","5) may indicate an unreliable test subject or a need for clearer instructions."]})]}),e.jsxs(z,{container:!0,spacing:2,children:[e.jsxs(z,{item:!0,xs:12,md:6,children:[e.jsxs(S,{variant:"subtitle2",gutterBottom:!0,children:["Left Ear Thresholds ",r.thresholds.some(w=>w.ear==="left"&&w.testType==="bone")?"(>)":"(O)"]}),e.jsxs(ae,{size:"small",children:[e.jsx(ve,{children:e.jsxs(V,{children:[e.jsx(k,{children:"Frequency (Hz)"}),e.jsx(k,{children:"Your Result (dB)"}),e.jsx(k,{children:"Actual (dB)"}),e.jsx(k,{children:"Difference"})]})}),e.jsx(ce,{children:u.filter(w=>w.ear==="left").map(w=>{const B=r.thresholds.find(te=>te.ear==="left"&&te.frequency===w.frequency),I=B?w.hearingLevel-B.hearingLevel:0;return e.jsxs(V,{children:[e.jsx(k,{children:w.frequency}),e.jsx(k,{children:w.hearingLevel}),e.jsx(k,{children:B?B.hearingLevel:"N/A"}),e.jsx(k,{sx:{color:Math.abs(I)<=5?"success.main":Math.abs(I)<=10?"warning.main":"error.main"},children:I>0?`+${I}`:I})]},`left-${w.frequency}`)})})]})]}),e.jsxs(z,{item:!0,xs:12,md:6,children:[e.jsxs(S,{variant:"subtitle2",gutterBottom:!0,children:["Right Ear Thresholds ",r.thresholds.some(w=>w.ear==="right"&&w.testType==="bone")?"(<)":"(X)"]}),e.jsxs(ae,{size:"small",children:[e.jsx(ve,{children:e.jsxs(V,{children:[e.jsx(k,{children:"Frequency (Hz)"}),e.jsx(k,{children:"Your Result (dB)"}),e.jsx(k,{children:"Actual (dB)"}),e.jsx(k,{children:"Difference"})]})}),e.jsx(ce,{children:u.filter(w=>w.ear==="right").map(w=>{const B=r.thresholds.find(te=>te.ear==="right"&&te.frequency===w.frequency),I=B?w.hearingLevel-B.hearingLevel:0;return e.jsxs(V,{children:[e.jsx(k,{children:w.frequency}),e.jsx(k,{children:w.hearingLevel}),e.jsx(k,{children:B?B.hearingLevel:"N/A"}),e.jsx(k,{sx:{color:Math.abs(I)<=5?"success.main":Math.abs(I)<=10?"warning.main":"error.main"},children:I>0?`+${I}`:I})]},`right-${w.frequency}`)})})]})]})]})]})]})}),e.jsxs(Ne,{children:[e.jsx(R,{onClick:()=>A(!1),children:"Close"}),e.jsx(R,{variant:"contained",color:"primary",onClick:()=>{if(A(!1),o&&!o.completed){const w=E.completeSession();w?(console.log("Session completed with results:",w.results),t(w)):(console.warn("Failed to complete session, using current session instead"),t(o))}else t(o)},children:"Finish"})]})]}),g&&e.jsx(Le,{open:!!g,autoHideDuration:6e3,onClose:()=>{},children:e.jsx(K,{severity:"error",children:g})}),Y&&e.jsx(Le,{open:!!Y,autoHideDuration:6e3,onClose:()=>{},children:e.jsx(K,{severity:"error",children:Y})})]})};Ht.register(Wt,Mt,At,Ft,Pt,Nt,Ot,Yt);const Ie=[125,250,500,750,1e3,1500,2e3,3e3,4e3,6e3,8e3],bs=[250,500,1e3,2e3,4e3,8e3],vs=({thresholds:r,width:t=600,height:n=400,showLegend:o=!0,title:s="Audiogram",compareThresholds:l,currentFrequency:h,currentLevel:a,toneActive:p=!1,onPositionClick:b,interactive:g=!1})=>{const C=L.useRef(null),[f,v]=L.useState(!1);L.useEffect(()=>()=>{C.current&&C.current.destroy()},[]),L.useEffect(()=>{let d=null;return p&&h&&a!==void 0?d=setInterval(()=>{v(c=>!c)},200):v(!1),()=>{d&&clearInterval(d)}},[p,h,a]);const x=()=>{const d=[];return d.push({label:"Right Ear (Air)",data:r.filter(c=>c.ear==="right"&&c.testType==="air").map(c=>({x:c.frequency,y:c.hearingLevel,responseStatus:c.responseStatus})),pointStyle:"circle",borderColor:"red",backgroundColor:"red",borderWidth:2,pointRadius:6,showLine:!0,tension:.1}),d.push({label:"Left Ear (Air)",data:r.filter(c=>c.ear==="left"&&c.testType==="air").map(c=>({x:c.frequency,y:c.hearingLevel,responseStatus:c.responseStatus})),pointStyle:"crossRot",borderColor:"blue",backgroundColor:"blue",borderWidth:2,pointRadius:6,showLine:!0,tension:.1}),d.push({label:"Right Ear (Bone)",data:r.filter(c=>c.ear==="right"&&c.testType==="bone").map(c=>({x:c.frequency,y:c.hearingLevel,responseStatus:c.responseStatus})),pointStyle:"triangle",borderColor:"red",backgroundColor:"rgba(255, 0, 0, 0.2)",borderWidth:2,pointRadius:6,showLine:!0,tension:.1}),d.push({label:"Left Ear (Bone)",data:r.filter(c=>c.ear==="left"&&c.testType==="bone").map(c=>({x:c.frequency,y:c.hearingLevel,responseStatus:c.responseStatus})),pointStyle:"triangle",borderColor:"blue",backgroundColor:"rgba(0, 0, 255, 0.2)",borderWidth:2,pointRadius:6,showLine:!0,tension:.1,rotation:180}),l&&(d.push({label:"Right Ear Air (Expected)",data:l.filter(c=>c.ear==="right"&&c.testType==="air").map(c=>({x:c.frequency,y:c.hearingLevel,responseStatus:c.responseStatus})),pointStyle:"circle",borderColor:"rgba(255, 0, 0, 0.5)",backgroundColor:"rgba(255, 0, 0, 0.5)",borderWidth:1,pointRadius:4,showLine:!0,tension:.1,borderDash:[5,5]}),d.push({label:"Left Ear Air (Expected)",data:l.filter(c=>c.ear==="left"&&c.testType==="air").map(c=>({x:c.frequency,y:c.hearingLevel,responseStatus:c.responseStatus})),pointStyle:"crossRot",borderColor:"rgba(0, 0, 255, 0.5)",backgroundColor:"rgba(0, 0, 255, 0.5)",borderWidth:1,pointRadius:4,showLine:!0,tension:.1,borderDash:[5,5]}),d.push({label:"Right Ear Bone (Expected)",data:l.filter(c=>c.ear==="right"&&c.testType==="bone").map(c=>({x:c.frequency,y:c.hearingLevel,responseStatus:c.responseStatus})),pointStyle:"triangle",borderColor:"rgba(255, 0, 0, 0.5)",backgroundColor:"rgba(255, 0, 0, 0.2)",borderWidth:1,pointRadius:4,showLine:!0,tension:.1,borderDash:[5,5]}),d.push({label:"Left Ear Bone (Expected)",data:l.filter(c=>c.ear==="left"&&c.testType==="bone").map(c=>({x:c.frequency,y:c.hearingLevel,responseStatus:c.responseStatus})),pointStyle:"triangle",borderColor:"rgba(0, 0, 255, 0.5)",backgroundColor:"rgba(0, 0, 255, 0.2)",borderWidth:1,pointRadius:4,showLine:!0,tension:.1,borderDash:[5,5],rotation:180})),h!==void 0&&a!==void 0&&(d.push({label:"Current Frequency",data:[{x:h,y:-10},{x:h,y:120}],backgroundColor:"rgba(255, 165, 0, 0.5)",borderColor:f?"rgba(255, 165, 0, 1)":"rgba(255, 165, 0, 0.7)",borderWidth:f?3:1,borderDash:[5,5],pointRadius:0,showLine:!0,tension:0}),d.push({label:"Current Level",data:[{x:125,y:a},{x:8e3,y:a}],backgroundColor:"rgba(255, 165, 0, 0.5)",borderColor:f?"rgba(255, 165, 0, 1)":"rgba(255, 165, 0, 0.7)",borderWidth:f?3:1,borderDash:[5,5],pointRadius:0,showLine:!0,tension:0}),d.push({label:"Current Position",data:[{x:h,y:a}],backgroundColor:f?"rgba(255, 165, 0, 1)":"rgba(255, 165, 0, 0.7)",borderColor:f?"rgb(255, 165, 0)":"rgba(255, 100, 0, 0.7)",pointStyle:"circle",pointRadius:f?9:7,borderWidth:2,showLine:!1})),{datasets:d}},u={responsive:!0,maintainAspectRatio:!1,scales:{x:{type:"logarithmic",position:"bottom",title:{display:!0,text:"Frequency (Hz)"},ticks:{callback:d=>bs.includes(d)?d.toString():"",autoSkip:!1,maxRotation:0},min:125,max:8e3,grid:{display:!0,color:d=>Ie.includes(d.tick.value)?"rgba(0, 0, 0, 0.1)":"rgba(0, 0, 0, 0)"}},y:{reverse:!0,title:{display:!0,text:"Hearing Level (dB HL)"},min:-10,max:120,ticks:{stepSize:10},grid:{color:d=>d.tick.value===0?"rgba(0, 0, 0, 0.5)":d.tick.value%20===0?"rgba(0, 0, 0, 0.2)":"rgba(0, 0, 0, 0.1)"}}},plugins:{legend:{display:!1,position:"bottom"},title:{display:!!s,text:s},tooltip:{callbacks:{label:d=>{const c=d.raw;return`${d.dataset.label}: ${c.x} Hz, ${c.y} dB HL`}}}}},i=d=>{if(!g||!b||!C.current||p)return;const c=C.current,m=c.canvas.getBoundingClientRect(),T=d.clientX-m.left,$=d.clientY-m.top,q=c.scales.x,D=c.scales.y;if(!q||!D)return;const W=q.getValueForPixel(T),A=D.getValueForPixel($);if(W===void 0||A===void 0)return;const Y=Ie.reduce((J,U)=>Math.abs(U-W)<Math.abs(J-W)?U:J),Z=Math.round(A/5)*5,F=Math.max(-10,Math.min(120,Z));b(Y,F)};return e.jsx(j,{sx:{flexGrow:1,position:"relative",height:"100%",width:"100%",cursor:g&&!p?"crosshair":"default"},children:e.jsx(Dt,{data:x(),options:u,ref:C,onClick:i})})},xe=({children:r,value:t,index:n,...o})=>e.jsx("div",{role:"tabpanel",hidden:t!==n,id:`results-tabpanel-${n}`,"aria-labelledby":`results-tab-${n}`,...o,children:t===n&&e.jsx(j,{sx:{p:3},children:r})}),js=({session:r,onNewTest:t})=>{const[n,o]=L.useState(0),[s,l]=L.useState(!1);L.useRef(null),L.useRef(null);const h=oe(),a=r.results;if(!a)return e.jsxs(j,{sx:{p:3},children:[e.jsx(K,{severity:"error",sx:{mb:3},children:"Test results are missing or incomplete. Please try running the test again."}),e.jsx(R,{variant:"contained",onClick:t,children:"Return to Patient Selection"})]});const p=Se.getPatientById(r.patientId),b=()=>{if(!p)return{accuracy:0,exactMatch:0,within5dB:0,within10dB:0,missedThresholds:0};if(!a||!a.userThresholds)return console.error("Missing results or userThresholds:",a),{accuracy:0,exactMatch:0,within5dB:0,within10dB:0,missedThresholds:0};const u=a.userThresholds,i=p.thresholds;let d=0,c=0,y=0,m=0;u.forEach(q=>{const D=i.find(W=>W.frequency===q.frequency&&W.ear===q.ear&&W.testType===q.testType);if(D&&q.responseStatus==="threshold"&&D.responseStatus==="threshold"){const W=Math.abs(q.hearingLevel-D.hearingLevel);m++,W===0?(d++,c++,y++):W<=5?(c++,y++):W<=10&&y++}});const T=i.filter(q=>q.responseStatus==="threshold").length,$=u.filter(q=>q.responseStatus==="threshold").length;return{accuracy:m>0?Math.round(c/m*100):0,exactMatch:m>0?Math.round(d/m*100):0,within5dB:m>0?Math.round(c/m*100):0,within10dB:m>0?Math.round(y/m*100):0,missedThresholds:T-$}};let g;try{g=b()}catch(u){console.error("Error calculating metrics:",u),g={accuracy:0,exactMatch:0,within5dB:0,within10dB:0,missedThresholds:0}}const C=(u,i)=>{o(i)},f=async()=>{l(!0);try{const u=document.getElementById("test-results-container");if(!u){console.error("Results element not found"),l(!1);return}const i=await Et(u,{scale:2}),d=i.toDataURL("image/png"),c=new zt({orientation:"portrait",unit:"mm",format:"a4"}),y=c.internal.pageSize.getWidth(),m=c.internal.pageSize.getHeight(),T=i.width,$=i.height,q=Math.min(y/T,m/$),D=(y-T*q)/2;c.addImage(d,"PNG",D,10,T*q,$*q),c.save(`audiometry_results_${new Date().toISOString().slice(0,10)}.pdf`)}catch(u){console.error("Error exporting to PDF:",u)}l(!1)},x=(u=>u>=90?{color:"success",label:"Excellent",icon:e.jsx(ze,{})}:u>=75?{color:"info",label:"Good",icon:e.jsx(Tt,{})}:u>=60?{color:"warning",label:"Fair",icon:e.jsx(Lt,{})}:{color:"error",label:"Needs Improvement",icon:e.jsx(wt,{})})(g.accuracy);return e.jsx(H,{elevation:3,sx:{borderRadius:2,maxWidth:1200,mx:"auto"},id:"test-results-container",children:e.jsxs(j,{sx:{p:{xs:1,sm:2,md:3},mb:4},children:[e.jsx(S,{variant:"h4",gutterBottom:!0,children:"Test Results"}),e.jsxs(S,{variant:"subtitle1",color:"text.secondary",gutterBottom:!0,children:[p?.name," | ",new Date(a.timestamp).toLocaleString()]}),e.jsx(le,{sx:{my:2}}),e.jsxs(j,{sx:{width:"100%"},children:[e.jsx(j,{sx:{borderBottom:1,borderColor:"divider"},children:e.jsxs(vt,{value:n,onChange:C,"aria-label":"results tabs",children:[e.jsx(pe,{label:"Overview",id:"results-tab-0","aria-controls":"results-tabpanel-0"}),e.jsx(pe,{label:"Audiogram",id:"results-tab-1","aria-controls":"results-tabpanel-1"}),e.jsx(pe,{label:"Technique Analysis",id:"results-tab-2","aria-controls":"results-tabpanel-2"})]})}),e.jsx(xe,{value:n,index:0,children:e.jsxs(j,{sx:{display:"flex",flexDirection:{xs:"column",md:"row"},gap:3},children:[e.jsxs(j,{sx:{flex:1},children:[e.jsxs(H,{elevation:2,sx:{p:2,mb:3,bgcolor:h.palette.mode==="dark"?h.palette.background.paper:"#f8f9fa"},children:[e.jsx(S,{variant:"h6",gutterBottom:!0,children:"Test Summary"}),e.jsxs(S,{variant:"body2",gutterBottom:!0,children:[e.jsx("strong",{children:"Patient ID:"})," ",r.patientId]}),e.jsxs(S,{variant:"body2",gutterBottom:!0,children:[e.jsx("strong",{children:"Test Duration:"})," ",a.testDuration," seconds"]}),e.jsxs(S,{variant:"body2",gutterBottom:!0,children:[e.jsx("strong",{children:"Tested Frequencies:"})," ",a.userThresholds.filter(u=>u.responseStatus==="threshold").length]}),e.jsxs(S,{variant:"body2",gutterBottom:!0,children:[e.jsx("strong",{children:"Hearing Loss Type:"})," ",p?.hearingLossType.replace("_"," ")]})]}),e.jsxs(H,{elevation:2,sx:{p:2,mb:3},children:[e.jsxs(j,{sx:{display:"flex",justifyContent:"space-between",alignItems:"center",mb:2},children:[e.jsx(S,{variant:"h6",children:"Accuracy Rating"}),e.jsx(O,{label:x.label,color:x.color,icon:x.icon,sx:{fontWeight:"bold"}})]}),e.jsx(we,{children:e.jsx(ae,{size:"small",children:e.jsxs(ce,{children:[e.jsxs(V,{children:[e.jsx(k,{children:e.jsx("strong",{children:"Overall Accuracy"})}),e.jsxs(k,{align:"right",children:[g.accuracy,"%"]})]}),e.jsxs(V,{children:[e.jsx(k,{children:"Exact Matches"}),e.jsxs(k,{align:"right",children:[g.exactMatch,"%"]})]}),e.jsxs(V,{children:[e.jsx(k,{children:"Within 5 dB"}),e.jsxs(k,{align:"right",children:[g.within5dB,"%"]})]}),e.jsxs(V,{children:[e.jsx(k,{children:"Within 10 dB"}),e.jsxs(k,{align:"right",children:[g.within10dB,"%"]})]}),e.jsxs(V,{children:[e.jsx(k,{children:"Missed Thresholds"}),e.jsx(k,{align:"right",children:g.missedThresholds})]})]})})})]})]}),e.jsxs(j,{sx:{flex:1},children:[a.technicalErrors.length>0&&e.jsxs(K,{severity:"warning",sx:{mb:3},children:[e.jsx(ge,{children:"Technical Errors Detected"}),e.jsx("ul",{style:{margin:0,paddingLeft:20},children:a.technicalErrors.map((u,i)=>e.jsx("li",{children:u},i))})]}),e.jsxs(H,{elevation:2,sx:{p:2},children:[e.jsx(S,{variant:"h6",gutterBottom:!0,children:"Educational Notes"}),e.jsxs(S,{variant:"body2",paragraph:!0,children:[p?.hearingLossType==="normal"&&"This patient has normal hearing across all frequencies tested. Key indicators include thresholds better than 25dB HL across the spectrum.",p?.hearingLossType==="conductive"&&"This patient shows a conductive hearing loss pattern, characterized by air-bone gaps. This indicates a problem in the outer or middle ear affecting sound transmission.",p?.hearingLossType==="sensorineural"&&"This patient has a sensorineural hearing loss pattern. Air and bone conduction thresholds are similar, indicating the loss is in the cochlea or neural pathway.",p?.hearingLossType==="mixed"&&"This patient shows a mixed hearing loss with both conductive and sensorineural components. Note the elevated bone conduction thresholds and additional air-bone gaps.",p?.hearingLossType==="asymmetrical"&&"This patient has asymmetrical hearing loss with different thresholds between the left and right ears. This pattern requires additional diagnostic testing and may indicate unilateral pathology."]}),e.jsx(S,{variant:"subtitle2",gutterBottom:!0,children:"Hughson-Westlake Protocol Reminder:"}),e.jsxs("ul",{children:[e.jsx("li",{children:"Begin testing at 1000 Hz in the better ear"}),e.jsx("li",{children:"Present tones for 1-2 seconds with varied intervals"}),e.jsx("li",{children:"Use 10 dB steps down after response until no response"}),e.jsx("li",{children:"Use 5 dB steps up until response"}),e.jsx("li",{children:"Threshold is the lowest level with 2 out of 3 responses"}),e.jsx("li",{children:"Proceed with 2000, 4000, 8000, then 500, 250 Hz"}),e.jsx("li",{children:"Retest 1000 Hz to verify reliability"})]})]})]})]})}),e.jsx(xe,{value:n,index:1,children:e.jsxs(j,{sx:{display:"flex",flexDirection:"column",alignItems:"center"},children:[e.jsx(vs,{thresholds:a.userThresholds,compareThresholds:p?.thresholds,height:500,width:800,title:"Test Results vs. Actual Thresholds"}),e.jsx(S,{variant:"subtitle2",color:"text.secondary",sx:{mt:2},children:"Solid lines: Your test results | Dashed lines: Actual patient thresholds"}),e.jsxs(K,{severity:"info",sx:{mt:3,width:"100%"},children:[e.jsx(ge,{children:"Audiogram Interpretation Guide"}),e.jsxs(S,{variant:"body2",children:[e.jsx("strong",{children:"Normal hearing:"})," Thresholds better than 25 dB HL",e.jsx("br",{}),e.jsx("strong",{children:"Mild hearing loss:"})," 26-40 dB HL",e.jsx("br",{}),e.jsx("strong",{children:"Moderate hearing loss:"})," 41-55 dB HL",e.jsx("br",{}),e.jsx("strong",{children:"Moderately severe hearing loss:"})," 56-70 dB HL",e.jsx("br",{}),e.jsx("strong",{children:"Severe hearing loss:"})," 71-90 dB HL",e.jsx("br",{}),e.jsx("strong",{children:"Profound hearing loss:"})," Greater than 90 dB HL"]})]})]})}),e.jsxs(xe,{value:n,index:2,children:[e.jsx(we,{component:H,elevation:2,children:e.jsxs(ae,{sx:{minWidth:650},children:[e.jsx(ve,{children:e.jsxs(V,{children:[e.jsx(k,{children:"Frequency (Hz)"}),e.jsx(k,{children:"Ear"}),e.jsx(k,{children:"Test Type"}),e.jsx(k,{children:"Your Result (dB HL)"}),e.jsx(k,{children:"Actual Threshold (dB HL)"}),e.jsx(k,{children:"Difference"}),e.jsx(k,{children:"Status"})]})}),e.jsx(ce,{children:a.userThresholds.map((u,i)=>{const d=p?.thresholds.find(m=>m.frequency===u.frequency&&m.ear===u.ear&&m.testType===u.testType);let c=0,y="Untested";return d&&u.responseStatus==="threshold"&&d.responseStatus==="threshold"?(c=Math.abs(u.hearingLevel-d.hearingLevel),c===0?y="Exact Match":c<=5?y="Within 5 dB":c<=10?y="Within 10 dB":y="Significant Deviation"):u.responseStatus==="threshold"&&(y="Tested"),e.jsxs(V,{children:[e.jsx(k,{children:u.frequency}),e.jsx(k,{children:u.ear==="left"?"Left":"Right"}),e.jsx(k,{children:u.testType.replace("_"," ")}),e.jsx(k,{children:u.hearingLevel}),e.jsx(k,{children:d?.hearingLevel||"N/A"}),e.jsx(k,{children:u.responseStatus==="threshold"?`${c} dB`:"N/A"}),e.jsx(k,{children:e.jsx(O,{label:y,size:"small",color:y==="Exact Match"?"success":y==="Within 5 dB"?"primary":y==="Within 10 dB"?"info":y==="Significant Deviation"?"error":"default"})})]},i)})})]})}),a.technicalErrors.length>0&&e.jsxs(H,{elevation:2,sx:{mt:3,p:2},children:[e.jsx(S,{variant:"h6",gutterBottom:!0,children:"Technical Errors Analysis"}),e.jsx("ul",{children:a.technicalErrors.map((u,i)=>e.jsx("li",{children:e.jsx(S,{variant:"body2",children:u})},i))}),e.jsxs(K,{severity:"info",sx:{mt:2},children:[e.jsx(ge,{children:"Improvement Suggestions"}),e.jsxs(S,{variant:"body2",children:[a.technicalErrors.some(u=>u.includes("Skipped"))&&`• Ensure all frequencies are tested for complete assessment
`,a.technicalErrors.some(u=>u.includes("Insufficient"))&&`• Collect at least 3 responses at threshold level
`,a.technicalErrors.some(u=>u.includes("too high"))&&`• Start at more appropriate levels (typically 30-40 dB HL)
`,"Practice proper step sizes: 10 dB down after response, 5 dB up until response"]})]})]})]})]}),e.jsx(le,{sx:{my:3}}),e.jsxs(Oe,{direction:{xs:"column",sm:"row"},spacing:2,justifyContent:"space-between",children:[e.jsx(j,{children:e.jsx(R,{variant:"contained",color:"primary",onClick:t,children:"Start New Test"})}),e.jsxs(j,{sx:{display:"flex",gap:2},children:[e.jsx(R,{variant:"outlined",startIcon:e.jsx(jt,{}),disabled:!0,children:"Share Results"}),e.jsx(R,{variant:"outlined",startIcon:e.jsx(St,{}),onClick:f,disabled:s,children:s?"Exporting...":"Export PDF"})]})]})]})})},Bs=()=>{const[r,t]=L.useState([]),[n,o]=L.useState([]),[s,l]=L.useState(null),[h,a]=L.useState(""),[p,b]=L.useState("all"),[g,C]=L.useState("all"),[f,v]=L.useState(!1),[x,u]=L.useState(null),[i,d]=L.useState(1),[c]=L.useState(6),[y,m]=L.useState(!1),T=oe();Re(T.breakpoints.down("md")),L.useEffect(()=>{const B=Se.getAllPatients();t(B),o(B)},[]),L.useEffect(()=>{let B=r;h&&(B=B.filter(I=>I.name.toLowerCase().includes(h.toLowerCase())||I.description.toLowerCase().includes(h.toLowerCase())||I.id.toLowerCase().includes(h.toLowerCase()))),p!=="all"&&(B=B.filter(I=>I.difficulty===p)),g!=="all"&&(B=B.filter(I=>I.hearingLossType===g)),o(B),d(1)},[h,p,g,r]);const $=B=>{a(B.target.value)},q=B=>{b(B.target.value)},D=B=>{C(B.target.value)},W=B=>{l(B)},A=()=>{v(!0),u(null)},Y=()=>{v(!1),u(null)},Z=B=>{v(!1),u(B)},F=()=>{u(null),l(null)},J=(B,I)=>{d(I)},U=i*c,X=U-c,re=n.slice(X,U),ee=Math.ceil(n.length/c),w=()=>{a(""),b("all"),C("all"),m(!1)};return x?e.jsx(fe,{maxWidth:"lg",sx:{py:4},children:e.jsx(js,{session:x,onNewTest:F})}):f&&s?e.jsx(fe,{maxWidth:"lg",sx:{py:4},children:e.jsx(ys,{patient:s,onComplete:Z,onCancel:Y})}):e.jsxs(fe,{maxWidth:"lg",sx:{mt:{xs:2,md:4},mb:6},children:[e.jsx(S,{variant:"h4",gutterBottom:!0,children:"Virtual Patients"}),e.jsx(S,{variant:"body1",paragraph:!0,color:"text.secondary",children:"Select a virtual patient to practice your audiometry skills. Each patient has a unique hearing profile that simulates different types of hearing loss."}),e.jsx(j,{sx:{mb:{xs:2,md:4}},children:e.jsxs(z,{container:!0,spacing:{xs:1,md:2},alignItems:"center",children:[e.jsx(z,{item:!0,xs:12,md:6,children:e.jsx(Ct,{fullWidth:!0,variant:"outlined",placeholder:"Search patients...",value:h,onChange:$,InputProps:{startAdornment:e.jsx(qt,{position:"start",children:e.jsx(Bt,{})})},size:"small",sx:{mb:{xs:1,md:0}}})}),e.jsx(z,{item:!0,xs:12,md:6,children:e.jsxs(j,{sx:{display:"flex",gap:{xs:1,md:2},justifyContent:{xs:"space-between",md:"flex-end"},flexWrap:"wrap"},children:[e.jsx(R,{variant:"outlined",startIcon:e.jsx(kt,{}),onClick:()=>m(!0),size:"small",sx:{flex:{xs:1,sm:"initial"}},children:"Filters"}),s?e.jsx(R,{variant:"contained",color:"primary",startIcon:e.jsx(Ce,{}),onClick:A,size:"small",sx:{flex:{xs:1,sm:"initial"}},children:"Start Testing"}):e.jsx(R,{variant:"outlined",color:"secondary",startIcon:e.jsx($t,{}),disabled:!0,size:"small",sx:{flex:{xs:1,sm:"initial"}},children:"Add Patient"})]})})]})}),(p!=="all"||g!=="all")&&e.jsx(j,{sx:{mb:3},children:e.jsxs(Oe,{direction:{xs:"column",sm:"row"},spacing:1,alignItems:{xs:"flex-start",sm:"center"},sx:{flexWrap:"wrap",gap:1},children:[e.jsx(S,{variant:"body2",children:"Active Filters:"}),e.jsxs(j,{sx:{display:"flex",flexWrap:"wrap",gap:1},children:[p!=="all"&&e.jsx(O,{label:`Difficulty: ${p}`,onDelete:()=>b("all"),size:"small",color:"primary"}),g!=="all"&&e.jsx(O,{label:`Type: ${g.replace("_"," ")}`,onDelete:()=>C("all"),size:"small",color:"secondary"}),e.jsx(R,{size:"small",onClick:w,children:"Clear All"})]})]})}),e.jsxs(Ae,{open:y,onClose:()=>m(!1),fullWidth:!0,maxWidth:"xs",children:[e.jsx(Fe,{children:"Filter Patients"}),e.jsxs(Pe,{sx:{pt:1},children:[e.jsxs(qe,{fullWidth:!0,margin:"normal",children:[e.jsx(Be,{children:"Difficulty Level"}),e.jsxs(ke,{value:p,onChange:q,label:"Difficulty Level",children:[e.jsx(_,{value:"all",children:"All Levels"}),e.jsx(_,{value:"beginner",children:"Beginner"}),e.jsx(_,{value:"intermediate",children:"Intermediate"}),e.jsx(_,{value:"advanced",children:"Advanced"})]})]}),e.jsxs(qe,{fullWidth:!0,margin:"normal",children:[e.jsx(Be,{children:"Hearing Loss Type"}),e.jsxs(ke,{value:g,onChange:D,label:"Hearing Loss Type",children:[e.jsx(_,{value:"all",children:"All Types"}),e.jsx(_,{value:"normal",children:"Normal Hearing"}),e.jsx(_,{value:"conductive",children:"Conductive"}),e.jsx(_,{value:"sensorineural",children:"Sensorineural"}),e.jsx(_,{value:"mixed",children:"Mixed"}),e.jsx(_,{value:"asymmetrical",children:"Asymmetrical"})]})]})]}),e.jsxs(Ne,{children:[e.jsx(R,{onClick:w,children:"Reset"}),e.jsx(R,{onClick:()=>m(!1),color:"primary",children:"Apply"})]})]}),e.jsx(le,{sx:{mb:{xs:2,md:4}}}),n.length>0?e.jsxs(e.Fragment,{children:[e.jsx(z,{container:!0,spacing:{xs:1,sm:2,md:3},children:re.map(B=>e.jsx(z,{item:!0,xs:12,sm:6,md:4,children:e.jsx(Xt,{patient:B,onSelect:W,selected:s?.id===B.id})},B.id))}),e.jsx(j,{sx:{display:"flex",justifyContent:"center",mt:{xs:2,md:4}},children:e.jsx(It,{count:ee,page:i,onChange:J,color:"primary",showFirstButton:!0,showLastButton:!0,size:"small"})})]}):e.jsxs(H,{elevation:0,sx:{p:{xs:2,md:4},textAlign:"center",bgcolor:T.palette.mode==="dark"?G(T.palette.background.paper,.6):"#f5f5f5",borderRadius:2},children:[e.jsx(S,{variant:"h6",gutterBottom:!0,children:"No matching patients found"}),e.jsx(S,{variant:"body2",color:"text.secondary",children:"Try adjusting your search criteria or filters to find a patient."}),e.jsx(R,{variant:"outlined",sx:{mt:2},onClick:w,children:"Clear All Filters"})]}),s&&e.jsxs(H,{elevation:3,sx:{mt:{xs:2,md:4},p:{xs:2,md:3},bgcolor:T.palette.mode==="dark"?T.palette.background.paper:"#f9f9f9",borderRadius:2,border:`1px solid ${T.palette.divider}`},children:[e.jsxs(S,{variant:"h5",gutterBottom:!0,children:["Selected Patient: ",s.name]}),e.jsx(S,{variant:"body1",paragraph:!0,children:s.description}),e.jsxs(j,{sx:{display:"flex",gap:1,mb:2,flexWrap:"wrap"},children:[e.jsx(O,{label:`Difficulty: ${s.difficulty}`,color:s.difficulty==="beginner"?"success":s.difficulty==="intermediate"?"warning":"error"}),e.jsx(O,{label:`Type: ${s.hearingLossType.replace("_"," ")}`,color:"secondary"})]}),e.jsx(R,{variant:"contained",color:"primary",startIcon:e.jsx(Ce,{}),onClick:A,size:"large",fullWidth:!0,sx:{display:{xs:"flex",md:"inline-flex"},width:{xs:"100%",md:"auto"}},children:"Begin Audiometry Test"})]})]})};export{Bs as default};
