var Qe=Object.defineProperty;var Ke=(o,t,n)=>t in o?Qe(o,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):o[t]=n;var P=(o,t,n)=>(Ke(o,typeof t!="symbol"?t+"":t,n),n);import{u as ie,b as Re,j as e,Z as Ze,$ as et,B as m,n as tt,d as y,av as O,a0 as st,m as I,W as H,aw as ze,ax as me,ay as nt,a3 as se,I as re,aa as ye,a9 as be,az as rt,ai as ot,U as E,aA as it,V as je,aB as De,Y as te,aC as le,H as lt,S as at,aD as Ee,an as He,aE as We,L as ct,e as dt,f as ht,a1 as ut,g as pt,D as ae,a4 as G,aF as Ae,aG as gt,aH as ft,x as xt,aI as mt,ak as yt,aJ as bt,aK as Fe,aL as Me,aM as Ne,ac as ce,ad as ve,ae as _,af as q,ag as de,aN as Pe,aO as Le,aP as vt,aQ as pe,ab as Te,aR as ge,aS as Oe,aT as jt,aU as St,aV as wt,aW as Lt,aX as Tt,E as fe,aY as Ct,aZ as qt,a_ as Bt,a$ as kt,R as Ce,b0 as $t,G as qe,b1 as Be,b2 as ke,p as X,b3 as It}from"./vendor-mui-LwTDUuqz.js";import{r as w}from"./vendor-react-5UJDq-bj.js";import{a as oe}from"./AudioService-CX4mQyd0.js";import{v as Rt,h as zt,E as Dt}from"./vendor-utils-CywV0fR4.js";import{S as Et,C as Ht,a as Wt,L as At,b as Ft,P as Mt,c as Nt,p as Pt,d as Ot,e as Yt}from"./vendor-charts-Cpg01M45.js";class Vt{constructor(){P(this,"patients",[]);this.initializePatients()}initializePatients(){this.patients=[{id:"patient1",name:"Alex Johnson",description:"Young adult with normal hearing",difficulty:"beginner",hearingLossType:"normal",thresholds:this.generateNormalHearingThresholds()},{id:"patient2",name:"Sarah Miller",description:"Middle-aged with mild high-frequency sensorineural hearing loss",difficulty:"beginner",hearingLossType:"sensorineural",thresholds:this.generateMildHighFrequencyLoss()},{id:"patient3",name:"Robert Chen",description:"Adult with moderate flat conductive hearing loss",difficulty:"intermediate",hearingLossType:"conductive",thresholds:this.generateConductiveLoss()},{id:"patient4",name:"Maria Garcia",description:"Elderly with asymmetrical sensorineural hearing loss",difficulty:"intermediate",hearingLossType:"asymmetrical",thresholds:this.generateAsymmetricalLoss()},{id:"patient5",name:"James Wilson",description:"Adult with mixed hearing loss",difficulty:"advanced",hearingLossType:"mixed",thresholds:this.generateMixedLoss()},{id:"patient6",name:"Eliza Thompson",description:"Child with severe-profound sensorineural hearing loss",difficulty:"advanced",hearingLossType:"sensorineural",thresholds:this.generateSevereProfoundLoss()}]}generateNormalHearingThresholds(){const t=[];return[250,500,750,1e3,1500,2e3,3e3,4e3,6e3,8e3].forEach(s=>{t.push({frequency:s,hearingLevel:this.getRandomLevel(-10,15),ear:"right",testType:"air",responseStatus:"threshold"}),t.push({frequency:s,hearingLevel:this.getRandomLevel(-10,15),ear:"left",testType:"air",responseStatus:"threshold"})}),[250,500,1e3,2e3,3e3,4e3].forEach(s=>{t.push({frequency:s,hearingLevel:this.getRandomLevel(-10,15),ear:"right",testType:"bone",responseStatus:"threshold"}),t.push({frequency:s,hearingLevel:this.getRandomLevel(-10,15),ear:"left",testType:"bone",responseStatus:"threshold"})}),t}generateMildHighFrequencyLoss(){const t=[];return[250,500,750,1e3,1500,2e3,3e3,4e3,6e3,8e3].forEach(s=>{let l=10,d=10;s>=2e3&&(l=Math.min(85,10+Math.round((s-1500)/100)),d=Math.min(85,10+Math.round((s-1500)/100))),l=l+this.getRandomLevel(-5,5),d=d+this.getRandomLevel(-5,5),t.push({frequency:s,hearingLevel:l,ear:"right",testType:"air",responseStatus:"threshold"}),t.push({frequency:s,hearingLevel:d,ear:"left",testType:"air",responseStatus:"threshold"})}),[250,500,1e3,2e3,3e3,4e3].forEach(s=>{let l=10,d=10;s>=2e3&&(l=Math.min(85,10+Math.round((s-1500)/100)),d=Math.min(85,10+Math.round((s-1500)/100))),l=l+this.getRandomLevel(-5,5),d=d+this.getRandomLevel(-5,5),t.push({frequency:s,hearingLevel:l,ear:"right",testType:"bone",responseStatus:"threshold"}),t.push({frequency:s,hearingLevel:d,ear:"left",testType:"bone",responseStatus:"threshold"})}),t}generateConductiveLoss(){const t=[];return[250,500,750,1e3,1500,2e3,3e3,4e3,6e3,8e3].forEach(s=>{const l=40+this.getRandomLevel(0,15),d=40+this.getRandomLevel(0,15);t.push({frequency:s,hearingLevel:l,ear:"right",testType:"air",responseStatus:"threshold"}),t.push({frequency:s,hearingLevel:d,ear:"left",testType:"air",responseStatus:"threshold"})}),[250,500,1e3,2e3,3e3,4e3].forEach(s=>{const l=this.getRandomLevel(-10,15),d=this.getRandomLevel(-10,15);t.push({frequency:s,hearingLevel:l,ear:"right",testType:"bone",responseStatus:"threshold"}),t.push({frequency:s,hearingLevel:d,ear:"left",testType:"bone",responseStatus:"threshold"})}),t}generateAsymmetricalLoss(){const t=[250,500,750,1e3,1500,2e3,3e3,4e3,6e3,8e3],n=[];return t.forEach(r=>{let s;r<=1e3?s=this.getRandomLevel(15,25):s=this.getRandomLevel(30,45);let l;r<=1e3?l=this.getRandomLevel(40,55):l=this.getRandomLevel(60,75),n.push({frequency:r,hearingLevel:s,ear:"right",testType:"air",responseStatus:"threshold"}),n.push({frequency:r,hearingLevel:l,ear:"left",testType:"air",responseStatus:"threshold"}),r<=4e3&&(n.push({frequency:r,hearingLevel:s,ear:"right",testType:"bone",responseStatus:"threshold"}),n.push({frequency:r,hearingLevel:l,ear:"left",testType:"bone",responseStatus:"threshold"}))}),n}generateMixedLoss(){const t=[250,500,750,1e3,1500,2e3,3e3,4e3,6e3,8e3],n=[],r=25;return t.forEach(s=>{let l,d;s<=1e3?(l=this.getRandomLevel(20,30),d=this.getRandomLevel(20,30)):(l=this.getRandomLevel(40,55),d=this.getRandomLevel(40,55));const a=l+r,f=d+r;n.push({frequency:s,hearingLevel:a,ear:"right",testType:"air",responseStatus:"threshold"}),n.push({frequency:s,hearingLevel:f,ear:"left",testType:"air",responseStatus:"threshold"}),s<=4e3&&(n.push({frequency:s,hearingLevel:l,ear:"right",testType:"bone",responseStatus:"threshold"}),n.push({frequency:s,hearingLevel:d,ear:"left",testType:"bone",responseStatus:"threshold"}))}),n}generateSevereProfoundLoss(){const t=[250,500,750,1e3,1500,2e3,3e3,4e3,6e3,8e3],n=[];return t.forEach(r=>{const s=this.getRandomLevel(80,110),l=this.getRandomLevel(80,110);n.push({frequency:r,hearingLevel:s,ear:"right",testType:"air",responseStatus:"threshold"}),n.push({frequency:r,hearingLevel:l,ear:"left",testType:"air",responseStatus:"threshold"}),r<=4e3&&(n.push({frequency:r,hearingLevel:s,ear:"right",testType:"bone",responseStatus:r<=1e3?"threshold":"no_response"}),n.push({frequency:r,hearingLevel:l,ear:"left",testType:"bone",responseStatus:r<=1e3?"threshold":"no_response"}))}),n}getRandomLevel(t,n){t=Math.max(5,t);const r=Math.round((Math.random()*(n-t)+t)/5)*5;return Math.min(120,Math.max(5,r))}getAllPatients(){return[...this.patients]}getPatientById(t){return this.patients.find(n=>n.id===t)}getPatientsByDifficulty(t){return this.patients.filter(n=>n.difficulty===t)}getPatientsByType(t){return this.patients.filter(n=>n.hearingLossType===t)}}const Se=new Vt,_t={beginner:"success",intermediate:"warning",advanced:"error"},Ut={normal:"success",conductive:"info",sensorineural:"warning",mixed:"error",asymmetrical:"secondary"},Jt=o=>o.split(" ").map(t=>t.charAt(0)).join("").toUpperCase(),Xt=({patient:o,onSelect:t,selected:n=!1})=>{const r=ie(),s=Re(r.breakpoints.down("sm"));return e.jsxs(Ze,{elevation:n?8:3,sx:{maxWidth:"100%",transition:"all 0.3s ease",transform:n?"scale(1.02)":"scale(1)",border:n?"2px solid #3f51b5":"none",height:"100%",display:"flex",flexDirection:"column"},children:[e.jsxs(et,{sx:{flexGrow:1,p:{xs:1.5,sm:2}},children:[e.jsxs(m,{sx:{display:"flex",flexDirection:{xs:"column",sm:"row"},alignItems:{xs:"center",sm:"flex-start"},mb:2},children:[e.jsx(tt,{sx:{bgcolor:n?"#3f51b5":"#9c27b0",width:{xs:48,sm:56},height:{xs:48,sm:56},mr:{xs:0,sm:2},mb:{xs:1,sm:0}},children:Jt(o.name)}),e.jsxs(m,{sx:{width:"100%",textAlign:{xs:"center",sm:"left"}},children:[e.jsx(y,{variant:"h6",component:"div",gutterBottom:!0,children:o.name}),e.jsxs(m,{sx:{display:"flex",gap:1,flexWrap:"wrap",justifyContent:{xs:"center",sm:"flex-start"}},children:[e.jsx(O,{label:o.difficulty,size:"small",color:_t[o.difficulty]}),e.jsx(O,{label:o.hearingLossType.replace("_"," "),size:"small",color:Ut[o.hearingLossType]})]})]})]}),e.jsx(y,{variant:"body2",color:"text.secondary",paragraph:!0,sx:{textAlign:{xs:"center",sm:"left"}},children:o.description}),e.jsxs(m,{sx:{display:"flex",flexDirection:{xs:"column",sm:"row"},justifyContent:"space-between",gap:1},children:[e.jsxs(y,{variant:"body2",color:"text.secondary",children:[e.jsx("strong",{children:"Profile ID:"})," ",o.id]}),e.jsxs(y,{variant:"body2",color:"text.secondary",children:[e.jsx("strong",{children:"Thresholds:"})," ",o.thresholds.length," data points"]})]})]}),e.jsx(st,{sx:{p:{xs:1,sm:1.5}},children:e.jsx(I,{size:s?"medium":"small",variant:n?"contained":"outlined",color:"primary",onClick:()=>t(o),fullWidth:!0,children:n?"Selected":"Select Patient"})})]})};class Gt{constructor(){P(this,"currentSession",null);P(this,"activeSessions",[]);P(this,"completedSessions",[]);P(this,"falsePositiveCount",0);P(this,"testFrequencies",[250,500,750,1e3,1500,2e3,3e3,4e3,6e3,8e3]);P(this,"boneTestFrequencies",[500,1e3,2e3,4e3]);P(this,"testTypes",["air","bone"]);P(this,"defaultStartLevel",40);P(this,"initialStepSize",10);P(this,"finalStepSize",5);P(this,"includeBoneConduction",!0);P(this,"includeAirConduction",!0)}startSession(t,n){n&&(n.includeAirConduction!==void 0&&(this.includeAirConduction=n.includeAirConduction),n.includeBoneConduction!==void 0&&(this.includeBoneConduction=n.includeBoneConduction));const r=this.generateTestSequence(),s={id:Rt(),startTime:new Date().toISOString(),patientId:t.id,completed:!1,testSequence:r,currentStep:0};return this.currentSession=s,this.activeSessions.push(s),s}generateTestSequence(){const t=[];let n=1;return[{ear:"right",testType:"air"},{ear:"left",testType:"air"},{ear:"right",testType:"bone"},{ear:"left",testType:"bone"}].forEach(({ear:s,testType:l})=>{if(l==="bone"&&!this.includeBoneConduction||l==="air"&&!this.includeAirConduction)return;const d=l==="bone"?this.boneTestFrequencies:this.testFrequencies,a=[],f=d.indexOf(1e3);if(f!==-1){a.push(1e3);for(let S=f+1;S<d.length;S++)a.push(d[S]);a.push(1e3);for(let S=f-1;S>=0;S--)a.push(d[S])}else a.push(...d);a.forEach(S=>{t.push({id:n++,frequency:S,ear:s,testType:l,currentLevel:this.defaultStartLevel,completed:!1,responses:[]})})}),t}getCurrentStep(){if(!this.currentSession)return null;const{currentStep:t,testSequence:n}=this.currentSession;return t>=n.length?null:n[t]}playCurrentTone(t,n=!0){const r=this.getCurrentStep();if(!r)return;const{frequency:s,ear:l,currentLevel:d,testType:a}=r;oe.playTone(s,d,l,t,a,n)}recordResponse(t){if(!this.currentSession)return null;const n=this.getCurrentStep();return n?(n.responses.push({level:n.currentLevel,response:t}),this.adjustLevelPerProtocol(n,t),n):null}recordResponseWithoutAdjustment(t){if(!this.currentSession)return null;const n=this.getCurrentStep();return n?(n.responses.push({level:n.currentLevel,response:t}),n):null}setCurrentLevel(t){if(!this.currentSession)return null;const n=this.getCurrentStep();if(!n)return null;const r=n.frequency,s=n.ear;return console.log(`TestingService: Setting level for frequency ${r}Hz, ${s} ear to ${t}dB`),n.currentLevel=t,n}adjustLevelPerProtocol(t,n){const{responses:r}=t;if(n)t.currentLevel=Math.max(-10,t.currentLevel-10),console.log(`Patient responded: Decreasing by 10 dB to ${t.currentLevel} dB (Hughson-Westlake protocol)`);else{const s=r.length<2,l=s?this.initialStepSize:this.finalStepSize;t.currentLevel=Math.min(120,t.currentLevel+l),console.log(`No response: Increasing by ${l} dB to ${t.currentLevel} dB (${s?"Initial phase":"Bracketing phase"})`)}this.isThresholdEstablished(t)&&(t.completed=!0,this.moveToNextStep())}determineStepSize(t){const{responses:n}=t;return n.length<2?this.initialStepSize:this.finalStepSize}isThresholdEstablished(t){const{responses:n}=t;if(n.length<3)return!1;const r=new Map;n.forEach(d=>{const a=d.level,f=r.get(a)||{total:0,heard:0};f.total+=1,d.response&&(f.heard+=1),r.set(a,f)});let s=!1,l=null;return r.forEach((d,a)=>{d.total>=3&&d.heard>=2&&(!s||l!==null&&a<l)&&(s=!0,l=a,console.log(`Threshold identified at ${a} dB with ${d.heard}/${d.total} responses`))}),s&&console.log(`Final threshold established at ${l} dB`),s}moveToNextStep(){if(!this.currentSession)return;const t=this.getCurrentStep();t&&(console.log(`Completing step at level: ${t.currentLevel}dB before moving to next step`),console.log(`Step completed status: ${t.completed}, responseStatus: ${t.responseStatus||"not set"}`)),this.currentSession.currentStep+=1,this.currentSession.currentStep>=this.currentSession.testSequence.length&&this.completeSession()}skipCurrentStep(t=!1){if(console.log("=== Debug: skipCurrentStep called with markCompleted =",t),!this.currentSession)return console.log("=== Debug: skipCurrentStep - no current session"),null;const n=this.getCurrentStep();if(n){t?(console.log(`Marking step as completed with threshold at: ${n.currentLevel}dB`),n.completed=!0,n.responseStatus||(n.responseStatus="threshold")):console.log("Skipping to next step without marking current step as completed");const r=this.currentSession.currentStep;this.moveToNextStep();const s=this.currentSession.currentStep;console.log(`=== Debug: skipCurrentStep - moved from step ${r} to ${s}`),console.log(`=== Debug: session has ${this.currentSession.testSequence.length} total steps`),console.log(`=== Debug: returning new step with frequency ${this.getCurrentStep()?.frequency||"null"}`)}else console.log("=== Debug: skipCurrentStep - no current step found");return this.getCurrentStep()}completeSession(){if(!this.currentSession)return null;const t=this.currentSession;t.completed=!0;const n=t.patientId,r=Se.getPatientById(n),s=this.calculateResults(t,r?.thresholds||[]);return t.results=s,console.log("Completing test session with results:",{sessionId:t.id,userThresholds:s.userThresholds?.length||0,actualThresholds:s.actualThresholds?.length||0}),this.completedSessions.push(t),this.activeSessions=this.activeSessions.filter(l=>l.id!==t.id),this.currentSession=null,t}calculateResults(t,n=[]){const r=this.extractThresholds(t);let s=0,l=0;r.forEach(S=>{if(S.responseStatus==="threshold"){const j=n.find(C=>C.frequency===S.frequency&&C.ear===S.ear&&C.testType===S.testType&&C.responseStatus==="threshold");if(j){const C=Math.abs(S.hearingLevel-j.hearingLevel);C<=5?s+=100-C*5:C<=10?s+=50:s+=25,l++}}});const d=l>0?Math.round(s/l):0,a=r.filter(S=>S.responseStatus==="not_tested").length,f={patientId:t.patientId,timestamp:new Date().toISOString(),userThresholds:r,actualThresholds:n,accuracy:d,testDuration:this.calculateTestDuration(t),technicalErrors:this.identifyTechnicalErrors(t),falsePositives:this.falsePositiveCount,completionStatus:{totalFrequencies:r.length,testedFrequencies:r.length-a,untestedFrequencies:a,completionPercentage:Math.round((r.length-a)/r.length*100)}};return this.falsePositiveCount=0,f}extractThresholds(t){const n=[];return t.testSequence.forEach(r=>{if(r.completed&&r.responseStatus==="threshold")n.push({frequency:r.frequency,hearingLevel:r.currentLevel,ear:r.ear,testType:r.testType,responseStatus:"threshold"});else if(r.responses.length>0){const s=new Map;r.responses.forEach(a=>{if(a.response){const f=s.get(a.level)||0;s.set(a.level,f+1)}});let l=null,d=1/0;if(s.forEach((a,f)=>{a>=2&&f<d&&(d=f,l=f)}),l!==null)n.push({frequency:r.frequency,hearingLevel:l,ear:r.ear,testType:r.testType,responseStatus:"threshold"});else{const a=Math.max(...r.responses.map(f=>f.level));n.push({frequency:r.frequency,hearingLevel:a,ear:r.ear,testType:r.testType,responseStatus:"no_response"})}}else n.push({frequency:r.frequency,hearingLevel:0,ear:r.ear,testType:r.testType,responseStatus:"not_tested"})}),n}calculateTestDuration(t){const n=new Date(t.startTime).getTime(),r=new Date().getTime();return Math.round((r-n)/1e3)}identifyTechnicalErrors(t){const n=[],r=t.testSequence.filter(s=>!s.completed);return r.length>0&&n.push(`Skipped ${r.length} test frequencies`),t.testSequence.forEach(s=>{s.completed&&s.responses.length<3&&n.push(`Insufficient responses for ${s.frequency} Hz in ${s.ear} ear`)}),t.testSequence.forEach(s=>{s.responses.length>0&&s.responses[0].level>60&&n.push(`Starting level too high for ${s.frequency} Hz in ${s.ear} ear`)}),n}getCurrentSession(){return this.currentSession}getActiveSessions(){return[...this.activeSessions]}getCompletedSessions(){return[...this.completedSessions]}getSessionById(t){return this.activeSessions.find(n=>n.id===t)||this.completedSessions.find(n=>n.id===t)||null}clearAllSessions(){this.activeSessions=[],this.completedSessions=[],this.currentSession=null}calculateProgress(){if(!this.currentSession)return 0;const t=this.currentSession.testSequence.length;if(t===0)return 0;const n=this.currentSession.testSequence.filter(s=>s.completed&&s.responseStatus==="threshold").length;console.log("Progress calculation:",{totalSteps:t,completedSteps:n,completedThresholdSteps:this.currentSession.testSequence.filter(s=>s.completed&&s.responseStatus==="threshold").map(s=>({id:s.id,frequency:s.frequency,ear:s.ear,level:s.currentLevel,responseStatus:s.responseStatus})),allCompletedSteps:this.currentSession.testSequence.filter(s=>s.completed).map(s=>({id:s.id,frequency:s.frequency,ear:s.ear,level:s.currentLevel,responseStatus:s.responseStatus||"none"}))});const r=Math.round(n/t*100);return console.log(`Progress: ${n}/${t} steps completed (${r}%)`),r}completeCurrentStep(t){if(!this.currentSession||this.currentSession.currentStep===void 0)return console.error("Cannot complete step: No current session or step"),!1;const n=this.currentSession.currentStep;return n<0||n>=this.currentSession.testSequence.length?(console.error(`Invalid step index: ${n}`),!1):(this.currentSession.testSequence[n].completed=!0,this.currentSession.testSequence[n].responseStatus=t,console.log(`Marked step ${n} as completed with responseStatus='${t}'`),!0)}recordFalsePositive(){this.falsePositiveCount++,console.log(`False positive recorded. Total: ${this.falsePositiveCount}`)}}const R=new Gt,Qt=(o,t)=>{if(!t)return o;const n=JSON.parse(JSON.stringify(o)),r=t.testSequence.filter(s=>s.completed&&s.responseStatus==="threshold");return console.log(`Preserving ${r.length} thresholds from current session:`,r.map(s=>`${s.frequency}Hz ${s.ear} ear at ${s.currentLevel}dB`).join(", ")),r.length>0&&r.forEach(s=>{const l=n.testSequence.findIndex(d=>d.frequency===s.frequency&&d.ear===s.ear&&d.testType===s.testType);l!==-1&&(n.testSequence[l]={...n.testSequence[l],completed:!0,responseStatus:"threshold",currentLevel:s.currentLevel})}),n},$e=(o,t)=>{if(!o)return!1;const n=t.find(d=>d.frequency===o.frequency&&d.ear===o.ear&&d.testType===o.testType);if(!n)return!1;const r=Math.floor(Math.random()*10)-5,s=n.hearingLevel+r,l=Math.max(5,s);return o.currentLevel>=l},Kt=o=>{if(!o)return[];const t=o.testSequence.filter(s=>s.completed&&s.responseStatus==="threshold");console.log(`Extracting thresholds from session - found ${t.length} completed steps with thresholds`),console.log("Completed steps with responseStatus=threshold:",t);const n=new Map;t.forEach(s=>{const l=`${s.frequency}-${s.ear}-${s.testType||"air"}`,d={frequency:s.frequency,hearingLevel:s.currentLevel,ear:s.ear,testType:s.testType||"air",responseStatus:"threshold"};console.log(`Adding threshold: ${s.frequency}Hz, ${s.ear} ear, ${s.currentLevel}dB HL, key=${l}`),n.set(l,d)});const r=Array.from(n.values());return console.log(`Extracted ${r.length} unique thresholds:`,r),r},Zt=(o,t)=>t<2?{isValid:!1,reason:`Need more presentations (currently ${t}, need at least 2)`}:t===2&&o===2?{isValid:!0,reason:"Valid threshold: 2 out of 2 responses"}:t===3&&o>=2?{isValid:!0,reason:"Valid threshold: 2 out of 3 responses"}:t>3&&o>=2?{isValid:!0,reason:`Valid threshold: ${o} out of ${t} responses`}:{isValid:!1,reason:`Invalid threshold: only ${o} out of ${t} responses`},es=(o,t,n,r,s,l,d)=>{if(console.log("🔄 updateTrainerState called with:",{didRespond:o,currentStep:t?{frequency:t.frequency,ear:t.ear,currentLevel:t.currentLevel}:null,procedurePhase:n,thresholdPhaseStartTime:s,lastPresentationTime:l,lastProcessedPresentation:d}),!t)return console.warn("❌ Cannot update trainer state: currentStep is null"),{procedurePhase:n,suggestedAction:"present",guidance:"Error: No current test step available. Please restart the test.",lastResponseLevel:null,responseCounts:r};if(l<=d)return console.warn("⚠️ Duplicate presentation detected:",{lastPresentationTime:l,lastProcessedPresentation:d,timeDiff:l-d}),{procedurePhase:n,suggestedAction:"present",guidance:"Please wait before presenting the next tone.",lastResponseLevel:null,responseCounts:r};if(n==="threshold"&&(!s||l<=s))return console.warn("⚠️ Invalid threshold phase timing:",{thresholdPhaseStartTime:s,lastPresentationTime:l,timeDiff:l-(s||0)}),{procedurePhase:n,suggestedAction:"present",guidance:"Please wait a moment before continuing the test.",lastResponseLevel:null,responseCounts:r};let a=JSON.parse(JSON.stringify(r)),f=n,S="present",j="",C=null;const{frequency:T,ear:L,currentLevel:b}=t;if(a[T]||(a[T]={}),a[T][L]||(a[T][L]={}),a[T][L][b]||(a[T][L][b]={total:0,heard:0}),console.log("📊 Current state before processing:",{frequency:T,ear:L,currentLevel:b,currentResponses:a[T][L][b],phase:n}),o){if(console.log("Patient responded - updating state"),n==="initial")f="descending",S="decrease",j=`Good! The patient heard the initial tone at ${b} dB. Following Hughson-Westlake protocol, we'll now begin the descending phase. Decrease by 10 dB and present the tone again. We'll continue decreasing by 10 dB until the patient no longer responds.
      
      Note: Responses during the initial descent do not count towards threshold determination.`,console.log("Initial phase - patient responded, changing to descending phase");else if(n==="descending")f="descending",S="decrease",j=`The patient can still hear at ${b} dB. Continue the descending phase by decreasing in 10 dB steps. This helps us quickly find the approximate threshold region. Once the patient stops responding, we'll begin the more precise bracketing pattern.
      
      Note: Responses during the descending phase are only used to find the approximate threshold region and do not count towards threshold determination.`,console.log("Descending phase - patient responded, suggesting continue decreasing (response not counted for threshold)");else if(n==="ascending")f="threshold",C=b,S="decrease",j=`You've found a potential threshold region at ${b} dB! Now we'll begin the precise bracketing pattern to determine the exact threshold. The Hughson-Westlake protocol requires:
      1. Decrease by 10 dB after EVERY response
      2. Increase by 5 dB when there's NO response
      3. Establish threshold when patient responds to 2 out of 2 or 2 out of 3 presentations at the same level
      
      Note: This first ascending response is used only to identify the threshold region and does not count towards threshold determination.
      Let's start by decreasing 10 dB.`,console.log(`Ascending phase - patient responded at ${b}dB, changed to threshold phase without counting response`),a[T][L][b]&&(a[T][L][b]={total:0,heard:0});else if(n==="threshold"){const c=t.currentLevel,i=t.frequency,u=t.ear;a[i]||(a[i]={}),a[i][u]||(a[i][u]={}),a[i][u][c]||(a[i][u][c]={total:0,heard:0}),a[i][u][c].total+=1,a[i][u][c].heard+=1,console.log(`Threshold phase - adding response at ${c}dB for ${i}Hz, ${u} ear: ${a[i][u][c].heard}/${a[i][u][c].total} responses`),C=c;const g=a[i][u][c].heard,x=a[i][u][c].total;if(s&&l>s)if(console.log(`🔢 Current responses at ${c}dB: ${g}/${x}`),console.log(`⏰ Presentation time: ${l}, Threshold phase start: ${s}`),l>d){S="decrease";const p=Zt(g,x);p.isValid?(console.log(`✅ Threshold CONFIRMED at ${c}dB - ${p.reason}`),f="complete",S="store_threshold",j=`Excellent! You have established a valid threshold at ${c} dB. ${p.reason}. 
            
            This threshold was determined using proper Hughson-Westlake bracketing:
            • Started with descending 10 dB steps
            • Used 5 dB ascending steps
            • Confirmed with ${g}/${x} responses at this level
            
            You can now store this threshold and move to the next test frequency.`):(console.log(`⏳ Continuing threshold testing at ${c}dB - ${p.reason}`),S="decrease",j=`The patient responded at ${c} dB, but we haven't established a threshold yet. ${p.reason}. 
            
            Remember the Hughson-Westlake rules:
            • ALWAYS decrease by 10 dB after a response
            • Need 2 out of 2 or 2 out of 3 responses at the same level
            • Responses must be during the bracketing phase
            
            Following protocol, decrease by 10 dB and continue the bracketing pattern.`)}else console.log(`⚠️ Double counting prevented! This presentation (${l}) was already processed.`);else console.log("⚠️ Ignoring response from before threshold phase started in updateTrainerState"),console.log(`⏰ Presentation time: ${l}, Threshold phase start: ${s}`)}}else{console.log("Patient did NOT respond - updating state");const c=t.currentLevel,i=t.frequency,u=t.ear;switch(a[i]||(a[i]={}),a[i][u]||(a[i][u]={}),a[i][u][c]||(a[i][u][c]={total:0,heard:0}),n==="threshold"?(a[i][u][c].total+=1,console.log(`Threshold phase - adding no-response at ${c}dB for ${i}Hz, ${u} ear: ${a[i][u][c].heard}/${a[i][u][c].total} responses`)):console.log(`${n} phase - not counting no-response towards threshold determination`),n){case"initial":S="increase",j=`No response at ${c} dB. Since this is the initial presentation and we need to find a clearly audible starting level, increase by 10 dB. We'll continue increasing until we get a response, then begin the descending phase.`;break;case"descending":f="ascending",S="increase",j=`No response at ${c} dB - this means we've descended below the threshold region. Now we'll begin the ascending phase:
        1. First, increase by 5 dB (smaller steps for more accuracy)
        2. Continue ascending until patient responds
        3. That first ascending response will mark the start of threshold determination`;break;case"threshold":S="increase",j=`No response at ${c} dB. Following Hughson-Westlake protocol, increase by 5 dB. Remember:
        • Use 5 dB steps when going up
        • Use 10 dB steps when going down
        • This bracketing pattern helps us precisely determine the threshold`;break;default:S="present",j=`No response at ${c} dB.`}}return{procedurePhase:f,suggestedAction:S,guidance:j,lastResponseLevel:C,responseCounts:a}};function ts({currentStep:o,toneActive:t,setToneActive:n,patientResponse:r,setPatientResponse:s,setShowResponseIndicator:l,setPatientJustResponded:d,lastPresentationTimeRef:a,lastProcessedPresentationRef:f,thresholdPhaseStartTime:S,updateTrainerState:j,patientThresholds:C}){const T=w.useCallback(()=>{if(o)try{if(console.log("🎵 Starting tone..."),oe.stopTone(),o){const i=o.frequency;console.log(`🔊 Explicit frequency check: Using ${i}Hz for tone`),R.setCurrentLevel(o.currentLevel),console.log(`🔊 Starting tone at user-set level: ${o.currentLevel}dB`)}s(null),d(!1),l(!1),console.log("🔄 Response states reset"),n(!0),console.log("🔊 Tone active set to true"),R.playCurrentTone(),console.log("🎵 Pulsed tone started");const c=$e(o,C);console.log("👂 Immediate patient response check:",c),c&&(s(c),l(!0),d(!0),console.log("👂 Patient IMMEDIATELY responded to the tone!"),console.log("💾 Recording immediate response for later processing"),R.recordResponseWithoutAdjustment(c)),console.log("🎯 Recording tone presentation time"),a.current=Date.now()}catch(c){console.error("❌ Error playing tone:",c),n(!1),oe.stopTone()}},[o,n,s,l,d,a,C]),L=w.useCallback(()=>{console.log("🛑 Stopping tone..."),oe.stopTone();const c=t,i=r;console.log("🛑 Stopping tone with current state:",{toneActive:c,patientResponse:i}),n(!1);const u=Date.now();a.current=u,console.log("⏱️ Presentation stopped at:",u);let g=i;if(g===null){const x=$e(o,C);console.log("🔊 Simulating patient response at tone stop for internal processing only:",x),g=x}else console.log("🔊 Using existing patient response from during tone playback:",g);o&&(u>f.current?(console.log(`✅ Processing new presentation. Current: ${u}, Last processed: ${f.current}`),g!==null?(R.recordResponseWithoutAdjustment(!!g),console.log("🔄 Immediately updating trainer state with response:",g),j(!!g),f.current=u):(console.log("⚠️ Checking for unprocessed patient response from during tone playback"),i!==null&&(console.log("✅ Found unprocessed patient response:",i),R.recordResponseWithoutAdjustment(!!i),j(!!i),f.current=u))):console.log(`⚠️ Presentation already processed in stopTone! Current: ${u}, Last processed: ${f.current}`)),s(null),l(!1),d(!1),console.log("🔄 Patient response visuals reset AFTER updating trainer state")},[t,r,o,n,s,l,d,a,f,j,C]),b=w.useCallback(()=>{if(console.log("👂 Patient response handler called."),!o){console.log("⚠️ No current step available, cannot process patient response");return}if(!t){console.log("⚠️ False positive detected: Patient responded when no tone was presented"),R.recordFalsePositive(),d(!0),l(!0),setTimeout(()=>{l(!1),d(!1)},500);return}s(!0),l(!0),d(!0),R.recordResponse(!0),console.log("🎯 User indicated POSITIVE response"),j(!0),f.current=a.current,oe.stopTone(),n(!1)},[o,t,s,l,d,j,f,a]);return{startTone:T,stopTone:L,handlePatientResponse:b}}function ss({currentStep:o,session:t,setCurrentStep:n,setSession:r,procedurePhase:s,setProcedurePhase:l,setSuggestedAction:d,setCurrentGuidance:a,setLastResponseLevel:f,preserveThresholds:S}){const j=w.useCallback(L=>{if(o)try{const b=Math.max(-10,Math.min(120,o.currentLevel+L));console.log(`Adjusting level for frequency ${o.frequency}Hz, ${o.ear} ear: ${o.currentLevel}dB -> ${b}dB`),s==="initial"||s==="descending"?L===-10?(l("descending"),d("present"),a(`You've decreased by 10 dB. Now present the tone to see if the patient can still hear it at ${b} dB.`)):L===5||L===10?(d("present"),a(`You've increased by ${L} dB. Present the tone to check for a response at ${b} dB.`)):L===-5&&(d("present"),a(`You've decreased by 5 dB. While Hughson-Westlake protocol uses 10 dB decrements in the descending phase, you can still present the tone at ${b} dB to check for a response.`)):s==="ascending"?L===5?(d("present"),a(`You've increased by 5 dB. Now present the tone to see if the patient can hear it at ${b} dB.`)):L===10?(d("present"),a(`You've increased by 10 dB. While Hughson-Westlake protocol uses 5 dB increments in the ascending phase, you can still present the tone at ${b} dB to check for a response.`)):L<0&&(l("descending"),d("present"),a(`You've decreased by ${Math.abs(L)} dB, changing to the descending phase. Present the tone to check for a response at ${b} dB.`)):s==="threshold"?(L===-10?(d("present"),a(`You've decreased by 10 dB to ${b} dB. This follows the Hughson-Westlake protocol. Present the tone to check for a response at this new level.`),console.log(`Threshold phase - decreased by 10dB to ${b}dB`)):L===5?(d("present"),a(`You've increased by 5 dB to ${b} dB. This follows the Hughson-Westlake protocol. Present the tone to check for a response at this new level.`),console.log(`Threshold phase - increased by 5dB to ${b}dB`)):(d("present"),a(`You've changed the level to ${b} dB. Present the tone to check for a response at this level.`),console.log(`Threshold phase - adjusted by ${L}dB to ${b}dB (non-standard adjustment)`)),f(b)):s==="complete"&&(l("threshold"),d("present"),a(`You're adjusting the level after completing threshold determination. You're now at ${b} dB. Present the tone to check for a response.`));const c={...o,currentLevel:b};if(n(c),R.setCurrentLevel(b),t){const i={...t};i.testSequence=[...i.testSequence];const u=i.currentStep;i.testSequence[u]&&i.testSequence[u].frequency===o.frequency&&i.testSequence[u].ear===o.ear&&(i.testSequence[u]={...i.testSequence[u],currentLevel:b},r(i))}}catch(b){console.error("Error adjusting level:",b)}},[o,t,s,n,r,l,d,a,f]),C=w.useCallback(L=>{if(!o)return;const b=[250,500,750,1e3,1500,2e3,3e3,4e3,6e3,8e3],c=o.frequency,i=b.indexOf(c);if(i===-1)return;let u=i+L;if(u<0&&(u=0),u>=b.length&&(u=b.length-1),u!==i){const g=b[u];if(console.log(`Changing frequency from ${c}Hz to ${g}Hz`),t){const x=t.testSequence.findIndex(p=>p.frequency===g&&p.ear===o.ear&&p.testType===o.testType);if(x!==-1){console.log(`Found matching step for ${g}Hz at index ${x}`);const p=JSON.parse(JSON.stringify(t));p.currentStep=x;const h=p.testSequence[x];console.log(`Navigating to step with ID ${h.id}, frequency ${h.frequency}Hz`),r(p);const k=JSON.parse(JSON.stringify(h));n(k);const B=R.getCurrentSession();B&&(B.currentStep=p.currentStep,console.log(`Explicitly updated TestingService step to ${p.currentStep} with frequency ${h.frequency}Hz`)),h.completed&&h.responseStatus==="threshold"?(l("complete"),d("next"),a(`This frequency already has a threshold stored at ${h.currentLevel} dB. You can proceed to the next frequency or adjust the level to retest.`)):(l("initial"),d("present"),a(`Now testing at ${g} Hz. Begin at a comfortable level (30-40 dB).`))}}}},[o,t,n,r,l,d,a]),T=w.useCallback((L,b)=>{if(!o||!t)return;const i=[250,500,750,1e3,1500,2e3,3e3,4e3,6e3,8e3].reduce((u,g)=>Math.abs(g-L)<Math.abs(u-L)?g:u);console.log(`Audiogram click - requested: ${L}Hz at ${b}dB, closest available: ${i}Hz`);try{const u=Math.max(-10,Math.min(120,b));if(i!==o.frequency||u!==o.currentLevel){const g=t.testSequence.findIndex(x=>x.frequency===i&&x.ear===o.ear&&x.testType===o.testType);if(g!==-1){const x={...t.testSequence[g]};x.currentLevel=u;const p=R.getCurrentSession();p&&(p.currentStep=g),R.setCurrentLevel(u),n(x);const h={...t};h.currentStep=g,h.testSequence=[...h.testSequence],h.testSequence[g]=x;const k=S(h);r(k),x.completed&&x.responseStatus==="threshold"?(l("complete"),d("next"),a(`This frequency already has a threshold stored at ${x.currentLevel} dB. You can proceed to the next frequency or adjust the level to retest.`)):(l("initial"),d("present"),a(`Now testing at ${i} Hz and ${u} dB. Present the tone to check for response.`)),console.log(`Audiogram click - changed to ${i}Hz at ${u}dB`)}else console.error(`Could not find matching step for frequency ${i}Hz in test sequence`)}}catch(u){console.error("Error handling audiogram click:",u)}},[o,t,n,r,l,d,a,S]);return{handleAdjustLevel:j,handleAdjustFrequency:C,handleAudiogramClick:T}}function ns({currentStep:o,session:t,responseCounts:n,setSession:r,setCurrentStep:s,setProcedurePhase:l,setSuggestedAction:d,setCurrentGuidance:a,setResponseCounts:f,setErrorMessage:S}){const j=w.useCallback(()=>{if(!o)return{isValid:!1,message:"No current test step available."};const L=o.frequency,b=o.ear,c=o.currentLevel;if(n&&n[L]&&n[L][b]&&n[L][b][c]){const i=n[L][b][c].heard,u=n[L][b][c].total;return u>=2&&i>=2?{isValid:!0,message:"Valid threshold established."}:u<2?{isValid:!1,message:`Need more responses at this level (${i}/${u} so far).`}:{isValid:!1,message:"Invalid threshold. Hughson-Westlake requires at least 2 out of 3 responses at the same level."}}else return{isValid:!1,message:"No response data available for this level."}},[o,n]),C=w.useCallback(()=>j().isValid,[j]),T=w.useCallback(()=>{if(!o){console.error("Cannot store threshold: no current step");return}const L=o.currentLevel;console.log(`Storing threshold at current level: ${L}dB`),R.setCurrentLevel(L),R.completeCurrentStep("threshold");const b=R.getCurrentSession();if(!b){console.error("Failed to get updated session from TestingService"),S("Failed to store threshold: session not found.");return}r(b);const c={...o,completed:!0,responseStatus:"threshold",currentLevel:L};s(c);const i=R.calculateProgress();console.log(`Updated progress after storing threshold: ${i}%`),a(`Threshold manually stored at ${L} dB! You can now use the up arrow (or press Up) to move to the next frequency, or the down arrow to go to a previous frequency.`),l("complete"),d("next"),f(u=>{const g={...u},x=L,p=o.frequency,h=o.ear;return console.log(`Updating response counts for threshold: ${p}Hz, ${h} ear at ${x}dB`),g[p]||(g[p]={}),g[p][h]||(g[p][h]={}),g[p][h][x]={total:1,heard:1},g})},[o,S,r,s,a,l,d,f]);return{validateThreshold:j,canStoreThreshold:C,handleStoreThreshold:T}}function rs({session:o,setSession:t,setCurrentStep:n,setProcedurePhase:r,setSuggestedAction:s,setCurrentGuidance:l,setLastResponseLevel:d,setErrorMessage:a,setTestProgress:f,preserveThresholds:S,onComplete:j,procedurePhase:C}){const T=w.useCallback(()=>{try{console.log("⏭️ handleSkipStep called - skipping to next frequency"),r("initial"),d(null),s("present"),l("Start testing at a comfortable level (30-40 dB)."),console.log("Reset phase to: initial for next frequency");const c=R.skipCurrentStep();if(console.log("Next step from TestingService:",c),c){const i=R.getCurrentSession();if(i){const u=S(i);t(u);const g=u.currentStep,x=u.testSequence[g];if(x){const p=JSON.parse(JSON.stringify(x));n(p),console.log("Moving to next frequency:",p.frequency)}else console.error("Current step data not found in updated session"),a("Error navigating to next frequency.")}else console.error("Failed to get updated session from TestingService"),a("Failed to update session data.")}else{const i=R.completeSession();if(i){f(100),console.log("Test completed, progress set to 100%");const u=S(i);j(u)}}}catch(c){console.error("Error skipping to next step:",c),a("Failed to go to next step. Please try again.")}},[S,t,n,r,s,l,d,a,f,j]),L=w.useCallback(()=>{try{if(console.log("⏮️ handlePreviousStep called - going to previous frequency"),r("initial"),d(null),s("present"),l("Returning to the previous frequency. Begin at a comfortable level."),console.log("Reset phase to: initial for previous frequency"),o){console.log("📊 Before navigating back - Current step:",o.currentStep);const c=JSON.parse(JSON.stringify(o));if(c.currentStep>0){c.currentStep-=1;const i=c.testSequence[c.currentStep];if(!i){console.error("Previous step not found in test sequence"),a("Error navigating to previous frequency.");return}console.log("📊 Going back to step:",c.currentStep,"with frequency:",i.frequency);const u=S(c);t(u);const g=u.currentStep,x=u.testSequence[g];if(x){const h=JSON.parse(JSON.stringify(x));n(h)}else{console.error("Current step data not found in preserved session"),a("Error navigating to previous frequency.");return}const p=R.getCurrentSession();p&&(p.currentStep=u.currentStep,console.log(`🔄 Explicitly updated TestingService step to ${u.currentStep} with frequency ${x.frequency}Hz`)),console.log("Moving to previous frequency:",x.frequency)}else console.log("Already at the first frequency, cannot go back further"),a("Already at the first frequency.")}else console.error("No active session found"),a("No active session. Please restart the test.")}catch(c){console.error("Error going to previous step:",c),a("Failed to go to previous step. Please try again.")}},[o,S,t,n,r,s,l,d,a]),b=w.useCallback((c,i,u,g)=>{console.log("Implementing suggested action:",c);const x=o?JSON.parse(JSON.stringify(o)):null;switch(c){case"increase":C==="initial"?(g(10),console.log("Remained in initial phase after increasing by 10dB")):(g(5),console.log("Adjusted by 5dB in ascending/threshold phase"));break;case"decrease":g(-10),console.log("Decreased by 10dB as per suggestion");break;case"store_threshold":const{isValid:p,message:h}=i();p?(u(),console.log("Stored threshold using suggested action")):(a(h),l(h+" Continue testing to establish a valid threshold."));break;case"next":if(C==="complete"&&o){const{isValid:k}=i(),B=o.currentStep;k&&B!==void 0&&!o.testSequence[B]?.completed&&(console.log("Current step has valid threshold but is not marked completed - calling handleStoreThreshold"),u())}T(),console.log("Moved to next frequency");break;case"present":if(o?.currentStep!==void 0&&o?.testSequence[o.currentStep]){const k=o.testSequence[o.currentStep].currentLevel;l(`Present the tone at ${k} dB to check for a response.`)}break;default:console.log("Unknown suggested action:",c)}if(x&&o&&JSON.stringify(x)!==JSON.stringify(o)){console.log("Session changed after action, ensuring thresholds are preserved...");const p=S(o);JSON.stringify(p)!==JSON.stringify(o)&&(console.log("Updating session with preserved thresholds"),t(p))}},[o,C,T,S,t,l,a]);return{handleSkipStep:T,handlePreviousStep:L,handleSuggestedAction:b}}const os=(o,t,n)=>{const[r,s]=w.useState(null),[l,d]=w.useState(null),[a,f]=w.useState(0),[S,j]=w.useState(!1),[C,T]=w.useState(null),[L,b]=w.useState(!1),[c,i]=w.useState(!1),[u,g]=w.useState(""),[x,p]=w.useState("initial"),[h,k]=w.useState("Start testing at a comfortable level (30-40 dB)."),[B,z]=w.useState("present"),[F,Y]=w.useState(null),[M,V]=w.useState({}),U=w.useRef(null),A=w.useRef(0),Q=w.useRef(0),J=w.useRef(null),K=w.useMemo(()=>Kt(r),[r]),Z=w.useCallback(N=>Qt(N,r),[r]),ne=w.useCallback(N=>{if(!l)return;const W=es(N,l,x,M,J.current,A.current,Q.current);p(W.procedurePhase),z(W.suggestedAction),k(W.guidance),W.lastResponseLevel!==null&&Y(W.lastResponseLevel),V(W.responseCounts),x!=="threshold"&&W.procedurePhase==="threshold"&&(J.current=Date.now(),console.log(`⏰ Setting threshold phase start time to ${J.current}`))},[l,x,M]),{startTone:v,stopTone:$,handlePatientResponse:D}=ts({currentStep:l,toneActive:S,setToneActive:j,patientResponse:C,setPatientResponse:T,setShowResponseIndicator:b,setPatientJustResponded:i,lastPresentationTimeRef:A,lastProcessedPresentationRef:Q,thresholdPhaseStartTime:J,updateTrainerState:ne,patientThresholds:o.thresholds}),{handleAdjustLevel:ee,handleAdjustFrequency:Ye,handleAudiogramClick:Ve}=ss({currentStep:l,session:r,setCurrentStep:d,setSession:s,procedurePhase:x,setProcedurePhase:p,setSuggestedAction:z,setCurrentGuidance:k,setLastResponseLevel:Y,preserveThresholds:Z}),{validateThreshold:he,canStoreThreshold:_e,handleStoreThreshold:ue}=ns({currentStep:l,session:r,responseCounts:M,setSession:s,setCurrentStep:d,setProcedurePhase:p,setSuggestedAction:z,setCurrentGuidance:k,setResponseCounts:V,setErrorMessage:g}),Ue=_e(),{handleSkipStep:Je,handlePreviousStep:Xe,handleSuggestedAction:we}=rs({session:r,setSession:s,setCurrentStep:d,setProcedurePhase:p,setSuggestedAction:z,setCurrentGuidance:k,setLastResponseLevel:Y,setErrorMessage:g,setTestProgress:f,preserveThresholds:Z,onComplete:t,procedurePhase:x}),Ge=w.useCallback(()=>{we(B,he,ue,ee)},[B,he,ue,ee,we]);return w.useEffect(()=>{try{p("initial"),Y(null),z("present"),k("Start testing at a comfortable level (30-40 dB)."),oe.resumeAudioContext().then(()=>{const N=R.startSession(o);s(N),d(R.getCurrentStep()),f(0),console.log("New test session started, progress initialized to 0%")})}catch(N){console.error("Error initializing test session:",N),g("Failed to initialize test session. Please try again.")}},[o]),w.useEffect(()=>{const N=()=>{S&&$()};return document.addEventListener("mouseup",N),()=>{document.removeEventListener("mouseup",N)}},[S,$]),w.useEffect(()=>()=>{U.current&&clearInterval(U.current),oe.stopTone()},[]),w.useEffect(()=>{if(r){const N=R.calculateProgress();f(N),console.log(`Test progress updated: ${N}%`),N===0&&r.testSequence.some(W=>W.completed)&&console.log("WARNING: Progress is 0% but there are completed steps:",r.testSequence.filter(W=>W.completed).map(W=>({id:W.id,freq:W.frequency,ear:W.ear,completed:W.completed,status:W.responseStatus})))}},[r,l]),{session:r,currentStep:l,testProgress:a,toneActive:S,patientResponse:C,showResponseIndicator:L,patientJustResponded:c,errorMessage:u,procedurePhase:x,currentGuidance:h,suggestedAction:B,lastResponseLevel:F,canStoreThreshold:Ue,thresholds:K,startTone:v,stopTone:$,handlePatientResponse:D,handleAdjustLevel:ee,handleAdjustFrequency:Ye,handleStoreThreshold:ue,handleSkipStep:Je,handlePreviousStep:Xe,handleSuggestedAction:Ge,handleAudiogramClick:Ve,validateThreshold:he,updateSession:s}},is=({currentStep:o,testProgress:t,thresholdCount:n})=>e.jsx(H,{elevation:2,sx:{p:2,mb:2},children:e.jsxs(m,{sx:{display:"flex",flexDirection:"column"},children:[e.jsxs(m,{sx:{display:"flex",justifyContent:"space-between",alignItems:"center",mb:1},children:[e.jsx(y,{variant:"subtitle1",fontWeight:"medium",children:"Test Progress"}),e.jsxs(m,{sx:{display:"flex",alignItems:"center",gap:1},children:[n!==void 0&&e.jsx(O,{label:`${n} thresholds stored`,size:"small",color:"primary",variant:"outlined"}),e.jsxs(y,{variant:"body2",color:"text.secondary",children:[t,"%"]})]})]}),e.jsx(ze,{variant:"determinate",value:t,sx:{mb:1.5,height:8,borderRadius:1}}),e.jsxs(m,{sx:{display:"flex",justifyContent:"space-between"},children:[e.jsxs(y,{variant:"body2",color:"text.secondary",children:["Frequency: ",o.frequency," Hz"]}),e.jsxs(y,{variant:"body2",color:"text.secondary",children:["Ear: ",o.ear==="left"?"Left":"Right"]}),e.jsxs(y,{variant:"body2",color:"text.secondary",children:["Current Level: ",o.currentLevel," dB HL"]})]})]})}),ls=({currentGuidance:o,suggestedAction:t,showResponseIndicator:n,patientResponse:r,canStoreThreshold:s,onStoreThreshold:l,onSuggestedAction:d,startTone:a,stopTone:f})=>{const S=j=>{j==="present"?a&&f&&(a(),setTimeout(()=>{f()},1e3)):d()};return e.jsxs(H,{elevation:2,sx:{p:2,mb:2,position:"relative",overflow:"hidden",minHeight:"6rem",display:"flex",flexDirection:"column",justifyContent:"space-between"},children:[n&&r!==null&&e.jsx(m,{sx:{position:"absolute",top:0,right:0,p:1.5,zIndex:100,display:"flex",alignItems:"center",gap:1},children:e.jsx(O,{icon:r?e.jsx(me,{}):e.jsx(nt,{}),label:r?"Heard":"Not Heard",color:r?"success":"warning",variant:"filled",size:"small"})}),e.jsx(m,{sx:{mb:2},children:e.jsx(y,{variant:"body1",sx:{mb:1,fontWeight:"500"},children:o})}),e.jsxs(m,{sx:{display:"flex",gap:2,justifyContent:"flex-end"},children:[l&&e.jsx(I,{variant:"outlined",color:"primary",onClick:l,size:"small",children:"Store Threshold"}),t&&e.jsx(I,{variant:"contained",color:"primary",onClick:()=>S(t),size:"small",children:as(t)})]})]})};function as(o){switch(o){case"present":return"Present Tone";case"increase":return"Increase Level";case"decrease":return"Decrease Level";case"store_threshold":return"Store Threshold";case"next":return"Next Frequency";default:return"Continue"}}const cs=({currentStep:o,toneActive:t,onAdjustLevel:n})=>{const r=t;return e.jsxs(m,{sx:{display:"flex",flexDirection:"column",alignItems:"center",gap:2},children:[e.jsx(y,{variant:"body2",color:"text.secondary",sx:{alignSelf:"center"},children:"Current Level"}),e.jsx(O,{label:`${o.currentLevel} dB HL`,color:"primary",variant:"outlined",size:"medium",sx:{fontWeight:"bold",fontSize:"1.1rem",width:"100px",height:"36px"}}),e.jsxs(m,{sx:{display:"flex",alignItems:"center",gap:1},children:[e.jsx(se,{title:"Decrease Level (5dB)",children:e.jsx("span",{children:e.jsx(re,{color:"primary",disabled:r,onClick:()=>n(-5),sx:{border:"1px solid",borderColor:"divider"},size:"large",children:e.jsx(ye,{})})})}),e.jsx(se,{title:"Increase Level (5dB)",children:e.jsx("span",{children:e.jsx(re,{color:"primary",disabled:r,onClick:()=>n(5),sx:{border:"1px solid",borderColor:"divider"},size:"large",children:e.jsx(be,{})})})})]}),e.jsxs(m,{sx:{display:"flex",alignItems:"center",gap:1,mt:1},children:[e.jsx(se,{title:"Decrease Level (10dB)",children:e.jsx("span",{children:e.jsx(re,{color:"primary",disabled:r,onClick:()=>n(-10),sx:{border:"1px solid",borderColor:"divider"},size:"small",children:e.jsx(ye,{fontSize:"small"})})})}),e.jsx(se,{title:"Increase Level (10dB)",children:e.jsx("span",{children:e.jsx(re,{color:"primary",disabled:r,onClick:()=>n(10),sx:{border:"1px solid",borderColor:"divider"},size:"small",children:e.jsx(be,{fontSize:"small"})})})})]})]})},ds=({currentStep:o,toneActive:t,onAdjustFrequency:n})=>{const r=t;return e.jsxs(m,{sx:{display:"flex",flexDirection:"column",alignItems:"center",gap:2},children:[e.jsx(y,{variant:"body2",color:"text.secondary",sx:{alignSelf:"center"},children:"Current Frequency"}),e.jsx(O,{label:`${o.frequency} Hz`,color:"primary",variant:"outlined",size:"medium",sx:{fontWeight:"bold",fontSize:"1.1rem",width:"120px",height:"36px"}}),e.jsxs(m,{sx:{display:"flex",alignItems:"center",gap:1},children:[e.jsx(se,{title:"Previous Frequency",children:e.jsx("span",{children:e.jsx(re,{color:"primary",disabled:r,onClick:()=>n(-1),sx:{border:"1px solid",borderColor:"divider"},size:"large",children:e.jsx(rt,{})})})}),e.jsx(se,{title:"Next Frequency",children:e.jsx("span",{children:e.jsx(re,{color:"primary",disabled:r,onClick:()=>n(1),sx:{border:"1px solid",borderColor:"divider"},size:"large",children:e.jsx(ot,{})})})})]}),e.jsx(y,{variant:"body2",color:"text.secondary",sx:{mt:1},children:o.ear==="left"?"Left Ear":"Right Ear"})]})},hs=({currentStep:o,toneActive:t,onAdjustLevel:n,onAdjustFrequency:r,startTone:s,stopTone:l,canStoreThreshold:d,onStoreThreshold:a})=>{w.useEffect(()=>{const j=()=>{t&&l()};return document.addEventListener("mouseup",j),document.addEventListener("touchend",j),()=>{document.removeEventListener("mouseup",j),document.removeEventListener("touchend",j),t&&l()}},[t,l]);const f=j=>{j.preventDefault(),s()},S=j=>{j.preventDefault(),s()};return e.jsx(m,{sx:{width:"100%"},children:e.jsxs(E,{container:!0,spacing:2,children:[e.jsx(E,{item:!0,xs:12,children:e.jsx(H,{elevation:2,sx:{p:2,mb:2},children:e.jsxs(m,{sx:{display:"flex",flexDirection:{xs:"column",sm:"row"},justifyContent:"space-between",alignItems:"center",gap:2},children:[e.jsx(m,{sx:{display:"flex",justifyContent:"center",flex:1},children:e.jsx(se,{title:t?"Release to stop tone":"Press and hold to present tone",children:e.jsx(I,{variant:t?"outlined":"contained",color:"primary",startIcon:t?e.jsx(it,{}):e.jsx(je,{}),onMouseDown:f,onTouchStart:S,size:"large",sx:{px:3,py:1.5,width:"100%",maxWidth:"200px",borderRadius:"28px"},children:t?"Stop Tone":"Present Tone"})})}),e.jsx(m,{sx:{display:"flex",justifyContent:"center",flex:1},children:e.jsx(se,{title:t?"Stop the tone before storing threshold":"Store the current level as the threshold for this frequency",children:e.jsxs("span",{children:[" ",e.jsx(I,{variant:"contained",color:"success",startIcon:e.jsx(De,{}),onClick:a,disabled:t,sx:{py:1.5,width:"100%",maxWidth:"200px",fontWeight:"medium"},children:"Store Threshold"})]})})})]})})}),e.jsx(E,{item:!0,xs:12,sm:6,children:e.jsxs(H,{elevation:2,sx:{p:2,height:"100%"},children:[e.jsx(y,{variant:"subtitle1",gutterBottom:!0,fontWeight:"medium",children:"Level Control"}),e.jsx(cs,{currentStep:o,toneActive:t,onAdjustLevel:n})]})}),e.jsx(E,{item:!0,xs:12,sm:6,children:e.jsxs(H,{elevation:2,sx:{p:2,height:"100%"},children:[e.jsx(y,{variant:"subtitle1",gutterBottom:!0,fontWeight:"medium",children:"Frequency Control"}),e.jsx(ds,{currentStep:o,toneActive:t,onAdjustFrequency:r})]})})]})})},us=({thresholds:o,currentStep:t,toneActive:n,onAudiogramClick:r})=>{console.log("AudiogramContainer received thresholds:",o);const s=[125,250,500,750,1e3,1500,2e3,3e3,4e3,6e3,8e3],l=[-10,-5,0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85,90,95,100,105,110],d=[-10,0,10,20,30,40,50,60,70,80,90,100,110],a=[-10,0,10,20,30,40,50,60,70,80,90,100,110],f=i=>a.includes(i),S=[125,250,500,1e3,2e3,4e3,8e3],j=i=>S.includes(i),C=(i,u)=>{const g=s.indexOf(i),x=l.indexOf(u);if(g===-1||x===-1)return null;const p=g/(s.length-1)*100,h=x/(l.length-1)*100;return{x:p,y:h}},T=o.filter(i=>i.ear==="left"),L=o.filter(i=>i.ear==="right");console.log("Left ear thresholds to display:",T),console.log("Right ear thresholds to display:",L);const b=i=>{if(!r)return;const u=i.currentTarget.getBoundingClientRect(),g=i.clientX-u.left,x=i.clientY-u.top,p=Math.round(g/u.width*(s.length-1)),h=Math.round(x/u.height*(l.length-1)),k=s[Math.max(0,Math.min(p,s.length-1))],B=l[Math.max(0,Math.min(h,l.length-1))];r(k,t.ear,B)},c=i=>i>=1e3?`${i/1e3}k`:i.toString();return e.jsxs(H,{elevation:3,sx:{p:2,mb:3,position:"relative",overflow:"hidden",maxWidth:"85%",margin:"0 auto",paddingLeft:"60px"},children:[e.jsxs(y,{variant:"h6",sx:{mb:2,display:"flex",justifyContent:"space-between"},children:[e.jsx("span",{children:"Audiogram"}),e.jsxs(y,{variant:"body2",color:"text.secondary",children:["Testing: ",t.frequency," Hz, ",t.ear==="left"?"Left":"Right"," ear",t.testType==="air"?" (Air Conduction)":" (Bone Conduction)"]})]}),e.jsxs(m,{sx:{position:"relative",height:"260px",border:"1px solid",borderColor:"divider",cursor:r?"pointer":"default",backgroundColor:"rgba(250, 250, 250, 0.5)"},onClick:b,children:[s.map((i,u)=>{const g=u/(s.length-1)*100;return e.jsx(m,{sx:{position:"absolute",left:`${g}%`,top:0,height:"100%",width:"1px",...j(i)?{borderLeft:"1px solid rgba(0, 0, 0, 0.3)",backgroundColor:"rgba(0, 0, 0, 0.08)"}:{borderLeft:"1px dashed rgba(0, 0, 0, 0.2)",backgroundColor:"transparent"},...t.frequency===i?{backgroundColor:"rgba(25, 118, 210, 0.1)",borderLeft:"1px solid rgba(25, 118, 210, 0.5)"}:{},zIndex:1}},`line-${i}`)}),d.map((i,u)=>{const g=l.indexOf(i)/(l.length-1)*100;return e.jsx(m,{sx:{position:"absolute",left:0,top:`${g}%`,width:"100%",height:"1px",backgroundColor:"rgba(0, 0, 0, 0.05)",borderTop:i%20===0?"1px solid rgba(0, 0, 0, 0.2)":"1px solid rgba(0, 0, 0, 0.1)",...t.currentLevel===i?{backgroundColor:"rgba(25, 118, 210, 0.1)",borderTop:"1px solid rgba(25, 118, 210, 0.5)"}:{},zIndex:1}},`hline-${i}`)}),e.jsxs(m,{sx:{position:"absolute",bottom:"-30px",left:0,right:0,display:"flex",flexDirection:"column"},children:[e.jsx(m,{sx:{display:"flex",justifyContent:"space-between",px:"5px",pt:"5px"},children:s.map(i=>e.jsx(y,{variant:"caption",sx:{transform:"translateX(-50%)",fontWeight:t.frequency===i?"bold":"normal",color:t.frequency===i?"primary.main":"text.secondary",fontSize:"0.7rem"},children:c(i)},i))}),e.jsx(y,{variant:"caption",sx:{textAlign:"center",mt:1,fontWeight:"medium",fontSize:"0.75rem"},children:"Frequency (Hz)"})]}),e.jsxs(m,{sx:{position:"absolute",top:0,left:"-50px",bottom:0,height:"100%",width:"50px",display:"flex",flexDirection:"column",justifyContent:"space-between",py:"5px"},children:[e.jsx(y,{variant:"caption",sx:{position:"absolute",left:"-30px",top:"50%",transform:"rotate(-90deg) translateX(50%)",transformOrigin:"left center",fontWeight:"bold",whiteSpace:"nowrap"},children:"Hearing Level (dB HL)"}),l.map(i=>{const u=l.indexOf(i)/(l.length-1)*100;return f(i)?e.jsx(y,{variant:"caption",sx:{position:"absolute",left:0,top:`${u}%`,transform:"translateY(-50%)",fontWeight:t.currentLevel===i?"bold":"normal",color:t.currentLevel===i?"primary.main":"text.secondary",width:"45px",textAlign:"right",fontSize:"0.75rem",paddingRight:"5px"},children:i},i):null})]}),(()=>{const i=C(t.frequency,t.currentLevel);return i?e.jsx(m,{sx:{position:"absolute",left:`${i.x}%`,top:`${i.y}%`,width:"12px",height:"12px",borderRadius:"50%",backgroundColor:n?"primary.main":"rgba(25, 118, 210, 0.5)",transform:"translate(-50%, -50%)",boxShadow:"0 0 0 2px white",transition:"background-color 0.3s",animation:n?"pulse 1.5s infinite":"none","@keyframes pulse":{"0%":{boxShadow:"0 0 0 0 rgba(25, 118, 210, 0.7)"},"70%":{boxShadow:"0 0 0 10px rgba(25, 118, 210, 0)"},"100%":{boxShadow:"0 0 0 0 rgba(25, 118, 210, 0)"}}}}):null})(),T.map(i=>{const u=C(i.frequency,i.level);if(!u)return null;const g=L.some(h=>h.frequency===i.frequency&&h.level===i.level),x=g?-1.5:0,p=g?-1.5:0;return i.testType==="air"?e.jsx(m,{sx:{position:"absolute",left:`calc(${u.x}% + ${x}px)`,top:`calc(${u.y}% + ${p}px)`,width:"16px",height:"16px",transform:"translate(-50%, -50%)",zIndex:4,"&:before":{content:'""',position:"absolute",width:"10px",height:"10px",backgroundColor:"rgba(255, 255, 255, 0.75)",borderRadius:"2px",left:"3px",top:"3px",zIndex:-1},"&:after":{content:'""',position:"absolute",backgroundColor:"#2196f3",display:"block",width:"16px",height:"3px",top:"6.5px",left:"0px",borderRadius:"1px",transform:"rotate(45deg)",boxShadow:"0 0 1px rgba(0,0,0,0.5)"}},children:e.jsx(m,{sx:{position:"absolute",backgroundColor:"#2196f3",width:"16px",height:"3px",top:"6.5px",left:"0px",borderRadius:"1px",transform:"rotate(-45deg)",boxShadow:"0 0 1px rgba(0,0,0,0.5)"}})},`left-air-${i.frequency}`):e.jsx(m,{sx:{position:"absolute",left:`calc(${u.x}% + ${x}px)`,top:`calc(${u.y}% + ${p}px)`,width:"14px",height:"14px",transform:"translate(-50%, -50%)",zIndex:4,"&:before":{content:'">"',position:"absolute",color:"#2196f3",fontSize:"16px",fontWeight:"bold",lineHeight:"14px",top:"0px",left:"0px",textShadow:"0 0 3px rgba(255,255,255,0.9)"}}},`left-bone-${i.frequency}`)}),L.map(i=>{const u=C(i.frequency,i.level);if(!u)return null;const g=T.some(h=>h.frequency===i.frequency&&h.level===i.level),x=g?1.5:0,p=g?1.5:0;return i.testType==="air"?e.jsx(m,{sx:{position:"absolute",left:`calc(${u.x}% + ${x}px)`,top:`calc(${u.y}% + ${p}px)`,width:"14px",height:"14px",borderRadius:"50%",border:"3px solid #f44336",backgroundColor:"rgba(255, 255, 255, 0.85)",transform:"translate(-50%, -50%)",zIndex:3,boxShadow:"0 0 2px rgba(0,0,0,0.3)"}},`right-air-${i.frequency}`):e.jsx(m,{sx:{position:"absolute",left:`calc(${u.x}% + ${x}px)`,top:`calc(${u.y}% + ${p}px)`,width:"14px",height:"14px",transform:"translate(-50%, -50%)",zIndex:3,"&:before":{content:'"<"',position:"absolute",color:"#f44336",fontSize:"16px",fontWeight:"bold",lineHeight:"14px",top:"0px",left:"0px",textShadow:"0 0 3px rgba(255,255,255,0.9)"}}},`right-bone-${i.frequency}`)})]}),e.jsxs(m,{sx:{display:"flex",flexWrap:"wrap",justifyContent:"center",gap:3,mt:3},children:[e.jsxs(m,{sx:{display:"flex",alignItems:"center",gap:1},children:[e.jsx(m,{sx:{width:"10px",height:"10px",position:"relative","&:before, &:after":{content:'""',position:"absolute",backgroundColor:"#2196f3",width:"10px",height:"2px"},"&:before":{transform:"rotate(45deg)"},"&:after":{transform:"rotate(-45deg)"}}}),e.jsx(y,{variant:"caption",children:"Left Ear (Air)"})]}),e.jsxs(m,{sx:{display:"flex",alignItems:"center",gap:1},children:[e.jsx(m,{sx:{width:"10px",height:"10px",borderRadius:"50%",border:"2px solid #f44336",backgroundColor:"white"}}),e.jsx(y,{variant:"caption",children:"Right Ear (Air)"})]}),e.jsxs(m,{sx:{display:"flex",alignItems:"center",gap:1},children:[e.jsx(y,{variant:"h6",sx:{color:"#2196f3",fontWeight:"bold",lineHeight:1,fontSize:"18px"},children:">"}),e.jsx(y,{variant:"caption",children:"Left Ear (Bone)"})]}),e.jsxs(m,{sx:{display:"flex",alignItems:"center",gap:1},children:[e.jsx(y,{variant:"h6",sx:{color:"#f44336",fontWeight:"bold",lineHeight:1,fontSize:"18px"},children:"<"}),e.jsx(y,{variant:"caption",children:"Right Ear (Bone)"})]}),e.jsxs(m,{sx:{display:"flex",alignItems:"center",gap:1},children:[e.jsx(m,{sx:{width:"14px",height:"2px",backgroundColor:"rgba(0, 0, 0, 0.3)"}}),e.jsx(y,{variant:"caption",children:"Octave"})]}),e.jsxs(m,{sx:{display:"flex",alignItems:"center",gap:1},children:[e.jsx(m,{sx:{width:"14px",height:"0px",borderTop:"2px dashed rgba(0, 0, 0, 0.2)"}}),e.jsx(y,{variant:"caption",children:"Inter-octave"})]})]})]})},ps=Ae`
  0% { opacity: 1; transform: scale(1); }
  50% { opacity: 0.8; transform: scale(1.05); }
  100% { opacity: 1; transform: scale(1); }
`,gs=Ae`
  0% { box-shadow: 0 0 0 0 rgba(25, 118, 210, 0.4); }
  70% { box-shadow: 0 0 0 10px rgba(25, 118, 210, 0); }
  100% { box-shadow: 0 0 0 0 rgba(25, 118, 210, 0); }
`;le(O)(({theme:o})=>({margin:o.spacing(1),fontWeight:"bold",padding:o.spacing(2,1),height:"auto","& .MuiChip-label":{padding:o.spacing(.5,1)},"& .MuiChip-icon":{fontSize:"1.2rem"}}));le(m)(({theme:o})=>({padding:o.spacing(1),borderRadius:o.shape.borderRadius,backgroundColor:o.palette.grey[100],display:"flex",alignItems:"center"}));const fs=le(G)(({theme:o})=>({marginBottom:o.spacing(2),fontWeight:"bold",animation:`${ps} 1.5s infinite ease-in-out`,boxShadow:"0 4px 10px rgba(76, 175, 80, 0.3)",border:"1px solid #4caf50"})),xs=le(O)(({theme:o})=>({fontWeight:"bold",fontSize:"0.85rem",padding:o.spacing(.5,1),marginBottom:o.spacing(1)})),ms=le(I)(({theme:o})=>({marginTop:o.spacing(1),textTransform:"none",fontWeight:"500"})),ys=({guidance:o,action:t,phase:n,onStoreThreshold:r,canStoreThreshold:s,patientResponded:l=!1,onImplementSuggestion:d,showResponseAlert:a=!1})=>{const[f,S]=w.useState(!1),[j,C]=w.useState(!1),T=ie();w.useEffect(()=>{if(console.log("GuidancePanel received patientResponded:",l),l){console.log("Setting responseDetected to true"),S(!0);const p=setTimeout(()=>{S(!1)},8e3);return()=>{console.log("Cleaning up timer"),clearTimeout(p)}}},[l]);const b={increase:{label:"Increase Level (+5 dB)",icon:e.jsx(be,{}),color:"primary",description:"Increase the hearing level by 5 dB. This smaller step size is used during the ascending phase and after no-response during bracketing to precisely identify the threshold."},decrease:{label:"Decrease Level (-10 dB)",icon:e.jsx(ye,{}),color:"secondary",description:"Decrease the hearing level by 10 dB. After ANY positive response, the Hughson-Westlake protocol requires an immediate 10 dB decrease to prevent adaptation and maintain stimulus uncertainty."},present:{label:"Present Tone",icon:e.jsx(je,{}),color:"info",description:"Present a 1-2 second tone burst to check if the patient can hear it at the current level. Short tone bursts enhance detectability compared to continuous tones."},store_threshold:{label:"Store Threshold",icon:e.jsx(me,{}),color:"success",description:"The threshold has been determined (≥2 responses out of 3 presentations at the same level). This is the lowest intensity that achieves a 50% or greater response rate during ascending trials."},next:{label:"Next Frequency",icon:e.jsx(ft,{}),color:"warning",description:"Move to the next test frequency. The standard sequence (1→2→4→8 kHz then 0.25→0.5 kHz) minimizes cross-frequency masking effects."}}[t]||{label:"Continue Testing",icon:e.jsx(gt,{}),description:"Continue with the testing procedure following the Hughson-Westlake protocol."},c={initial:{name:"Initial Presentation",description:"Start with a comfortable level that the patient is likely to hear (30-40 dB HL).",tips:["Begin at a level 30-40 dB above estimated threshold (typically 1 kHz initially)","Present a clearly audible tone for 1-2 seconds to establish baseline","Short tone bursts are more detectable than continuous tones","If no response, increase in 10-15 dB steps until response is obtained"]},descending:{name:"Initial Descent",description:"Decrease intensity in 10 dB steps until the patient no longer responds.",tips:["After each response, immediately decrease by 10 dB steps","Continue the descent until the patient fails to respond","The descending phase identifies the sub-threshold boundary","This large step size (10 dB) efficiently approaches the threshold region","Responses during this phase do not count towards threshold determination"]},ascending:{name:"Initial Ascent",description:"From the last non-responsive level, increase intensity in 5 dB steps until the patient responds again.",tips:["After no response, increase by 5 dB steps","Smaller step size (5 dB) provides more precise threshold determination","Continue until the patient responds again","This first ascending response only identifies the threshold region and does not count towards threshold determination"]},threshold:{name:"Bracketing Phase",description:"Use the 10 dB down / 5 dB up bracketing technique to determine threshold.",tips:["After each response: immediately reduce level by 10 dB","After no response: increase by 5 dB steps","Threshold is defined as the lowest level with ≥50% response rate","Required: 2/3 responses at the same level for automated testing","Must not stagnate at a single level; each response triggers a mandatory 10 dB descent","Continue the oscillatory pattern until meeting threshold criteria"]},complete:{name:"Threshold Complete",description:"The threshold has been established. Record this value and proceed to the next frequency.",tips:["Store the current level as the threshold for this frequency","The threshold is defined as the lowest level at which at least 2 out of 3 responses are obtained","Verify the threshold with a non-response at 5 dB below the threshold level","Move to the next test frequency and repeat the procedure","Standard sequence is 1→2→4→8 kHz then 0.25→0.5 kHz to minimize cross-frequency masking"]}},i=c[n]||c.initial,u=a||l,g=u||f,x=()=>{d&&d()};return e.jsxs(H,{elevation:3,sx:{p:3,mb:2,backgroundColor:g?T.palette.mode==="dark"?te(T.palette.success.dark,.1):"#f5fff5":T.palette.mode==="dark"?T.palette.background.paper:"#f8f9fa",borderLeft:g?"4px solid #4caf50":"4px solid #3f51b5",position:"relative",transition:"all 0.3s ease"},children:[u&&e.jsx(fs,{icon:e.jsx(lt,{sx:{fontSize:24}}),severity:"success",children:"Patient has responded to the tone! Follow the suggested action below."}),e.jsxs(m,{sx:{display:"flex",alignItems:"center",mb:2},children:[e.jsx(at,{color:"primary",sx:{mr:2,fontSize:28}}),e.jsx(y,{variant:"h6",fontWeight:"bold",children:"Hughson-Westlake Training Guide"})]}),e.jsxs(m,{sx:{mb:3},children:[e.jsx(xs,{label:i.name,size:"medium",color:n==="complete"?"success":"primary",sx:{fontWeight:"bold",px:1}}),e.jsx(y,{variant:"body1",sx:{fontWeight:500,mb:1},children:i.description}),e.jsx(ms,{startIcon:j?e.jsx(Ee,{}):e.jsx(He,{}),onClick:()=>C(!j),color:"primary",variant:"text",size:"small",children:j?"Hide Details":"Show Procedure Details"}),e.jsx(We,{in:j,children:e.jsxs(m,{sx:{mt:1,p:2,backgroundColor:T.palette.mode==="dark"?te(T.palette.background.paper,.6):"#f5f5f5",borderRadius:1,border:`1px solid ${T.palette.divider}`},children:[e.jsxs(y,{variant:"subtitle2",fontWeight:"bold",gutterBottom:!0,children:[i.name," - Procedure Tips:"]}),e.jsx(ct,{dense:!0,children:i.tips.map((p,h)=>e.jsxs(dt,{sx:{py:.5},children:[e.jsx(ht,{sx:{minWidth:28},children:e.jsx(ut,{color:"primary",fontSize:"small"})}),e.jsx(pt,{primary:p})]},h))})]})})]}),e.jsx(ae,{sx:{my:2}}),e.jsxs(m,{sx:{mb:3},children:[e.jsx(y,{variant:"subtitle1",fontWeight:"bold",gutterBottom:!0,children:"Current Guidance:"}),e.jsx(y,{variant:"body1",sx:{p:2,backgroundColor:g?T.palette.mode==="dark"?te(T.palette.success.dark,.2):"#e8f5e9":T.palette.mode==="dark"?te(T.palette.primary.dark,.1):"#e3f2fd",borderRadius:2,fontWeight:500,border:g?`1px solid ${T.palette.success.main}`:`1px solid ${T.palette.mode==="dark"?T.palette.primary.dark:"#bbdefb"}`,transition:"all 0.3s ease",boxShadow:"0 1px 3px rgba(0,0,0,0.12)"},children:o})]}),e.jsxs(m,{sx:{mt:3},children:[e.jsx(y,{variant:"subtitle1",fontWeight:"bold",gutterBottom:!0,children:"Suggested Action:"}),e.jsxs(m,{sx:{display:"flex",flexDirection:"column",alignItems:"flex-start",mt:1,p:2,borderRadius:2,backgroundColor:T.palette.mode==="dark"?te(T.palette.background.paper,.6):"#f8f9fa",border:`1px solid ${T.palette.divider}`,boxShadow:"0 1px 3px rgba(0,0,0,0.08)",animation:t==="store_threshold"||t==="present"?`${gs} 2s infinite`:"none"},children:[e.jsxs(m,{sx:{display:"flex",flexDirection:"column",width:"100%",mb:2},children:[e.jsx(y,{variant:"body1",fontWeight:"medium",gutterBottom:!0,children:b.label}),e.jsx(y,{variant:"body2",color:"text.secondary",children:b.description})]}),t!=="present"&&d&&e.jsx(I,{variant:"contained",color:"primary",onClick:x,startIcon:b.icon,sx:{mt:1,alignSelf:"flex-end"},children:"Implement This Suggestion"})]}),t==="store_threshold"&&r&&e.jsx(I,{variant:"contained",color:"success",startIcon:e.jsx(me,{}),onClick:r,sx:{mt:2,px:3,py:1.5,boxShadow:"0 4px 10px rgba(76, 175, 80, 0.3)",fontWeight:"bold"},fullWidth:!0,children:"Store This Threshold & Continue"})]})]})},bs=({patient:o,onComplete:t,onCancel:n})=>{const{session:r,currentStep:s,testProgress:l,toneActive:d,patientResponse:a,showResponseIndicator:f,patientJustResponded:S,errorMessage:j,procedurePhase:C,currentGuidance:T,suggestedAction:L,canStoreThreshold:b,thresholds:c,startTone:i,stopTone:u,handleAdjustLevel:g,handleAdjustFrequency:x,handleStoreThreshold:p,handleSuggestedAction:h,handleAudiogramClick:k,updateSession:B}=os(o,t),[z,F]=w.useState(!1),[Y,M]=w.useState(!1),[V,U]=w.useState(null),A=ie(),Q=(v,$,D)=>{k(v,D)},J=()=>{F(!z)};console.log("Original thresholds from useAudioTest:",c);const K=c.map(v=>(console.log("Converting threshold point:",v),{frequency:v.frequency,ear:v.ear,level:v.hearingLevel,testType:v.testType}));console.log("Converted thresholds for AudiogramContainer:",K);const Z=()=>{if(r){const v=R.calculateProgress();if(console.log("Current test progress before completion:",v),b&&p(),v<100&&!window.confirm("Some frequencies have not been tested. Would you like to complete the test with the current results? Missing frequencies will be marked as 'not tested'."))return;const $=R.completeSession();if($){if(console.log("Session completed manually with results:",$.results),$.results){const D={...$,completed:!0,results:$.results};B(D)}M(!0)}else U("Failed to complete the test. Please try again.")}else U("Cannot complete the test: No active session found.")};if(!r||!s)return e.jsxs(m,{sx:{p:3,textAlign:"center"},children:[e.jsx(y,{variant:"h6",children:"Initializing test session..."}),e.jsx(ze,{sx:{mt:2}}),j&&e.jsx(G,{severity:"error",sx:{mt:2},children:j})]});const ne=l===100;return e.jsxs(m,{sx:{padding:{xs:.5,sm:1,md:2},maxWidth:"100%",overflowX:"hidden"},children:[e.jsxs(E,{container:!0,spacing:{xs:1,sm:1.5,md:2},children:[e.jsx(E,{item:!0,xs:12,children:e.jsx(is,{currentStep:s,testProgress:l,thresholdCount:c.length})}),e.jsx(E,{item:!0,xs:12,children:e.jsx(m,{sx:{height:"calc(100% + 4%)",width:"100%"},children:e.jsx(us,{thresholds:K,currentStep:s,toneActive:d,onAudiogramClick:Q})})}),!ne&&e.jsx(E,{item:!0,xs:12,children:e.jsxs(H,{elevation:3,sx:{p:{xs:1,sm:2},mb:1.5},children:[e.jsxs(m,{sx:{mb:1.5},children:[e.jsxs(m,{sx:{display:"flex",justifyContent:"space-between",alignItems:"center",mb:.5},children:[e.jsxs(y,{variant:"h6",component:"div",sx:{display:"flex",alignItems:"center",fontSize:{xs:"1rem",sm:"1.25rem"}},children:[e.jsx(xt,{sx:{mr:1,fontSize:{xs:"1.1rem",sm:"1.3rem"}}})," Current Guidance"]}),e.jsx(I,{size:"small",endIcon:z?e.jsx(Ee,{}):e.jsx(He,{}),onClick:J,children:z?"Hide Details":"Show Details"})]}),e.jsx(ls,{currentGuidance:T,suggestedAction:L,showResponseIndicator:f,patientResponse:a,canStoreThreshold:b,onStoreThreshold:p,onSuggestedAction:h,startTone:i,stopTone:u}),e.jsx(We,{in:z,children:e.jsx(m,{sx:{mt:1.5,p:1.5,bgcolor:te(A.palette.primary.light,.1),borderRadius:1},children:e.jsx(ys,{guidance:T,action:L,phase:C,onStoreThreshold:p,canStoreThreshold:b,patientResponded:S,onImplementSuggestion:h,showResponseAlert:f&&!!a})})})]}),e.jsxs(m,{sx:{p:{xs:.5,sm:1}},children:[e.jsxs(y,{variant:"subtitle1",sx:{mb:1,display:"flex",alignItems:"center",fontSize:{xs:"0.9rem",sm:"1rem"}},children:[e.jsx(je,{sx:{mr:1,fontSize:"1.2rem"}})," Test Controls"]}),e.jsx(hs,{currentStep:s,toneActive:d,onAdjustLevel:g,onAdjustFrequency:x,startTone:i,stopTone:u,canStoreThreshold:b,onStoreThreshold:p})]})]})}),ne&&e.jsx(E,{item:!0,xs:12,children:e.jsxs(H,{elevation:3,sx:{p:{xs:2,sm:3},mb:2,display:"flex",flexDirection:"column",alignItems:"center",backgroundColor:A.palette.success.light,color:A.palette.success.contrastText},children:[e.jsx(y,{variant:"h5",gutterBottom:!0,children:"Audiogram Test Complete!"}),e.jsx(y,{variant:"body1",sx:{mb:3,textAlign:"center"},children:"You have successfully completed the hearing test. Review the audiogram to see the patient's thresholds."}),e.jsx(I,{variant:"contained",color:"primary",startIcon:e.jsx(mt,{}),onClick:()=>{if(r&&!r.completed){const v=R.completeSession();v&&v.results&&Object.assign(r,{completed:!0,results:v.results})}M(!0)},sx:{mb:1},children:"View Detailed Results"}),e.jsx(I,{variant:"outlined",onClick:()=>t(r),children:"Return to Dashboard"})]})}),e.jsx(E,{item:!0,xs:12,sx:{display:"flex",justifyContent:"center",mt:{xs:1.5,sm:2},mb:{xs:1,sm:1.5}},children:e.jsx(I,{variant:"contained",color:"primary",size:"large",startIcon:e.jsx(yt,{}),onClick:Z,sx:{mx:"auto",minWidth:{xs:"180px",sm:"200px"},backgroundColor:A.palette.success.main,"&:hover":{backgroundColor:A.palette.success.dark}},children:"Complete Audiogram Test"})}),e.jsx(E,{item:!0,xs:12,sx:{display:"flex",justifyContent:"center",mt:.5},children:e.jsx(se,{title:"Go back",children:e.jsx(re,{onClick:n,color:"primary",sx:{backgroundColor:A.palette.mode==="dark"?te(A.palette.action.active,.1):"rgba(0, 0, 0, 0.05)","&:hover":{backgroundColor:A.palette.mode==="dark"?te(A.palette.action.active,.2):"rgba(0, 0, 0, 0.1)"}},children:e.jsx(bt,{sx:{transform:"rotate(180deg)"}})})})})]}),e.jsxs(Fe,{open:Y,onClose:()=>M(!1),maxWidth:"md",fullWidth:!0,children:[e.jsx(Me,{children:"Patient Audiogram Results"}),e.jsx(Ne,{children:e.jsxs(m,{sx:{p:2},children:[e.jsx(y,{variant:"h6",gutterBottom:!0,children:"Patient Information"}),e.jsxs(E,{container:!0,spacing:2,sx:{mb:3},children:[e.jsxs(E,{item:!0,xs:12,sm:6,children:[e.jsxs(y,{variant:"body2",children:[e.jsx("strong",{children:"Patient ID:"})," ",o.id]}),e.jsxs(y,{variant:"body2",children:[e.jsx("strong",{children:"Name:"})," ",o.name]})]}),e.jsxs(E,{item:!0,xs:12,sm:6,children:[e.jsxs(y,{variant:"body2",children:[e.jsx("strong",{children:"Hearing Loss Type:"})," ",o.hearingLossType.replace("_"," ")]}),e.jsxs(y,{variant:"body2",children:[e.jsx("strong",{children:"Test Date:"})," ",new Date().toLocaleDateString()]})]})]}),e.jsx(y,{variant:"h6",gutterBottom:!0,children:"Your Test Results vs. Actual Thresholds"}),e.jsxs(H,{elevation:1,sx:{p:2,mb:3,bgcolor:"background.paper"},children:[e.jsx(y,{variant:"body2",paragraph:!0,children:"Below is a comparison between the thresholds you measured and the patient's actual thresholds. This feedback helps you improve your audiometric testing skills."}),r?.completed&&r?.results&&e.jsxs(e.Fragment,{children:[e.jsxs(G,{severity:r.results.completionStatus.completionPercentage<100?"warning":"info",sx:{mb:2},children:[e.jsxs(y,{variant:"subtitle2",children:["Test Completion Status: ",r.results.completionStatus.completionPercentage,"%"]}),e.jsxs(y,{variant:"body2",children:[r.results.completionStatus.testedFrequencies," out of ",r.results.completionStatus.totalFrequencies," frequencies tested.",r.results.completionStatus.untestedFrequencies>0&&` ${r.results.completionStatus.untestedFrequencies} frequencies were not tested.`]})]}),e.jsxs(G,{severity:r.results.falsePositives>5?"warning":"info",sx:{mb:2},children:[e.jsxs(y,{variant:"subtitle2",children:["False Positives: ",r.results.falsePositives||0]}),e.jsxs(y,{variant:"body2",children:["False positives occur when a patient indicates hearing a tone when none was presented. A high number of false positives (",">","5) may indicate an unreliable test subject or a need for clearer instructions."]})]})]}),e.jsxs(E,{container:!0,spacing:2,children:[e.jsxs(E,{item:!0,xs:12,md:6,children:[e.jsxs(y,{variant:"subtitle2",gutterBottom:!0,children:["Left Ear Thresholds ",o.thresholds.some(v=>v.ear==="left"&&v.testType==="bone")?"(>)":"(O)"]}),e.jsxs(ce,{size:"small",children:[e.jsx(ve,{children:e.jsxs(_,{children:[e.jsx(q,{children:"Frequency (Hz)"}),e.jsx(q,{children:"Your Result (dB)"}),e.jsx(q,{children:"Status"}),e.jsx(q,{children:"Actual (dB)"}),e.jsx(q,{children:"Difference"})]})}),e.jsx(de,{children:c.filter(v=>v.ear==="left").map(v=>{const $=o.thresholds.find(ee=>ee.ear==="left"&&ee.frequency===v.frequency),D=$&&v.responseStatus==="threshold"?v.hearingLevel-$.hearingLevel:null;return e.jsxs(_,{children:[e.jsx(q,{children:v.frequency}),e.jsx(q,{children:v.hearingLevel}),e.jsx(q,{children:v.responseStatus==="threshold"?"Tested":v.responseStatus==="no_response"?"No Response":"Not Tested"}),e.jsx(q,{children:$?$.hearingLevel:"N/A"}),e.jsx(q,{sx:{color:D?Math.abs(D)<=5?"success.main":Math.abs(D)<=10?"warning.main":"error.main":"text.secondary"},children:D!==null?D>0?`+${D}`:D:"N/A"})]},`left-${v.frequency}`)})})]})]}),e.jsxs(E,{item:!0,xs:12,md:6,children:[e.jsxs(y,{variant:"subtitle2",gutterBottom:!0,children:["Right Ear Thresholds ",o.thresholds.some(v=>v.ear==="right"&&v.testType==="bone")?"(<)":"(X)"]}),e.jsxs(ce,{size:"small",children:[e.jsx(ve,{children:e.jsxs(_,{children:[e.jsx(q,{children:"Frequency (Hz)"}),e.jsx(q,{children:"Your Result (dB)"}),e.jsx(q,{children:"Status"}),e.jsx(q,{children:"Actual (dB)"}),e.jsx(q,{children:"Difference"})]})}),e.jsx(de,{children:c.filter(v=>v.ear==="right").map(v=>{const $=o.thresholds.find(ee=>ee.ear==="right"&&ee.frequency===v.frequency),D=$&&v.responseStatus==="threshold"?v.hearingLevel-$.hearingLevel:null;return e.jsxs(_,{children:[e.jsx(q,{children:v.frequency}),e.jsx(q,{children:v.hearingLevel}),e.jsx(q,{children:v.responseStatus==="threshold"?"Tested":v.responseStatus==="no_response"?"No Response":"Not Tested"}),e.jsx(q,{children:$?$.hearingLevel:"N/A"}),e.jsx(q,{sx:{color:D?Math.abs(D)<=5?"success.main":Math.abs(D)<=10?"warning.main":"error.main":"text.secondary"},children:D!==null?D>0?`+${D}`:D:"N/A"})]},`right-${v.frequency}`)})})]})]})]})]})]})}),e.jsxs(Pe,{children:[e.jsx(I,{onClick:()=>M(!1),children:"Close"}),e.jsx(I,{variant:"contained",color:"primary",onClick:()=>{if(M(!1),r&&!r.completed){const v=R.completeSession();v?(console.log("Session completed with results:",v.results),t(v)):(console.warn("Failed to complete session, using current session instead"),t(r))}else t(r)},children:"Finish"})]})]}),j&&e.jsx(Le,{open:!!j,autoHideDuration:6e3,onClose:()=>{},children:e.jsx(G,{severity:"error",children:j})}),V&&e.jsx(Le,{open:!!V,autoHideDuration:6e3,onClose:()=>{},children:e.jsx(G,{severity:"error",children:V})})]})};Ht.register(Wt,At,Ft,Mt,Nt,Pt,Ot,Yt);const Ie=[125,250,500,750,1e3,1500,2e3,3e3,4e3,6e3,8e3],vs=[250,500,1e3,2e3,4e3,8e3],js=({thresholds:o,width:t=600,height:n=400,showLegend:r=!0,title:s="Audiogram",compareThresholds:l,currentFrequency:d,currentLevel:a,toneActive:f=!1,onPositionClick:S,interactive:j=!1})=>{const C=w.useRef(null),T=w.useRef(null),[L,b]=w.useState({width:0,height:0}),[c,i]=w.useState(!1);w.useEffect(()=>{if(!T.current)return;const p=()=>{const k=T.current;if(!k)return;const{width:B,height:z}=k.getBoundingClientRect();b({width:B,height:z})};p();const h=new ResizeObserver(p);return h.observe(T.current),()=>{T.current&&h.unobserve(T.current),h.disconnect()}},[]),w.useEffect(()=>()=>{C.current&&C.current.destroy()},[]),w.useEffect(()=>{let p=null;return f&&d&&a!==void 0?p=setInterval(()=>{i(h=>!h)},200):i(!1),()=>{p&&clearInterval(p)}},[f,d,a]);const u=()=>{const p=[];return p.push({label:"Right Ear (Air)",data:o.filter(h=>h.ear==="right"&&h.testType==="air").map(h=>({x:h.frequency,y:h.hearingLevel,responseStatus:h.responseStatus})),pointStyle:"circle",borderColor:"red",backgroundColor:"red",borderWidth:2,pointRadius:6,showLine:!0,tension:.1}),p.push({label:"Left Ear (Air)",data:o.filter(h=>h.ear==="left"&&h.testType==="air").map(h=>({x:h.frequency,y:h.hearingLevel,responseStatus:h.responseStatus})),pointStyle:"crossRot",borderColor:"blue",backgroundColor:"blue",borderWidth:2,pointRadius:6,showLine:!0,tension:.1}),p.push({label:"Right Ear (Bone)",data:o.filter(h=>h.ear==="right"&&h.testType==="bone").map(h=>({x:h.frequency,y:h.hearingLevel,responseStatus:h.responseStatus})),pointStyle:"triangle",borderColor:"red",backgroundColor:"rgba(255, 0, 0, 0.2)",borderWidth:2,pointRadius:6,showLine:!0,tension:.1}),p.push({label:"Left Ear (Bone)",data:o.filter(h=>h.ear==="left"&&h.testType==="bone").map(h=>({x:h.frequency,y:h.hearingLevel,responseStatus:h.responseStatus})),pointStyle:"triangle",borderColor:"blue",backgroundColor:"rgba(0, 0, 255, 0.2)",borderWidth:2,pointRadius:6,showLine:!0,tension:.1,rotation:180}),l&&(p.push({label:"Right Ear Air (Expected)",data:l.filter(h=>h.ear==="right"&&h.testType==="air").map(h=>({x:h.frequency,y:h.hearingLevel,responseStatus:h.responseStatus})),pointStyle:"circle",borderColor:"rgba(255, 0, 0, 0.5)",backgroundColor:"rgba(255, 0, 0, 0.5)",borderWidth:1,pointRadius:4,showLine:!0,tension:.1,borderDash:[5,5]}),p.push({label:"Left Ear Air (Expected)",data:l.filter(h=>h.ear==="left"&&h.testType==="air").map(h=>({x:h.frequency,y:h.hearingLevel,responseStatus:h.responseStatus})),pointStyle:"crossRot",borderColor:"rgba(0, 0, 255, 0.5)",backgroundColor:"rgba(0, 0, 255, 0.5)",borderWidth:1,pointRadius:4,showLine:!0,tension:.1,borderDash:[5,5]}),p.push({label:"Right Ear Bone (Expected)",data:l.filter(h=>h.ear==="right"&&h.testType==="bone").map(h=>({x:h.frequency,y:h.hearingLevel,responseStatus:h.responseStatus})),pointStyle:"triangle",borderColor:"rgba(255, 0, 0, 0.5)",backgroundColor:"rgba(255, 0, 0, 0.2)",borderWidth:1,pointRadius:4,showLine:!0,tension:.1,borderDash:[5,5]}),p.push({label:"Left Ear Bone (Expected)",data:l.filter(h=>h.ear==="left"&&h.testType==="bone").map(h=>({x:h.frequency,y:h.hearingLevel,responseStatus:h.responseStatus})),pointStyle:"triangle",borderColor:"rgba(0, 0, 255, 0.5)",backgroundColor:"rgba(0, 0, 255, 0.2)",borderWidth:1,pointRadius:4,showLine:!0,tension:.1,borderDash:[5,5],rotation:180})),d!==void 0&&a!==void 0&&(p.push({label:"Current Frequency",data:[{x:d,y:-10},{x:d,y:120}],backgroundColor:"rgba(255, 165, 0, 0.5)",borderColor:c?"rgba(255, 165, 0, 1)":"rgba(255, 165, 0, 0.7)",borderWidth:c?3:1,borderDash:[5,5],pointRadius:0,showLine:!0,tension:0}),p.push({label:"Current Level",data:[{x:125,y:a},{x:8e3,y:a}],backgroundColor:"rgba(255, 165, 0, 0.5)",borderColor:c?"rgba(255, 165, 0, 1)":"rgba(255, 165, 0, 0.7)",borderWidth:c?3:1,borderDash:[5,5],pointRadius:0,showLine:!0,tension:0}),p.push({label:"Current Position",data:[{x:d,y:a}],backgroundColor:c?"rgba(255, 165, 0, 1)":"rgba(255, 165, 0, 0.7)",borderColor:c?"rgb(255, 165, 0)":"rgba(255, 100, 0, 0.7)",pointStyle:"circle",pointRadius:c?9:7,borderWidth:2,showLine:!1})),{datasets:p}},g={responsive:!0,maintainAspectRatio:!1,scales:{x:{type:"logarithmic",position:"bottom",title:{display:!0,text:"Frequency (Hz)"},ticks:{callback:function(p,h){const k=Number(p);return vs.includes(k)?k.toString():""},autoSkip:!1,maxRotation:0},min:125,max:8e3,grid:{display:!0,color:p=>Ie.includes(p.tick.value)?"rgba(0, 0, 0, 0.1)":"rgba(0, 0, 0, 0)"}},y:{type:"linear",reverse:!0,title:{display:!0,text:"Hearing Level (dB HL)"},min:-10,max:120,ticks:{stepSize:10,padding:8,autoSkip:!1,callback:function(p,h){return Number(p)+" dB"}},grid:{color:p=>p.tick.value===0?"rgba(0, 0, 0, 0.5)":p.tick.value%10===0?"rgba(0, 0, 0, 0.2)":"rgba(0, 0, 0, 0.1)",drawTicks:!0,tickLength:10}}},plugins:{legend:{display:!1,position:"bottom"},title:{display:!!s,text:s},tooltip:{callbacks:{label:p=>{const h=p.raw;return`${p.dataset.label}: ${h.x} Hz, ${h.y} dB HL`}}}}},x=p=>{if(!j||!S||!C.current||f)return;const h=C.current,B=h.canvas.getBoundingClientRect(),z=p.clientX-B.left,F=p.clientY-B.top,Y=h.scales.x,M=h.scales.y;if(!Y||!M)return;const V=Y.getValueForPixel(z),U=M.getValueForPixel(F);if(V===void 0||U===void 0)return;const A=Ie.reduce((K,Z)=>Math.abs(Z-V)<Math.abs(K-V)?Z:K),Q=Math.round(U/5)*5,J=Math.max(-10,Math.min(120,Q));S(A,J)};return e.jsxs(m,{ref:T,sx:{width:t,height:n,position:"relative","& canvas":{width:"100% !important",height:"100% !important"}},children:[s&&e.jsx(y,{variant:"h6",align:"center",sx:{position:"absolute",top:0,left:0,right:0,py:1},children:s}),e.jsx(Et,{ref:C,data:u(),options:{...g,maintainAspectRatio:!1,responsive:!0},onClick:x})]})},xe=({children:o,value:t,index:n,...r})=>e.jsx("div",{role:"tabpanel",hidden:t!==n,id:`results-tabpanel-${n}`,"aria-labelledby":`results-tab-${n}`,...r,children:t===n&&e.jsx(m,{sx:{p:3},children:o})}),Ss=({session:o,onNewTest:t})=>{const[n,r]=w.useState(0),[s,l]=w.useState(!1);w.useRef(null),w.useRef(null);const d=ie(),a=o.results;if(!a)return e.jsxs(m,{sx:{p:3},children:[e.jsx(G,{severity:"error",sx:{mb:3},children:"Test results are missing or incomplete. Please try running the test again."}),e.jsx(I,{variant:"contained",onClick:t,children:"Return to Patient Selection"})]});const f=Se.getPatientById(o.patientId),S=()=>{if(!f)return{accuracy:0,exactMatch:0,within5dB:0,within10dB:0,missedThresholds:0};if(!a||!a.userThresholds)return console.error("Missing results or userThresholds:",a),{accuracy:0,exactMatch:0,within5dB:0,within10dB:0,missedThresholds:0};const c=a.userThresholds,i=f.thresholds;let u=0,g=0,x=0,p=0;c.forEach(B=>{const z=i.find(F=>F.frequency===B.frequency&&F.ear===B.ear&&F.testType===B.testType);if(z&&B.responseStatus==="threshold"&&z.responseStatus==="threshold"){const F=Math.abs(B.hearingLevel-z.hearingLevel);p++,F===0?(u++,g++,x++):F<=5?(g++,x++):F<=10&&x++}});const h=i.filter(B=>B.responseStatus==="threshold").length,k=c.filter(B=>B.responseStatus==="threshold").length;return{accuracy:p>0?Math.round(g/p*100):0,exactMatch:p>0?Math.round(u/p*100):0,within5dB:p>0?Math.round(g/p*100):0,within10dB:p>0?Math.round(x/p*100):0,missedThresholds:h-k}};let j;try{j=S()}catch(c){console.error("Error calculating metrics:",c),j={accuracy:0,exactMatch:0,within5dB:0,within10dB:0,missedThresholds:0}}const C=(c,i)=>{r(i)},T=async()=>{l(!0);try{const c=document.getElementById("test-results-container");if(!c){console.error("Results element not found"),l(!1);return}const i=await zt(c,{scale:2}),u=i.toDataURL("image/png"),g=new Dt({orientation:"portrait",unit:"mm",format:"a4"}),x=g.internal.pageSize.getWidth(),p=g.internal.pageSize.getHeight(),h=i.width,k=i.height,B=Math.min(x/h,p/k),z=(x-h*B)/2;g.addImage(u,"PNG",z,10,h*B,k*B),g.save(`audiometry_results_${new Date().toISOString().slice(0,10)}.pdf`)}catch(c){console.error("Error exporting to PDF:",c)}l(!1)},b=(c=>c>=90?{color:"success",label:"Excellent",icon:e.jsx(De,{})}:c>=75?{color:"info",label:"Good",icon:e.jsx(wt,{})}:c>=60?{color:"warning",label:"Fair",icon:e.jsx(Lt,{})}:{color:"error",label:"Needs Improvement",icon:e.jsx(Tt,{})})(j.accuracy);return e.jsx(H,{elevation:3,sx:{borderRadius:2,maxWidth:1200,mx:"auto"},id:"test-results-container",children:e.jsxs(m,{sx:{p:{xs:1,sm:2,md:3},mb:4},children:[e.jsx(y,{variant:"h4",gutterBottom:!0,children:"Test Results"}),e.jsxs(y,{variant:"subtitle1",color:"text.secondary",gutterBottom:!0,children:[f?.name," | ",new Date(a.timestamp).toLocaleString()]}),e.jsx(ae,{sx:{my:2}}),e.jsxs(m,{sx:{width:"100%"},children:[e.jsx(m,{sx:{borderBottom:1,borderColor:"divider"},children:e.jsxs(vt,{value:n,onChange:C,"aria-label":"results tabs",children:[e.jsx(pe,{label:"Overview",id:"results-tab-0","aria-controls":"results-tabpanel-0"}),e.jsx(pe,{label:"Audiogram",id:"results-tab-1","aria-controls":"results-tabpanel-1"}),e.jsx(pe,{label:"Technique Analysis",id:"results-tab-2","aria-controls":"results-tabpanel-2"})]})}),e.jsx(xe,{value:n,index:0,children:e.jsxs(m,{sx:{display:"flex",flexDirection:{xs:"column",md:"row"},gap:3},children:[e.jsxs(m,{sx:{flex:1},children:[e.jsxs(H,{elevation:2,sx:{p:2,mb:3,bgcolor:d.palette.mode==="dark"?d.palette.background.paper:"#f8f9fa"},children:[e.jsx(y,{variant:"h6",gutterBottom:!0,children:"Test Summary"}),e.jsxs(y,{variant:"body2",gutterBottom:!0,children:[e.jsx("strong",{children:"Patient ID:"})," ",o.patientId]}),e.jsxs(y,{variant:"body2",gutterBottom:!0,children:[e.jsx("strong",{children:"Test Duration:"})," ",a.testDuration," seconds"]}),e.jsxs(y,{variant:"body2",gutterBottom:!0,children:[e.jsx("strong",{children:"Tested Frequencies:"})," ",a.userThresholds.filter(c=>c.responseStatus==="threshold").length]}),e.jsxs(y,{variant:"body2",gutterBottom:!0,children:[e.jsx("strong",{children:"Hearing Loss Type:"})," ",f?.hearingLossType.replace("_"," ")]})]}),e.jsxs(H,{elevation:2,sx:{p:2,mb:3},children:[e.jsxs(m,{sx:{display:"flex",justifyContent:"space-between",alignItems:"center",mb:2},children:[e.jsx(y,{variant:"h6",children:"Accuracy Rating"}),e.jsx(O,{label:b.label,color:b.color,icon:b.icon,sx:{fontWeight:"bold"}})]}),e.jsx(Te,{children:e.jsx(ce,{size:"small",children:e.jsxs(de,{children:[e.jsxs(_,{children:[e.jsx(q,{children:e.jsx("strong",{children:"Overall Accuracy"})}),e.jsxs(q,{align:"right",children:[j.accuracy,"%"]})]}),e.jsxs(_,{children:[e.jsx(q,{children:"Exact Matches"}),e.jsxs(q,{align:"right",children:[j.exactMatch,"%"]})]}),e.jsxs(_,{children:[e.jsx(q,{children:"Within 5 dB"}),e.jsxs(q,{align:"right",children:[j.within5dB,"%"]})]}),e.jsxs(_,{children:[e.jsx(q,{children:"Within 10 dB"}),e.jsxs(q,{align:"right",children:[j.within10dB,"%"]})]}),e.jsxs(_,{children:[e.jsx(q,{children:"Missed Thresholds"}),e.jsx(q,{align:"right",children:j.missedThresholds})]})]})})})]})]}),e.jsxs(m,{sx:{flex:1},children:[a.technicalErrors.length>0&&e.jsxs(G,{severity:"warning",sx:{mb:3},children:[e.jsx(ge,{children:"Technical Errors Detected"}),e.jsx("ul",{style:{margin:0,paddingLeft:20},children:a.technicalErrors.map((c,i)=>e.jsx("li",{children:c},i))})]}),e.jsxs(H,{elevation:2,sx:{p:2},children:[e.jsx(y,{variant:"h6",gutterBottom:!0,children:"Educational Notes"}),e.jsxs(y,{variant:"body2",paragraph:!0,children:[f?.hearingLossType==="normal"&&"This patient has normal hearing across all frequencies tested. Key indicators include thresholds better than 25dB HL across the spectrum.",f?.hearingLossType==="conductive"&&"This patient shows a conductive hearing loss pattern, characterized by air-bone gaps. This indicates a problem in the outer or middle ear affecting sound transmission.",f?.hearingLossType==="sensorineural"&&"This patient has a sensorineural hearing loss pattern. Air and bone conduction thresholds are similar, indicating the loss is in the cochlea or neural pathway.",f?.hearingLossType==="mixed"&&"This patient shows a mixed hearing loss with both conductive and sensorineural components. Note the elevated bone conduction thresholds and additional air-bone gaps.",f?.hearingLossType==="asymmetrical"&&"This patient has asymmetrical hearing loss with different thresholds between the left and right ears. This pattern requires additional diagnostic testing and may indicate unilateral pathology."]}),e.jsx(y,{variant:"subtitle2",gutterBottom:!0,children:"Hughson-Westlake Protocol Reminder:"}),e.jsxs("ul",{children:[e.jsx("li",{children:"Begin testing at 1000 Hz in the better ear"}),e.jsx("li",{children:"Present tones for 1-2 seconds with varied intervals"}),e.jsx("li",{children:"Use 10 dB steps down after response until no response"}),e.jsx("li",{children:"Use 5 dB steps up until response"}),e.jsx("li",{children:"Threshold is the lowest level with 2 out of 3 responses"}),e.jsx("li",{children:"Proceed with 2000, 4000, 8000, then 500, 250 Hz"}),e.jsx("li",{children:"Retest 1000 Hz to verify reliability"})]})]})]})]})}),e.jsx(xe,{value:n,index:1,children:e.jsxs(m,{sx:{display:"flex",flexDirection:"column",alignItems:"center",width:"100%",minHeight:"600px"},children:[e.jsx(m,{sx:{width:"100%",maxWidth:"1000px",height:"auto",minHeight:"500px",aspectRatio:"4/3",mb:3},children:e.jsx(js,{thresholds:a.userThresholds,compareThresholds:f?.thresholds,title:"Test Results vs. Actual Thresholds"})}),e.jsx(y,{variant:"subtitle2",color:"text.secondary",sx:{mt:2},children:"Solid lines: Your test results | Dashed lines: Actual patient thresholds"}),e.jsxs(G,{severity:"info",sx:{mt:3,width:"100%"},children:[e.jsx(ge,{children:"Audiogram Interpretation Guide"}),e.jsxs(y,{variant:"body2",children:[e.jsx("strong",{children:"Normal hearing:"})," Thresholds better than 25 dB HL",e.jsx("br",{}),e.jsx("strong",{children:"Mild hearing loss:"})," 26-40 dB HL",e.jsx("br",{}),e.jsx("strong",{children:"Moderate hearing loss:"})," 41-55 dB HL",e.jsx("br",{}),e.jsx("strong",{children:"Moderately severe hearing loss:"})," 56-70 dB HL",e.jsx("br",{}),e.jsx("strong",{children:"Severe hearing loss:"})," 71-90 dB HL",e.jsx("br",{}),e.jsx("strong",{children:"Profound hearing loss:"})," Greater than 90 dB HL"]})]})]})}),e.jsxs(xe,{value:n,index:2,children:[e.jsx(Te,{component:H,elevation:2,children:e.jsxs(ce,{sx:{minWidth:650},children:[e.jsx(ve,{children:e.jsxs(_,{children:[e.jsx(q,{children:"Frequency (Hz)"}),e.jsx(q,{children:"Ear"}),e.jsx(q,{children:"Test Type"}),e.jsx(q,{children:"Your Result (dB HL)"}),e.jsx(q,{children:"Actual Threshold (dB HL)"}),e.jsx(q,{children:"Difference"}),e.jsx(q,{children:"Status"})]})}),e.jsx(de,{children:a.userThresholds.map((c,i)=>{const u=f?.thresholds.find(p=>p.frequency===c.frequency&&p.ear===c.ear&&p.testType===c.testType);let g=0,x="Untested";return u&&c.responseStatus==="threshold"&&u.responseStatus==="threshold"?(g=Math.abs(c.hearingLevel-u.hearingLevel),g===0?x="Exact Match":g<=5?x="Within 5 dB":g<=10?x="Within 10 dB":x="Significant Deviation"):c.responseStatus==="threshold"&&(x="Tested"),e.jsxs(_,{children:[e.jsx(q,{children:c.frequency}),e.jsx(q,{children:c.ear==="left"?"Left":"Right"}),e.jsx(q,{children:c.testType.replace("_"," ")}),e.jsx(q,{children:c.hearingLevel}),e.jsx(q,{children:u?.hearingLevel||"N/A"}),e.jsx(q,{children:c.responseStatus==="threshold"?`${g} dB`:"N/A"}),e.jsx(q,{children:e.jsx(O,{label:x,size:"small",color:x==="Exact Match"?"success":x==="Within 5 dB"?"primary":x==="Within 10 dB"?"info":x==="Significant Deviation"?"error":"default"})})]},i)})})]})}),a.technicalErrors.length>0&&e.jsxs(H,{elevation:2,sx:{mt:3,p:2},children:[e.jsx(y,{variant:"h6",gutterBottom:!0,children:"Technical Errors Analysis"}),e.jsx("ul",{children:a.technicalErrors.map((c,i)=>e.jsx("li",{children:e.jsx(y,{variant:"body2",children:c})},i))}),e.jsxs(G,{severity:"info",sx:{mt:2},children:[e.jsx(ge,{children:"Improvement Suggestions"}),e.jsxs(y,{variant:"body2",children:[a.technicalErrors.some(c=>c.includes("Skipped"))&&`• Ensure all frequencies are tested for complete assessment
`,a.technicalErrors.some(c=>c.includes("Insufficient"))&&`• Collect at least 3 responses at threshold level
`,a.technicalErrors.some(c=>c.includes("too high"))&&`• Start at more appropriate levels (typically 30-40 dB HL)
`,"Practice proper step sizes: 10 dB down after response, 5 dB up until response"]})]})]})]})]}),e.jsx(ae,{sx:{my:3}}),e.jsxs(Oe,{direction:{xs:"column",sm:"row"},spacing:2,justifyContent:"space-between",children:[e.jsx(m,{children:e.jsx(I,{variant:"contained",color:"primary",onClick:t,children:"Start New Test"})}),e.jsxs(m,{sx:{display:"flex",gap:2},children:[e.jsx(I,{variant:"outlined",startIcon:e.jsx(jt,{}),disabled:!0,children:"Share Results"}),e.jsx(I,{variant:"outlined",startIcon:e.jsx(St,{}),onClick:T,disabled:s,children:s?"Exporting...":"Export PDF"})]})]})]})})},ks=()=>{const[o,t]=w.useState([]),[n,r]=w.useState([]),[s,l]=w.useState(null),[d,a]=w.useState(""),[f,S]=w.useState("all"),[j,C]=w.useState("all"),[T,L]=w.useState(!1),[b,c]=w.useState(null),[i,u]=w.useState(1),[g]=w.useState(6),[x,p]=w.useState(!1),h=ie();Re(h.breakpoints.down("md")),w.useEffect(()=>{const v=Se.getAllPatients();t(v),r(v)},[]),w.useEffect(()=>{let v=o;d&&(v=v.filter($=>$.name.toLowerCase().includes(d.toLowerCase())||$.description.toLowerCase().includes(d.toLowerCase())||$.id.toLowerCase().includes(d.toLowerCase()))),f!=="all"&&(v=v.filter($=>$.difficulty===f)),j!=="all"&&(v=v.filter($=>$.hearingLossType===j)),r(v),u(1)},[d,f,j,o]);const k=v=>{a(v.target.value)},B=v=>{S(v.target.value)},z=v=>{C(v.target.value)},F=v=>{l(v)},Y=()=>{L(!0),c(null)},M=()=>{L(!1),c(null)},V=v=>{L(!1),c(v)},U=()=>{c(null),l(null)},A=(v,$)=>{u($)},Q=i*g,J=Q-g,K=n.slice(J,Q),Z=Math.ceil(n.length/g),ne=()=>{a(""),S("all"),C("all"),p(!1)};return b?e.jsx(fe,{maxWidth:"lg",sx:{py:4},children:e.jsx(Ss,{session:b,onNewTest:U})}):T&&s?e.jsx(fe,{maxWidth:"lg",sx:{py:4},children:e.jsx(bs,{patient:s,onComplete:V,onCancel:M})}):e.jsxs(fe,{maxWidth:"lg",sx:{mt:{xs:2,md:4},mb:6},children:[e.jsx(y,{variant:"h4",gutterBottom:!0,children:"Virtual Patients"}),e.jsx(y,{variant:"body1",paragraph:!0,color:"text.secondary",children:"Select a virtual patient to practice your audiometry skills. Each patient has a unique hearing profile that simulates different types of hearing loss."}),e.jsx(m,{sx:{mb:{xs:2,md:4}},children:e.jsxs(E,{container:!0,spacing:{xs:1,md:2},alignItems:"center",children:[e.jsx(E,{item:!0,xs:12,md:6,children:e.jsx(Ct,{fullWidth:!0,variant:"outlined",placeholder:"Search patients...",value:d,onChange:k,InputProps:{startAdornment:e.jsx(qt,{position:"start",children:e.jsx(Bt,{})})},size:"small",sx:{mb:{xs:1,md:0}}})}),e.jsx(E,{item:!0,xs:12,md:6,children:e.jsxs(m,{sx:{display:"flex",gap:{xs:1,md:2},justifyContent:{xs:"space-between",md:"flex-end"},flexWrap:"wrap"},children:[e.jsx(I,{variant:"outlined",startIcon:e.jsx(kt,{}),onClick:()=>p(!0),size:"small",sx:{flex:{xs:1,sm:"initial"}},children:"Filters"}),s?e.jsx(I,{variant:"contained",color:"primary",startIcon:e.jsx(Ce,{}),onClick:Y,size:"small",sx:{flex:{xs:1,sm:"initial"}},children:"Start Testing"}):e.jsx(I,{variant:"outlined",color:"secondary",startIcon:e.jsx($t,{}),disabled:!0,size:"small",sx:{flex:{xs:1,sm:"initial"}},children:"Add Patient"})]})})]})}),(f!=="all"||j!=="all")&&e.jsx(m,{sx:{mb:3},children:e.jsxs(Oe,{direction:{xs:"column",sm:"row"},spacing:1,alignItems:{xs:"flex-start",sm:"center"},sx:{flexWrap:"wrap",gap:1},children:[e.jsx(y,{variant:"body2",children:"Active Filters:"}),e.jsxs(m,{sx:{display:"flex",flexWrap:"wrap",gap:1},children:[f!=="all"&&e.jsx(O,{label:`Difficulty: ${f}`,onDelete:()=>S("all"),size:"small",color:"primary"}),j!=="all"&&e.jsx(O,{label:`Type: ${j.replace("_"," ")}`,onDelete:()=>C("all"),size:"small",color:"secondary"}),e.jsx(I,{size:"small",onClick:ne,children:"Clear All"})]})]})}),e.jsxs(Fe,{open:x,onClose:()=>p(!1),fullWidth:!0,maxWidth:"xs",children:[e.jsx(Me,{children:"Filter Patients"}),e.jsxs(Ne,{sx:{pt:1},children:[e.jsxs(qe,{fullWidth:!0,margin:"normal",children:[e.jsx(Be,{children:"Difficulty Level"}),e.jsxs(ke,{value:f,onChange:B,label:"Difficulty Level",children:[e.jsx(X,{value:"all",children:"All Levels"}),e.jsx(X,{value:"beginner",children:"Beginner"}),e.jsx(X,{value:"intermediate",children:"Intermediate"}),e.jsx(X,{value:"advanced",children:"Advanced"})]})]}),e.jsxs(qe,{fullWidth:!0,margin:"normal",children:[e.jsx(Be,{children:"Hearing Loss Type"}),e.jsxs(ke,{value:j,onChange:z,label:"Hearing Loss Type",children:[e.jsx(X,{value:"all",children:"All Types"}),e.jsx(X,{value:"normal",children:"Normal Hearing"}),e.jsx(X,{value:"conductive",children:"Conductive"}),e.jsx(X,{value:"sensorineural",children:"Sensorineural"}),e.jsx(X,{value:"mixed",children:"Mixed"}),e.jsx(X,{value:"asymmetrical",children:"Asymmetrical"})]})]})]}),e.jsxs(Pe,{children:[e.jsx(I,{onClick:ne,children:"Reset"}),e.jsx(I,{onClick:()=>p(!1),color:"primary",children:"Apply"})]})]}),e.jsx(ae,{sx:{mb:{xs:2,md:4}}}),n.length>0?e.jsxs(e.Fragment,{children:[e.jsx(E,{container:!0,spacing:{xs:1,sm:2,md:3},children:K.map(v=>e.jsx(E,{item:!0,xs:12,sm:6,md:4,children:e.jsx(Xt,{patient:v,onSelect:F,selected:s?.id===v.id})},v.id))}),e.jsx(m,{sx:{display:"flex",justifyContent:"center",mt:{xs:2,md:4}},children:e.jsx(It,{count:Z,page:i,onChange:A,color:"primary",showFirstButton:!0,showLastButton:!0,size:"small"})})]}):e.jsxs(H,{elevation:0,sx:{p:{xs:2,md:4},textAlign:"center",bgcolor:h.palette.mode==="dark"?te(h.palette.background.paper,.6):"#f5f5f5",borderRadius:2},children:[e.jsx(y,{variant:"h6",gutterBottom:!0,children:"No matching patients found"}),e.jsx(y,{variant:"body2",color:"text.secondary",children:"Try adjusting your search criteria or filters to find a patient."}),e.jsx(I,{variant:"outlined",sx:{mt:2},onClick:ne,children:"Clear All Filters"})]}),s&&e.jsxs(H,{elevation:3,sx:{mt:{xs:2,md:4},p:{xs:2,md:3},bgcolor:h.palette.mode==="dark"?h.palette.background.paper:"#f9f9f9",borderRadius:2,border:`1px solid ${h.palette.divider}`},children:[e.jsxs(y,{variant:"h5",gutterBottom:!0,children:["Selected Patient: ",s.name]}),e.jsx(y,{variant:"body1",paragraph:!0,children:s.description}),e.jsxs(m,{sx:{display:"flex",gap:1,mb:2,flexWrap:"wrap"},children:[e.jsx(O,{label:`Difficulty: ${s.difficulty}`,color:s.difficulty==="beginner"?"success":s.difficulty==="intermediate"?"warning":"error"}),e.jsx(O,{label:`Type: ${s.hearingLossType.replace("_"," ")}`,color:"secondary"})]}),e.jsx(I,{variant:"contained",color:"primary",startIcon:e.jsx(Ce,{}),onClick:Y,size:"large",fullWidth:!0,sx:{display:{xs:"flex",md:"inline-flex"},width:{xs:"100%",md:"auto"}},children:"Begin Audiometry Test"})]})]})};export{ks as default};
